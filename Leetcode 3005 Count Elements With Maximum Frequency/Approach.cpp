ЁЯФН рж╕ржорж╕рзНржпрж╛рж░ ржмрж░рзНржгржирж╛ (Problem Description in Bangla):
рждрзЛржорж╛ржХрзЗ ржПржХржЯрж┐ nums ржирж╛ржорзЗрж░ ржкрзВрж░рзНржгрж╕ржВржЦрзНржпрж╛рж░ ржЕрзНржпрж╛рж░рзЗ ржжрзЗржУрзЯрж╛ ржЖржЫрзЗред
рждрзБржорж┐ ржЪрзЗржХ ржХрж░рзЛ ржХрзЛржи рж╕ржВржЦрзНржпрж╛ржЧрзБрж▓рзЛ рж╕ржмржЪрзЗрзЯрзЗ ржмрзЗрж╢рж┐ржмрж╛рж░ ржПрж╕рзЗржЫрзЗ (maximum frequency)ред рждрж╛рж░ржкрж░ ржР рж╕ржВржЦрзНржпрж╛ржЧрзБрж▓рзЛрж░ ржорзЛржЯ ржХрждржмрж╛рж░ ржПрж╕рзЗржЫрзЗ, рж╕рзЗржЯрж╛ржЗ return ржХрж░ржмрзЗред

тЬЕ рждрзЛржорж╛рж░ ржЪрж┐ржирзНрждрж╛ржзрж╛рж░рж╛ (Approach by You in Bangla):
frequency count: ржкрзНрж░рждрж┐ржЯрж┐ рж╕ржВржЦрзНржпрж╛рж░ ржХрзЯржмрж╛рж░ ржПрж╕рзЗржЫрзЗ рж╕рзЗржЯрж╛ ржЧрзБржгрждрзЗ unordered_map ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзЗржЫрзЛред

store frequency: map ржерзЗржХрзЗ frequency ржЧрзБрж▓рзЛ ржЖрж▓рж╛ржжрж╛ ржХрж░рзЗ reserve ржнрзЗржХрзНржЯрж░рзЗ рж░рзЗржЦрзЗржЫрзЛред

find max frequency: reserve ржнрзЗржХрзНржЯрж░рзЗ рж▓рзБржк ржХрж░рзЗ рж╕ржмржЪрзЗрзЯрзЗ ржмрзЬ frequency ржмрзЗрж░ ржХрж░рзЗржЫрзЛред

sum all max frequency: ржПрж░ржкрж░ ржпрзЗрж╕ржм frequency max ржПрж░ рж╕ржорж╛ржи, рж╕рзЗржЧрзБрж▓рзЛрж░ ржпрзЛржЧржлрж▓ return ржХрж░рзЗржЫрзЛред

ЁЯУШ ржХрзЛржб ржПржмржВ рж▓рж╛ржЗржирзЗ рж▓рж╛ржЗржирзЗ ржмрж┐рж╢рзНрж▓рзЗрж╖ржг (Code + Bangla Explanation):
cpp
Copy
Edit
class Solution 
{
public:
    int maxFrequencyElements(vector<int>& nums) 
    {
        unordered_map<int,int>freq;
ЁЯСЙ unordered_map<int,int> ржжрж┐рзЯрзЗ ржкрзНрж░рждрж┐ржЯрж┐ рж╕ржВржЦрзНржпрж╛рж░ frequency ржЧрзЛржирж╛рж░ ржЬржирзНржп ржПржХржЯрж╛ freq ржорзНржпрж╛ржк ржмрж╛ржирж╛рж▓рзЗред

cpp
Copy
Edit
        for(int i=0;i<nums.size();i++)
        {
          freq[nums[i]]++;
        }
ЁЯСЙ ржкрзБрж░рзЛ nums ржЕрзНржпрж╛рж░рзЗрждрзЗ рж▓рзБржк ржЪрж╛рж▓рж┐рзЯрзЗ ржкрзНрж░рждрж┐ржЯрж┐ рж╕ржВржЦрзНржпрж╛рж░ frequency ржмрж╛рзЬрж╛ржирзЛ рж╣ржЪрзНржЫрзЗред

ЁЯУМ ржЙржжрж╛рж╣рж░ржг:
Input тЖТ nums = [1,2,2,3,1,4]
freq тЖТ {1:2, 2:2, 3:1, 4:1}

cpp
Copy
Edit
        vector<int>reserve;
        for(auto it:freq)
        {
          reserve.push_back(it.second);
        }
ЁЯСЙ ржкрзНрж░рждрж┐ржЯрж┐ рж╕ржВржЦрзНржпрж╛рж░ frequency ржЖрж▓рж╛ржжрж╛ ржПржХржЯрж╛ vector reserve ржП рж░рж╛ржЦрж╛ рж╣рж▓рзЛред
ржПржЯрж╛ ржПржХржЯрзБ ржЕрждрж┐рж░рж┐ржХрзНржд ржХрж╛ржЬ тАФ рж╕рж░рж╛рж╕рж░рж┐ map ржерзЗржХрзЗржУ ржХрж╛ржЬ ржХрж░рж╛ ржпрзЗрждред

ЁЯУМ reserve = [2, 2, 1, 1]

cpp
Copy
Edit
        int max=reserve[0];
        for(int j=1;j<reserve.size();j++)
        {
          if(reserve[j]>max)
          {
            max=reserve[j];
          }
        }
ЁЯСЙ рж▓рзБржк ржЪрж╛рж▓рж┐рзЯрзЗ reserve-ржПрж░ ржоржзрзНржпрзЗ рж╕ржмржЪрзЗрзЯрзЗ ржмрзЬ frequency ржЦрзБржБржЬрзЗ ржмрзЗрж░ ржХрж░ржЫрзЛред

ЁЯУМ max = 2 (ржХрж╛рж░ржг 2 ржмрж╛рж░ ржПрж╕рзЗржЫрзЗ 1 ржПржмржВ 2)

cpp
Copy
Edit
        int sum=0;
        for(int k=0;k<reserve.size();k++)
        {
          if(reserve[k]==max)
          {
            sum+=reserve[k];
          }
        }
ЁЯСЙ ржПржмрж╛рж░ ржпрзЗрж╕ржм frequency max ржПрж░ рж╕ржорж╛ржи, рждрж╛ржжрзЗрж░ ржпрзЛржЧржлрж▓ ржмрзЗрж░ ржХрж░ржЫрзЛред
ржорж╛ржирзЗ 1 ржПржмржВ 2 ржжрзБржЗржмрж╛рж░ ржХрж░рзЗ ржПрж╕рзЗржЫрзЗ тЖТ 2+2 = 4

cpp
Copy
Edit
       return sum;
    }
};
ЁЯСЙ sum рж░рж┐ржЯрж╛рж░рзНржи ржХрж░ржЫрзЛ, ржпрзЗржЯрж╛ржЗ ржЪрзВрзЬрж╛ржирзНржд ржЙрждрзНрждрж░ред

ЁЯзо ржорзНржпрж╛ржерзЗржорзЗржЯрж┐ржХрзНржпрж╛рж▓ ржмрж┐рж╢рзНрж▓рзЗрж╖ржг (Mathematical Explanation on Test Case):
ЁЯФв Example 1:
Input: [1,2,2,3,1,4]
Step 1: frequency: {1:2, 2:2, 3:1, 4:1}
Step 2: max frequency = 2
Step 3: ржпрж╛ржжрзЗрж░ frequency = 2 тЖТ 1 & 2
Step 4: рждрж╛ржжрзЗрж░ total occurrence = 2 + 2 = 4 тЬЕ

ЁЯФв Example 2:
Input: [1,2,3,4,5]
Step 1: frequency: {1:1, 2:1, 3:1, 4:1, 5:1}
Step 2: max frequency = 1
Step 3: ржпрж╛ржжрзЗрж░ frequency = 1 тЖТ рж╕ржмржЧрзБрж▓рзЛ
Step 4: total occurrence = 1+1+1+1+1 = 5 тЬЕ

ЁЯза Time & Space Complexity:
Time Complexity: O(n) тЖТ ржПржХржмрж╛рж░ nums-ржП, ржПржХржмрж╛рж░ freq-ржП

Space Complexity: O(n) тЖТ unordered_map & reserve vector worst case n elements

ЁЯУВ GitHub Markdown рж╕ржВрж░ржХрзНрж╖ржгржпрзЛржЧрзНржпржнрж╛ржмрзЗ:
markdown
Copy
Edit
### ЁЯза Problem: Max Frequency Elements

рждрзЛржорж╛ржХрзЗ ржПржХржЯрж┐ ржкрзВрж░рзНржгрж╕ржВржЦрзНржпрж╛рж░ ржЕрзНржпрж╛рж░рзЗ `nums` ржжрзЗржУрзЯрж╛ ржЖржЫрзЗред ржХрзЛржи рж╕ржВржЦрзНржпрж╛ржЧрзБрж▓рзЛ рж╕ржмржЪрзЗрзЯрзЗ ржмрзЗрж╢рж┐ржмрж╛рж░ (maximum frequency) ржПрж╕рзЗржЫрзЗ, рждрж╛ржжрзЗрж░ ржорзЛржЯ ржХрзЯржмрж╛рж░ ржПрж╕рзЗржЫрзЗ рждрж╛ return ржХрж░рждрзЗ рж╣ржмрзЗред

---

### тЬЕ Approach (ржирж┐ржЬрж╕рзНржм ржЪрж┐ржирзНрждрж╛ржзрж╛рж░рж╛):
1. `unordered_map` ржжрж┐рзЯрзЗ ржкрзНрж░рждрж┐ржЯрж┐ рж╕ржВржЦрзНржпрж╛рж░ frequency count ржХрж░рж┐ред
2. frequency ржЧрзБрж▓рзЛ ржПржХржЯрж┐ `reserve` ржнрзЗржХрзНржЯрж░рзЗ рж░рж╛ржЦрж┐ред
3. рж╕рж░рзНржмрзЛржЪрзНржЪ frequency (max) ржмрзЗрж░ ржХрж░рж┐ред
4. ржпрзЗрж╕ржм рж╕ржВржЦрзНржпрж╛рж░ frequency == max, рждрж╛ржжрзЗрж░ occurrence ржпрзЛржЧржлрж▓ ржХрж░рж┐ред

---

### тП▒я╕П Time Complexity: O(n)
### ЁЯУж Space Complexity: O(n)

---

### ЁЯФБ ржЙржжрж╛рж╣рж░ржг ржмрж┐рж╢рзНрж▓рзЗрж╖ржг:

- [1,2,2,3,1,4] тЖТ `{1:2, 2:2}` тЖТ 2+2 = тЬЕ `4`
- [1,2,3,4,5] тЖТ рж╕ржм ржПржХржмрж╛рж░ тЖТ 1+1+1+1+1 = тЬЕ `5`
