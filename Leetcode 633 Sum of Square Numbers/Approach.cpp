ржкрзНрж░ржержорзЗржЗ рж╕ржорж╕рзНржпрж╛рж░ ржЧрж╛ржгрж┐рждрж┐ржХ ржмрзНржпрж╛ржЦрзНржпрж╛ ржХрж░рж┐ржГ
ржзрж░рж╛ ржпрж╛ржХ, ЁЭСО a ржПржмржВ ЁЭСП b рж╣рж▓ рж╕рзЗржЗ ржжрзБржЗржЯрж┐ ржкрзВрж░рзНржгрж╕ржВржЦрзНржпрж╛ ржпрж╛ржжрзЗрж░ ржмрж░рзНржЧржлрж▓ ржпрзЛржЧржлрж▓ ЁЭСР cред рждрж╛рж╣рж▓рзЗ,ЁЭСО^2+ЁЭСП^2=ЁЭСР.a^2+b^2=c.
ржЖржорж░рж╛ ЁЭСО a ржПрж░ ржЬржирзНржп 0 0 ржерзЗржХрзЗ ЁЭСР c ржкрж░рзНржпржирзНржд ржзрж░рж╛ ржпрж╛ржХ (ржХрж╛рж░ржг ЁЭСО^2тЙдЁЭСР &&a^2 тЙдc)ред
ржкрзНрж░рждрж┐ржЯрж┐ ЁЭСО a ржПрж░ ржЬржирзНржп, ЁЭСП^2=ЁЭСРтИТЁЭСО^2.and b^2=cтИТa^2  рж╣ржмрзЗред 
ржПржЦржи ржЖржорж╛ржжрзЗрж░ ржХрж╛ржЬ рж╣рж▓рзЛ ржПржЗ ЁЭСП^2.b^2рж╕ржВржЦрзНржпрж╛ржЯрж┐ рж╕ржорзНржкрзВрж░рзНржг ржмрж░рзНржЧ рж╕ржВржЦрзНржпрж╛ ржХрж┐ржирж╛ ржкрж░рзАржХрзНрж╖рж╛ ржХрж░рж╛ред
рж╕ржорж╛ржзрж╛ржирзЗрж░ ржЕрзНржпрж╛рж▓ржЧрж░рж┐ржжржорзЗрж░ ржзрж╛рж░ржгрж╛ (Approach):
ржкрзНрж░ржержорзЗ,
ЁЭСО a ржПрж░ ржорж╛ржи рзж ржерзЗржХрзЗ рж╢рзБрж░рзБ ржХрж░рзЗ ЁЭСР cржкрж░рзНржпржирзНржд ржмрж╛ржбрж╝рж╛ржмрзЗред
ржкрзНрж░рждрж┐ржЯрж┐ ЁЭСО a ржПрж░ ржЬржирзНржп, ЁЭСП^2=ЁЭСРтИТЁЭСО^2  ржирж┐рж░рзНржгржпрж╝ ржХрж░ржмрзЗред
рждрж╛рж░ржкрж░ ЁЭСП^2 рж╕ржорзНржкрзВрж░рзНржг ржмрж░рзНржЧ рж╕ржВржЦрзНржпрж╛ ржХрж┐ржирж╛ ржЪрзЗржХ ржХрж░ржмрзЗред
тАФ ржПржЯрж╛ ржЪрзЗржХ ржХрж░рж╛рж░ ржЬржирзНржп ржмрж╛ржЗржирж╛рж░рж┐ рж╕рж╛рж░рзНржЪ ржмрзНржпржмрж╣рж╛рж░ ржХрж░ржмрзЗ IsSquare ржлрж╛ржВрж╢ржирзЗ, ржпрзЗржЯрж╛ ржжрзЗржЦрзЗ 
ЁЭСП;b ржЖржЫрзЗ ржХрж┐ржирж╛ ржпрзЗржЯрж╛рж░ ржмрж░рзНржЧржлрж▓ ЁЭСП^2 ki b^2.
ржпржжрж┐ ржХрзЛржи ЁЭСО;a, ЁЭСП;b рж╕рзЗржЯ ржкрзЗржпрж╝рзЗ ржпрж╛ржпрж╝ рждрж╛рж╣рж▓рзЗ true рж░рж┐ржЯрж╛рж░рзНржи ржХрж░ржмрзЗ, ржирж╛ рж╣рж▓рзЗ false рж░рж┐ржЯрж╛рж░рзНржи ржХрж░ржмрзЗред

ржХрзЗржи ржмрж╛ржЗржирж╛рж░рж┐ рж╕рж╛рж░рзНржЪ ржмрзНржпржмрж╣рж╛рж░?:
---------------------
ржмрж░рзНржЧржорзВрж▓ ржмрзЗрж░ ржХрж░рж╛рж░ рж╕ржмржЪрзЗржпрж╝рзЗ ржХрж╛рж░рзНржпржХрж░ ржЙржкрж╛ржпрж╝ ржмрж╛ржЗржирж╛рж░рж┐ рж╕рж╛рж░рзНржЪред
ржХрж╛рж░ржг:
ЁЭСЫ n ржмрзЗрж░ ржХрж░рж╛рж░ рж╕ржоржпрж╝ ржмрж╛ржЗржирж╛рж░рж┐ рж╕рж╛рж░рзНржЪ ЁЭСВ(logЁЭСЫ)
O(logn) рж╕ржоржпрж╝ ржирзЗржпрж╝ред

рж╕рж░рж╛рж╕рж░рж┐ sqrt ржлрж╛ржВрж╢ржи ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж▓рзЗ ржлрзНрж▓рзЛржЯрж┐ржВ ржкржпрж╝рзЗржирзНржЯ ржЗрж╕рзНржпрзБ рж╣рждрзЗ ржкрж╛рж░рзЗ, ржЖрж░ ржмрж╛ржЗржирж╛рж░рж┐ рж╕рж╛рж░рзНржЪрзЗ ржкрзБрж░рзЛржкрзБрж░рж┐ ржЗржирзНржЯрж┐ржЬрж╛рж░ ржмрж░рзНржЧржорзВрж▓ ржирж┐рж╢рзНржЪрж┐ржд рж╣ржпрж╝ред

ржЕрзНржпрж╛рж▓ржЧрж░рж┐ржжржорзЗрж░ ржЬржЯрж┐рж▓рждрж╛ (Complexity):ЁЭСО a ржПрж░ ржЬржирзНржп рж▓рзБржк ржЪрж▓рзЗ ЁЭСВ(ЁЭСР).O(c) ржмрж╛рж░ред

ржкрзНрж░рждрж┐ржмрж╛рж░ ржмрж╛ржЗржирж╛рж░рж┐ рж╕рж╛рж░рзНржЪ ЁЭСВ(logЁЭСР)
O(logc) рж╕ржоржпрж╝ ржирзЗржпрж╝ред

рждрж╛ржЗ ржорзЛржЯ ржЬржЯрж┐рж▓рждрж╛ рж╣ржпрж╝ ЁЭСВ(ЁЭСРlogЁЭСР).
O(clogc), ржпрж╛ ржмрзЗрж╢ ржжрзНрж░рзБрждред
ржХрзЛржбрзЗрж░ рж▓рж╛ржЗржи ржмрж╛ржЗ рж▓рж╛ржЗржи ржмрзНржпрж╛ржЦрзНржпрж╛ (Bangla):

class Solution 
{
public:
    bool IsSquare(int a) // ржПржЗ ржлрж╛ржВрж╢ржи ржЪрзЗржХ ржХрж░рзЗ 'a' ржПржХржЯрж┐ ржкрзВрж░рзНржгрж╕ржВржЦрзНржпрж╛рж░ ржмрж░рзНржЧ ржХрж┐ржирж╛
    {
        int low=0;
        int high=a;
        bool issquare=false;
        while(low<=high)
        {
            int mid=(low+high)/2;
            if(1LL*mid*mid == a)  // ржпржжрж┐ mid ржПрж░ ржмрж░рзНржЧ a ржПрж░ рж╕ржорж╛ржи рж╣ржпрж╝, рждрж╛рж╣рж▓рзЗ рж╣рзНржпрж╛
            {
                issquare = true;
                break;
            }
            else if(1LL*mid*mid < a) // ржпржжрж┐ mid ржПрж░ ржмрж░рзНржЧ a ржПрж░ ржерзЗржХрзЗ ржЫрзЛржЯ рж╣ржпрж╝, рждрж╛рж╣рж▓рзЗ ржбрж╛ржи ржжрж┐ржХрзЗ ржпрж╛ржмрзЗ
            {
                low = mid+1;
            }
            else  // ржирж╛ рж╣рж▓рзЗ ржмрж╛ржо ржжрж┐ржХрзЗ ржпрж╛ржмрзЗ
            {
                high = mid-1;
            }
        }
        return issquare;
    }

    bool judgeSquareSum(int c) 
    {
        long long low=0;
        long long high=(long long)c;

        bool judge=false;
        for(long long i=low; i*i <= high; i++) // i ржЪрж▓ржмрзЗ 0 ржерзЗржХрзЗ sqrt(c) ржкрж░рзНржпржирзНржд
        {
            long long b = high - i*i;  // b^2 = c - a^2 (ржПржЦрж╛ржирзЗ a = i)
            if(b >= 0 && b <= INT_MAX && IsSquare((int)b))  // ржпржжрж┐ b ржкрзВрж░рзНржг ржмрж░рзНржЧ рж╣ржпрж╝, рждрж╛рж╣рж▓рзЗ true
            {
                judge=true;
                break;
            }
        }
        return judge;  // ржХрзЛржи ржкрзЗржпрж╝ржирж┐ ржорж╛ржирзЗ false рж░рж┐ржЯрж╛рж░рзНржи ржХрж░ржмрзЗ
    }
};
ржХрж┐ржнрж╛ржмрзЗ рждрзБржорж┐ ржПржнрж╛ржмрзЗ ржЪрж┐ржирзНрждрж╛ ржХрж░рждрзЗ ржкрж╛рж░рзЛ (Mathematical thinking):
рждрзЛржорж╛рж░ ржЬрж╛ржирждрзЗ рж╣ржмрзЗ 
ЁЭСО^2+ЁЭСП^2=ЁЭСР.&& a^2 + b^2 =c рж╕ржорж╛ржзрж╛ржи ржЖржЫрзЗ ржХрж┐ржирж╛ред
ЁЭСО,a ржПрж░ рж╕ржорзНржнрж╛ржмрзНржп ржорж╛ржи рзж ржерзЗржХрзЗ ЁЭСР;c ржкрж░рзНржпржирзНржд, ржХрж╛рж░ржг ЁЭСО^2.a^2 ржХржЦржирзЛ ЁЭСР c ржПрж░ ржЪрзЗржпрж╝рзЗ ржмржбрж╝ рж╣рждрзЗ ржкрж╛рж░рзЗ ржирж╛ред
ржкрзНрж░рждрж┐ржЯрж┐ ЁЭСО;a ржПрж░ ржЬржирзНржп ЁЭСП^2=ЁЭСРтИТЁЭСО^2.&& b^2=cтИТa^2 ред
ржПржЦржи рждрзЛржорж╛ржХрзЗ ЁЭСП^2.b^2 ржПрж░ ржмрж░рзНржЧржорзВрж▓ ЁЭСП.&&
b ржЗржирзНржЯрж┐ржЬрж╛рж░ ржХрж┐ржирж╛ ржирж┐рж╢рзНржЪрж┐ржд ржХрж░рждрзЗ рж╣ржмрзЗред

ржЗржирзНржЯрж┐ржЬрж╛рж░ ржХрж┐ржирж╛ ржЪрзЗржХ ржХрж░рж╛рж░ ржЬржирзНржп ржмрж╛ржЗржирж╛рж░рж┐ рж╕рж╛рж░рзНржЪрзЗрж░ ржорждрзЛ ржжрзНрж░рзБржд ржкржжрзНржзрждрж┐ ржмрзНржпржмрж╣рж╛рж░ ржХрж░ржмрзЗред

ржпржжрж┐ ржХрзЛржирзЛ {ЁЭСО,ЁЭСП};{a,b} рж╕рзЗржЯ ржорж┐рж▓рзЗ ржпрж╛ржпрж╝, рж╕ржорж╛ржзрж╛ржи ржкрж╛ржУржпрж╝рж╛ ржЧрзЗржЫрзЗред
ржПржЗ ржкржжрзНржзрждрж┐ ржХрзЗржи ржжрзНрж░рзБржд ржПржмржВ ржмрж╛ржЬрж╛рж░рзЗрж░ ржЕржирзНржпрж╛ржирзНржп ржкржжрзНржзрждрж┐рж░ рждрзБрж▓ржирж╛ржпрж╝ ржнрж╛рж▓рзЛ?
ржмрзНрж░рзБржЯржлрзЛрж░рзНрж╕: 
---------
рж╕ржм (ЁЭСО,ЁЭСП)&&(a,b) ржЬрзЛржбрж╝рж╛ ржЯрзНрж░рж╛ржЗ ржХрж░рж▓рзЗ ЁЭСВ(ЁЭСР).O(c) рж╕ржоржпрж╝ рж▓рж╛ржЧржмрзЗ, ржпрж╛ ржмржбрж╝ ЁЭСР;c ржПрж░ ржЬржирзНржп ржЕрж╕ржорзНржнржмред
ржПржЗ ржкржжрзНржзрждрж┐: 
ЁЭСО a рж╕рзАржорж┐ржд (ржорж╛рждрзНрж░ ЁЭСРc) ржПржмржВ ЁЭСП b ржкрж░рзАржХрзНрж╖рж╛ ржжрзНрж░рзБржд ржмрж╛ржЗржирж╛рж░рж┐ рж╕рж╛рж░рзНржЪрзЗред
рждрж╛ржЗ ЁЭСВ(ЁЭСРlogЁЭСР).O(clogc) ржпрж╛ ржЕржирзЗржХ ржжрзНрж░рзБрждред
рждрзЛржорж╛рж░ ржХрзЛржбрзЗрж░ ржорзНржпрж╛ржерзЗржорзНржпрж╛ржЯрж┐ржХрзНржпрж╛рж▓ рж▓ржЬрж┐ржХ ржЪрзЗржХ ржХрж░рж╛рж░ ржЬржирзНржп ржЫрзЛржЯ ржЙржжрж╛рж╣рж░ржг:
ржзрж░рж╛ ржпрж╛ржХ,ЁЭСР=5c=5редЁЭСЦ=0
i=0 тЖТ ЁЭСП=5тИТ0=5
b=5тИТ0=5 тЖТ рзл ржХрж┐ ржкрзВрж░рзНржг ржмрж░рзНржЧ? ржирж╛ред (sqrt(5)=2.23)
ЁЭСЦ=1 i=1 тЖТ ЁЭСП=5тИТ1=4
b=5тИТ1=4 тЖТ рзк ржХрж┐ ржкрзВрж░рзНржг ржмрж░рзНржЧ? рж╣рзНржпрж╛ржБ, 2*2=4 тЖТ рждрж╛ржЗ trueред
ржХрзЛржбрзЗрж░ рж╕рзНржЯрзЗржк ржмрж╛ржЗ рж╕рзНржЯрзЗржк рж░рж╛ржи:
рж▓рзБржк рж╢рзБрж░рзБ: i=0 to ЁЭСП=5тИТ0=5
b=5тИТ0=5, IsSquare(5) = false
i=1
ЁЭСП=5тИТ1=4.
b=5тИТ1=4, IsSquare(4) = true тЖТ loop break, return true

Full Code:
-----------
class Solution 
{
public:
 bool IsSquare(int  a)
 {
  int low=0;
  int high=a;
  bool issquare=false;
  while(low<=high)
  {
    int mid=(low+high)/2;
    if(1LL*mid*mid==a)
    {
             issquare=true;
             break;
    }
    else if(1LL*mid*mid<a)
     {
  low=mid+1;
}
else
{
  high=mid-1;
}
  }
  return issquare;
 }
  bool judgeSquareSum(int c) 
    {
       long long low=0;
     long long high=(long long)c;
       bool judge=false;
       for(long long i=low;i*i<=high;i++)
       {
            long long b=high-i*i;
              if(b>=0&&b<=INT_MAX&&IsSquare((int)b))
              {
                   judge=true;
                   break;
              }
       }
     
        return judge;
    }
    };



