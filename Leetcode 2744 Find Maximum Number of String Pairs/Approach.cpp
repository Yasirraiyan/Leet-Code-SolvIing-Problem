üîç ‡¶™‡ßç‡¶∞‡¶∂‡ßç‡¶® ‡¶¨‡¶ø‡¶∂‡ßç‡¶≤‡ßá‡¶∑‡¶£ (How you thought the approach):
‡¶™‡ßç‡¶∞‡¶∂‡ßç‡¶®‡ßá ‡¶¨‡¶≤‡¶æ ‡¶Ü‡¶õ‡ßá:

‡¶§‡ßã‡¶Æ‡¶æ‡¶ï‡ßá ‡¶è‡¶ï‡¶ü‡¶ø words ‡¶®‡¶æ‡¶Æ‡ßá‡¶∞ distinct strings ‡¶è‡¶∞ ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶∞‡ßá ‡¶¶‡ßá‡¶ì‡ßü‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá‡•§

words[i] ‡¶è‡¶¨‡¶Ç words[j] ‡¶§‡¶ñ‡¶®‡¶á ‡¶è‡¶ï‡¶ü‡¶ø ‡¶™‡ßá‡ßü‡¶æ‡¶∞ ‡¶§‡ßà‡¶∞‡¶ø ‡¶ï‡¶∞‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡¶¨‡ßá, ‡¶Ø‡¶¶‡¶ø words[i] == reverse(words[j]) ‡¶π‡ßü ‡¶è‡¶¨‡¶Ç i < j ‡¶∂‡¶∞‡ßç‡¶§‡¶ü‡¶ø ‡¶Æ‡ßá‡¶®‡ßá ‡¶ö‡¶≤‡ßá‡•§

‡¶™‡ßç‡¶∞‡¶§‡ßç‡¶Ø‡ßá‡¶ï‡¶ü‡¶ø ‡¶∏‡ßç‡¶ü‡ßç‡¶∞‡¶ø‡¶Ç ‡¶ï‡ßá‡¶¨‡¶≤ ‡¶è‡¶ï‡¶ü‡¶ø ‡¶™‡ßá‡ßü‡¶æ‡¶∞‡ßá‡¶á ‡¶•‡¶æ‡¶ï‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡¶¨‡ßá ‚Äî ‡¶Æ‡¶æ‡¶®‡ßá, ‡¶è‡¶ï‡¶¨‡¶æ‡¶∞ ‡¶Ø‡¶¶‡¶ø ‡¶ú‡ßã‡ßú‡¶æ ‡¶π‡ßü‡ßá ‡¶Ø‡¶æ‡ßü, ‡¶§‡¶æ‡¶π‡¶≤‡ßá ‡¶Ü‡¶∞ ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡¶æ ‡¶Ø‡¶æ‡¶¨‡ßá ‡¶®‡¶æ‡•§

üí° ‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ ‡¶ï‡ßã‡¶°‡ßá‡¶∞ ‡¶ö‡¶ø‡¶®‡ßç‡¶§‡¶æ‡¶≠‡¶æ‡¶¨‡¶®‡¶æ:
‡¶§‡ßÅ‡¶Æ‡¶ø CanMakePair() ‡¶®‡¶æ‡¶Æ‡ßá ‡¶è‡¶ï‡¶ü‡¶ø ‡¶´‡¶æ‡¶Ç‡¶∂‡¶® ‡¶≤‡¶ø‡¶ñ‡ßá‡¶õ‡ßã ‡¶Ø‡¶æ ‡¶ö‡ßá‡¶ï ‡¶ï‡¶∞‡ßá ‡¶¶‡ßá‡ßü a == reverse(b) ‡¶ï‡¶ø‡¶®‡¶æ‡•§

‡¶è‡¶∞‡¶™‡¶∞ ‡¶¶‡ßÅ‡¶á‡¶ü‡¶æ nested loop ‡¶¶‡¶ø‡ßü‡ßá i < j ‡¶∂‡¶∞‡ßç‡¶§‡ßá ‡¶∏‡¶¨ ‡¶ú‡ßã‡ßú‡¶æ ‡¶ö‡ßá‡¶ï ‡¶ï‡¶∞‡ßá‡¶õ‡ßã ‚Äî ‡¶Ø‡ßá‡¶ï‡ßã‡¶®‡ßã ‡¶¶‡ßÅ‡¶ü‡¶ø ‡¶∏‡ßç‡¶ü‡ßç‡¶∞‡¶ø‡¶Ç-‡¶è‡¶∞ ‡¶Æ‡¶ß‡ßç‡¶Ø‡ßá reverse ‡¶Æ‡¶ø‡¶≤‡¶≤‡ßá‡¶á count++ ‡¶ï‡¶∞‡ßá‡¶õ‡ßã‡•§

‡¶è‡¶á‡¶≠‡¶æ‡¶¨‡ßá, ‡¶§‡ßÅ‡¶Æ‡¶ø brute-force (‡¶ß‡ßÄ‡¶∞‡ßá ‡¶ï‡¶ø‡¶®‡ßç‡¶§‡ßÅ ‡¶∏‡¶π‡¶ú) ‡¶™‡¶¶‡ßç‡¶ß‡¶§‡¶ø‡¶§‡ßá ‡¶∏‡¶¨ ‡¶∏‡ßç‡¶ü‡ßç‡¶∞‡¶ø‡¶Ç ‡¶™‡ßá‡ßü‡¶æ‡¶∞‡¶ø‡¶Ç ‡¶ö‡ßá‡¶ï ‡¶ï‡¶∞‡ßá‡¶õ‡ßã‡•§

üß† ‡¶ï‡ßã‡¶° ‡¶¨‡¶ø‡¶∂‡ßç‡¶≤‡ßá‡¶∑‡¶£ + Line by Line Bangla ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ñ‡ßç‡¶Ø‡¶æ:
cpp
Copy
Edit
class Solution {
public:
‡¶è‡¶á ‡¶ï‡ßç‡¶≤‡¶æ‡¶∏ Solution ‡¶≤‡ßá‡¶≠‡ßá‡¶≤ ‡¶•‡ßá‡¶ï‡ßá ‡¶∂‡ßÅ‡¶∞‡ßÅ ‡¶π‡¶ö‡ßç‡¶õ‡ßá ‚Äî LeetCode ‡¶è ‡¶è‡¶ü‡¶ø ‡¶Æ‡ßÇ‡¶≤ ‡¶™‡ßç‡¶∞‡¶¨‡ßá‡¶∂‡¶¶‡ßç‡¶¨‡¶æ‡¶∞‡•§

cpp
Copy
Edit
bool CanMakePair(string a, string b)
{
    string ans = "";
    bool can = false;
‡¶§‡ßÅ‡¶Æ‡¶ø ‡¶è‡¶ï‡¶ü‡¶ø ‡¶π‡ßá‡¶≤‡¶™‡¶æ‡¶∞ ‡¶´‡¶æ‡¶Ç‡¶∂‡¶® ‡¶¨‡¶æ‡¶®‡¶ø‡ßü‡ßá‡¶õ‡ßã, ‡¶Ø‡¶æ ‡¶ö‡ßá‡¶ï ‡¶ï‡¶∞‡ßá ‡¶¶‡ßá‡ßü ‡¶Ø‡ßá a == reverse(b) ‡¶ï‡¶ø‡¶®‡¶æ‡•§

cpp
Copy
Edit
    for (int i = b.size() - 1; i >= 0; i--)
    {
        ans += b[i];
    }
b ‡¶∏‡ßç‡¶ü‡ßç‡¶∞‡¶ø‡¶Ç‡¶ü‡¶æ‡¶ï‡ßá ‡¶â‡¶≤‡ßç‡¶ü‡ßã ‡¶ï‡¶∞‡ßá ans ‡¶®‡¶æ‡¶Æ‡ßá ‡¶è‡¶ï‡¶ü‡¶ø ‡¶®‡¶§‡ßÅ‡¶® ‡¶∏‡ßç‡¶ü‡ßç‡¶∞‡¶ø‡¶Ç-‡¶è ‡¶ú‡¶Æ‡¶æ ‡¶ï‡¶∞‡¶õ‡ßã‡•§

cpp
Copy
Edit
    if (ans == a)
    {
        can = true;
    }
‡¶è‡¶ñ‡¶® ‡¶Ø‡¶¶‡¶ø a ‡¶Ü‡¶∞ reverse(b) ‡¶è‡¶ï ‡¶π‡ßü, ‡¶§‡¶æ‡¶π‡¶≤‡ßá can ‡¶ï‡ßá true ‡¶ï‡¶∞‡ßá ‡¶¶‡¶ø‡¶ö‡ßç‡¶õ‡ßã‡•§

cpp
Copy
Edit
    return can;
}
‡¶è‡¶á ‡¶´‡¶æ‡¶Ç‡¶∂‡¶® true ‡¶∞‡¶ø‡¶ü‡¶æ‡¶∞‡ßç‡¶® ‡¶ï‡¶∞‡¶¨‡ßá ‡¶Ø‡¶¶‡¶ø a ‡¶Ü‡¶∞ reverse(b) ‡¶è‡¶ï ‡¶π‡ßü‡•§

cpp
Copy
Edit
int maximumNumberOfStringPairs(vector<string>& words) {
    int count = 0;
‡¶Æ‡ßÇ‡¶≤ ‡¶´‡¶æ‡¶Ç‡¶∂‡¶® ‡¶∂‡ßÅ‡¶∞‡ßÅ‡•§ count ‡¶¶‡¶ø‡ßü‡ßá ‡¶Æ‡¶ø‡¶≤ ‡¶™‡¶æ‡¶ì‡ßü‡¶æ ‡¶ú‡ßã‡ßú‡¶æ‡¶∞ ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ ‡¶ó‡ßã‡¶®‡¶æ ‡¶π‡¶¨‡ßá‡•§

cpp
Copy
Edit
    for (int j = 0; j < words.size(); j++) {
        for (int k = j + 1; k < words.size(); k++) {
‡¶§‡ßÅ‡¶Æ‡¶ø ‡¶∏‡¶¨ ‡¶ú‡ßã‡ßú‡¶æ (i, j) ‡¶ö‡ßá‡¶ï ‡¶ï‡¶∞‡¶õ‡ßã ‡¶Ø‡ßá‡¶ñ‡¶æ‡¶®‡ßá i < j‡•§

‡¶è‡¶§‡ßá words[j] ‡¶ì words[k] ‡¶®‡¶ø‡ßü‡ßá ‡¶Æ‡¶ø‡¶≤ ‡¶ö‡ßá‡¶ï ‡¶ï‡¶∞‡¶õ‡ßã‡•§

cpp
Copy
Edit
            if (CanMakePair(words[j], words[k])) {
                count++;
            }
‡¶Ø‡¶¶‡¶ø words[j] == reverse(words[k]) ‡¶π‡ßü, ‡¶§‡¶æ‡¶π‡¶≤‡ßá ‡¶è‡¶ï‡¶ú‡ßã‡ßú‡¶æ ‡¶™‡ßá‡ßü‡ßá ‡¶ó‡ßá‡¶≤‡ßá ‚Üí count++

cpp
Copy
Edit
        }
    }
    return count;
}
‡¶∏‡¶¨ ‡¶ú‡ßã‡ßú‡¶æ ‡¶ö‡ßá‡¶ï ‡¶π‡ßü‡ßá ‡¶ó‡ßá‡¶≤‡ßá count ‡¶∞‡¶ø‡¶ü‡¶æ‡¶∞‡ßç‡¶® ‡¶ï‡¶∞‡ßã‡•§

‚úÖ ‡¶ï‡ßá‡¶® ‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ ‡¶ï‡ßã‡¶° Accepted ‡¶π‡ßü‡ßá‡¶õ‡ßá?
‡¶™‡ßç‡¶∞‡¶∂‡ßç‡¶®‡ßá ‡¶¨‡¶≤‡¶æ ‡¶õ‡¶ø‡¶≤ ‡¶Ø‡ßá‡¶ï‡ßã‡¶®‡ßã i < j ‡¶∏‡ßç‡¶ü‡ßç‡¶∞‡¶ø‡¶Ç ‡¶ú‡ßã‡ßú‡¶æ ‡¶Ø‡¶æ‡¶¶‡ßá‡¶∞ ‡¶Æ‡¶ß‡ßç‡¶Ø‡ßá ‡¶è‡¶ï‡¶ü‡¶ø ‡¶Ö‡¶®‡ßç‡¶Ø‡¶ü‡¶ø‡¶∞ reverse, ‡¶§‡¶æ‡¶¶‡ßá‡¶∞ ‡¶™‡ßá‡ßü‡¶æ‡¶∞ ‡¶π‡¶ø‡¶∏‡ßá‡¶¨‡ßá ‡¶ó‡¶£‡¶®‡¶æ ‡¶ï‡¶∞‡ßã‡•§

‡¶§‡ßÅ‡¶Æ‡¶ø ‡¶†‡¶ø‡¶ï‡¶≠‡¶æ‡¶¨‡ßá ‡¶è‡¶á ‡¶∂‡¶∞‡ßç‡¶§‡¶ü‡¶ø ‡¶™‡ßÇ‡¶∞‡¶£ ‡¶ï‡¶∞‡ßá‡¶õ‡ßã‡•§

‡¶§‡ßÅ‡¶Æ‡¶ø distinct ‡¶∏‡ßç‡¶ü‡ßç‡¶∞‡¶ø‡¶Ç ‡¶®‡¶ø‡ßü‡ßá‡¶õ‡ßã ‡¶è‡¶¨‡¶Ç ‡¶™‡ßç‡¶∞‡¶§‡¶ø ‡¶ú‡ßã‡ßú‡¶æ ‡¶è‡¶ï‡¶¨‡¶æ‡¶∞‡¶á ‡¶ö‡ßá‡¶ï ‡¶ï‡¶∞‡¶õ‡ßã‡•§

‡¶Ø‡¶¶‡¶ø‡¶ì ‡¶§‡ßÅ‡¶Æ‡¶ø ‡¶è‡¶ñ‡¶®‡¶ì ‡¶ö‡ßá‡¶ï ‡¶ï‡¶∞‡ßã ‡¶®‡¶æ ‡¶Ø‡ßá ‡¶ï‡ßã‡¶®‡ßã ‡¶∏‡ßç‡¶ü‡ßç‡¶∞‡¶ø‡¶Ç ‡¶è‡¶ï‡¶¨‡¶æ‡¶∞‡ßá‡¶∞ ‡¶¨‡ßá‡¶∂‡¶ø ‡¶™‡ßá‡ßü‡¶æ‡¶∞ ‡¶π‡¶ö‡ßç‡¶õ‡ßá ‡¶ï‡¶ø‡¶®‡¶æ (‡¶Ø‡ßá‡¶ü‡¶æ ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ ‡¶π‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡¶§), ‡¶ï‡¶ø‡¶®‡ßç‡¶§‡ßÅ testcases-‡¶è ‡¶è‡¶Æ‡¶® overlap pair ‡¶õ‡¶ø‡¶≤ ‡¶®‡¶æ, ‡¶§‡¶æ‡¶á ‡¶§‡ßÅ‡¶Æ‡¶ø Accepted ‡¶™‡ßá‡ßü‡ßá‡¶õ‡ßã‡•§

üß™ ‡¶â‡¶¶‡¶æ‡¶π‡¶∞‡¶£ ‡¶¨‡¶ø‡¶∂‡ßç‡¶≤‡ßá‡¶∑‡¶£:
cpp
Copy
Edit
Input: ["cd", "ac", "dc", "ca", "zz"]
‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ ‡¶ï‡ßã‡¶° ‡¶Ø‡ßá‡¶≠‡¶æ‡¶¨‡ßá ‡¶ö‡¶≤‡ßá:

Loop Details:
j = 0 ‚Üí words[0] = "cd"

k = 1 ‚Üí "cd" vs "ac" ‚Üí false

k = 2 ‚Üí "cd" vs "dc" ‚Üí ‚úÖ (reverse(dc) = cd) ‚Üí count++

k = 3 ‚Üí "cd" vs "ca" ‚Üí false

k = 4 ‚Üí "cd" vs "zz" ‚Üí false

j = 1 ‚Üí words[1] = "ac"

k = 2 ‚Üí "ac" vs "dc" ‚Üí false

k = 3 ‚Üí "ac" vs "ca" ‚Üí ‚úÖ ‚Üí count++

others false

j = 2 ‚Üí already matched with 0, still checked others

j = 3 ‚Üí already matched with 1

j = 4 ‚Üí no match

üëâ Final count = 2 ‚úÖ

  Full Code:
--------------

  class Solution 
{
public:
 bool CanMakePair(string a,string b)
 {
  string ans="";
  bool can=false;
  for(int i=b.size()-1;i>=0;i--)
  {
    ans+=b[i];
  }
  if(ans==a)
  {
    can=true;
  }
  return can;
 }
    int maximumNumberOfStringPairs(vector<string>& words) {
        int count=0;
        for(int j=0;j<words.size();j++)
        {
        for(int k=j+1;k<words.size();k++)
          {
            if(CanMakePair(words[j],words[k]))
            {

            
            count++;
            }
          }
        }
        return count;
    }
};
