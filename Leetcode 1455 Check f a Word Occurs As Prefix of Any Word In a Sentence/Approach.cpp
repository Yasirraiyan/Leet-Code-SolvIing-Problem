тЬЕ ржкрзНрж░ржержорзЗ ржкрзНрж░рж╢рзНржи ржмрзБржЭрзЗ ржирзЗржУржпрж╝рж╛:
рждрзЛржорж╛ржХрзЗ ржмрж▓рж╛ рж╣ржпрж╝рзЗржЫрзЗ:

ржПржХржЯрж╛ sentence ржжрзЗржУржпрж╝рж╛ ржЖржЫрзЗ, ржпрзЗржЦрж╛ржирзЗ ржХрж┐ржЫрзБ рж╢ржмрзНржж ржЖржЫрзЗ ржПржмржВ ржкрзНрж░рждрж┐ржЯрж┐ рж╢ржмрзНржжрзЗрж░ ржорж╛ржЭрзЗ ржПржХржЯрж┐ ржХрж░рзЗ space ржЖржЫрзЗред

ржПржХржЯрж┐ searchWord ржжрзЗржУржпрж╝рж╛ ржЖржЫрзЗред

рждрзЛржорж╛рж░ ржХрж╛ржЬ рж╣рж▓рзЛ: sentence ржПрж░ ржХрзЛржирзЛ рж╢ржмрзНржжрзЗрж░ рж╢рзБрж░рзБ ржХрж┐ searchWord ржжрж┐ржпрж╝рзЗ рж╣ржЪрзНржЫрзЗ ржХрж┐ржирж╛ рж╕рзЗржЯрж╛ ржЪрзЗржХ ржХрж░рж╛ред

ржпржжрж┐ рж╣ржпрж╝, рждрж╛рж╣рж▓рзЗ рж╕рзЗржЗ рж╢ржмрзНржжрзЗрж░ 1-based index (ржорж╛ржирзЗ ржЧржгржирж╛ 1 ржерзЗржХрзЗ рж╢рзБрж░рзБ рж╣ржмрзЗ) рж░рж┐ржЯрж╛рж░рзНржи ржХрж░рзЛред

ржпржжрж┐ ржПржХрж╛ржзрж┐ржХ рж╢ржмрзНржж ржерж╛ржХрзЗ ржпрзЗржЧрзБрж▓рзЛ рж╢рзБрж░рзБ рж╣ржпрж╝ searchWord ржжрж┐ржпрж╝рзЗ, рждрж╛рж╣рж▓рзЗ ржкрзНрж░ржержо ржпрзЗржЯрж╛ ржкрж╛ржУржпрж╝рж╛ ржпрж╛ржпрж╝, рж╕рзЗржЯрж╛рж░ index рж░рж┐ржЯрж╛рж░рзНржи ржХрж░рзЛред

ржЖрж░ ржпржжрж┐ ржХрзЛржирзЛ рж╢ржмрзНржжрзЗржЗ prefix ржорж┐рж▓рзЗ ржирж╛ ржпрж╛ржпрж╝, рждрж╛рж╣рж▓рзЗ -1 рж░рж┐ржЯрж╛рж░рзНржи ржХрж░рзЛред

тЬЕ рждрзЛржорж╛рж░ ржЪрж┐ржирзНрждрж╛-ржнрж╛ржмржирж╛рж░ ржзрж╛ржк:
ржкрзБрж░рзЛ sentence ржХрзЗ ржЯрзБржХрж░рзЛ ржЯрзБржХрж░рзЛ ржХрж░рзЗ рж╢ржмрзНржжрзЗ ржнрж╛ржЧ ржХрж░рзЗржЫрзЛред

ржкрзНрж░рждрж┐ржЯрж┐ рж╢ржмрзНржжрзЗрж░ рж╕рж╛ржерзЗ searchWord ржЯрж╛ prefix рж╣рж┐рж╕рзЗржмрзЗ ржорж┐рж▓рзЗ ржХрж┐ржирж╛ рж╕рзЗржЯрж╛ ржЪрзЗржХ ржХрж░рзЗржЫрзЛред

ржпржжрж┐ prefix ржорж┐рж▓рзЗ ржпрж╛ржпрж╝, рждрж╛рж╣рж▓рзЗ рж╕рзЗржЗ index рж░рж┐ржЯрж╛рж░рзНржи ржХрж░рзЗржЫрзЛред

ржпржжрж┐ ржХрзЛржирзЛржЯрж╛ржЗ ржирж╛ ржорзЗрж▓рзЗ, рждрж╛рж╣рж▓рзЗ -1 рж░рж┐ржЯрж╛рж░рзНржи ржХрж░рзЗржЫрзЛред

тЬЕ рждрзЛржорж╛рж░ ржХрзЛржб ржмрж┐рж╢рзНрж▓рзЗрж╖ржг (рж▓рж╛ржЗржи ржмрж╛ржЗ рж▓рж╛ржЗржи ржмрзНржпрж╛ржЦрзНржпрж╛)
cpp
Copy
Edit
class Solution 
{
public:
ржПржЦрж╛ржирзЗ рждрзБржорж┐ ржПржХржЯрж┐ Solution ржирж╛ржорзЗрж░ class ржбрж┐ржлрж╛ржЗржи ржХрж░рзЗржЫрзЛ, ржпрзЗржЯрж╛ LeetCode ржПрж░ ржлрж░ржорзНржпрж╛ржЯ ржЕржирзБржпрж╛ржпрж╝рзА ржХрж░рж╛ рж╣ржпрж╝рзЗржЫрзЗред

cpp
Copy
Edit
bool CheckPrefix(string a,string  b)
{
    bool isprefix=false;
    string ans="";
    for(int i=0;i<a.size();i++)
    {
        ans+=a[i];
        if(ans==b)
        {
            isprefix=true;
            break;
        }
    }
    return isprefix;
}
ЁЯФ╣ CheckPrefix ржлрж╛ржВрж╢ржи:

ржПржЯрж╛ ржЪрзЗржХ ржХрж░рзЗ b ржХрж┐ a-ржПрж░ prefix ржХрж┐ржирж╛ред

ржПржХржЯрж┐ ржЦрж╛рж▓рж┐ string ans ржмрж╛ржирж╛ржУред

a string ржПрж░ ржкрзНрж░рждрж┐ржЯрж┐ ржХрзНржпрж╛рж░рзЗржХрзНржЯрж╛рж░ ржПржХрзЗ ржПржХрзЗ ans ржП ржпрзЛржЧ ржХрж░рзЛред

ржпржЦржи ans == b рж╣рзЯ, рждржЦржи isprefix = true ржХрж░рзЗ break ржХрж░рзЛред

рж╢рзЗрж╖рзЗ true/false рж░рж┐ржЯрж╛рж░рзНржи ржХрж░рзЛред

рждрзБржорж┐ ржПржЦрж╛ржирзЗ ржирж┐ржЬрзЗ рж╣рж╛рждрзЗ prefix ржорж┐рж▓рж┐ржпрж╝рзЗ ржжрзЗржЦрж╛рж░ ржЬржирзНржп рж╕рзНржЯрзЗржк-ржмрж╛ржЗ-рж╕рзНржЯрзЗржк string ржмрж╛ржирж┐ржпрж╝рзЗ ржпрж╛ржЪрзНржЫрзЛред

ржЙржжрж╛рж╣рж░ржг: CheckPrefix("burger", "burg") тЮЭ ans рж╣ржмрзЗ:

"b" тЖТ ржирж╛

"bu" тЖТ ржирж╛

"bur" тЖТ ржирж╛

"burg" тЖТ рж╣рзНржпрж╛ржБ, ржорж┐рж▓рзЗржЫрзЗ тЖТ return true

cpp
Copy
Edit
int isPrefixOfWord(string sentence, string searchWord) {
    int ans=-1;
ЁЯФ╣ ржкрзНрж░ржержорзЗ ans = -1 ржзрж░рзЗ ржирж┐ржУ, ржХрж╛рж░ржг ржпржжрж┐ ржХрж┐ржЫрзБржЗ ржирж╛ ржорзЗрж▓рзЗ рждрж╛рж╣рж▓рзЗ -1 return ржХрж░рждрзЗ рж╣ржмрзЗред

cpp
Copy
Edit
    stringstream ss(sentence);
    string word;
    vector<string> reserve;
    while(ss >> word)
    {
        reserve.push_back(word);
    }
ЁЯФ╣ рждрзБржорж┐ sentence ржХрзЗ stringstream ржжрж┐рзЯрзЗ ржЯрзБржХрж░рзЛ ржХрж░рзЗ ржПржХрзЗржХржЯрж╛ word ржмрж╛ржирж┐ржпрж╝рзЗ ржирж┐ржЪрзНржЫрзЛред
ЁЯФ╣ reserve vector-ржП рж╕ржм рж╢ржмрзНржжржЧрзБрж▓рзЛ рж╕рзНржЯрзЛрж░ ржХрж░ржЫрзЛред

ржЙржжрж╛рж╣рж░ржг:
sentence = "i love eating burger" тЖТ reserve = ["i", "love", "eating", "burger"]

cpp
Copy
Edit
    for(int j=0;j<reserve.size();j++)
    {
        if(CheckPrefix(reserve[j],searchWord))
        {
            ans=j+1;
            break;
        }
    }
ЁЯФ╣ рж╕ржм рж╢ржмрзНржж ржШрзБрж░рзЗ ржЪрзЗржХ ржХрж░ржЫрзЛ searchWord рж╕рзЗржЯрж╛ reserve[j] ржПрж░ prefix ржХрж┐ржирж╛ред
ЁЯФ╣ ржпржжрж┐ prefix ржорж┐рж▓рзЗ, рждрж╛рж╣рж▓рзЗ index (1-based рждрж╛ржЗ j+1) ржжрж┐рзЯрзЗ ans рж╕рзЗржЯ ржХрж░рзЛ ржПржмржВ break ржХрж░рзЛред

cpp
Copy
Edit
    return ans;
}
ЁЯФ╣ рж╕ржм ржЪрзЗржХ ржХрж░рж╛рж░ ржкрж░ ans return ржХрж░рзЛред ржпржжрж┐ ржХрзЛржирзЛ prefix ржирж╛ ржорзЗрж▓рзЗ, рждрж╛рж╣рж▓рзЗ -1 рж░рж┐ржЯрж╛рж░рзНржи рж╣ржмрзЗред

тЬЕ Test Case Analysis (ржЙржжрж╛рж╣рж░ржг)
Test Case 1:
cpp
Copy
Edit
sentence = "i love eating burger";
searchWord = "burg";
тЮЭ reserve = ["i", "love", "eating", "burger"]

"i" тЖТ ржирж╛

"love" тЖТ ржирж╛

"eating" тЖТ ржирж╛

"burger" тЖТ "burg" ржжрж┐ржпрж╝рзЗ рж╢рзБрж░рзБ тЖТ ржорж┐рж▓рзЗржЫрзЗ

тЬЕ Output = 4

Test Case 2:
cpp
Copy
Edit
sentence = "this problem is an easy problem";
searchWord = "pro";
reserve = ["this", "problem", "is", "an", "easy", "problem"]

"this" тЖТ ржирж╛

"problem" тЖТ рж╣рзНржпрж╛ржБ тЖТ 2
(6 ржиржорзНржмрж░рзЗржУ ржорж┐рж▓ржмрзЗ, ржХрж┐ржирзНрждрзБ рзирзЯрзЗржЗ break рж╣ржпрж╝рзЗ ржЧрзЗржЫрзЗ)

тЬЕ Output = 2

Test Case 3:
cpp
Copy
Edit
sentence = "i am tired";
searchWord = "you";
reserve = ["i", "am", "tired"] тЖТ ржХрзЗржЙржЗ "you" ржжрж┐ржпрж╝рзЗ рж╢рзБрж░рзБ рж╣ржпрж╝ ржирж╛

тЬЕ Output = -1

тЬЕ рж╕ржВржХрзНрж╖рзЗржкрзЗ:
рждрзБржорж┐ ржирж┐ржЬрзЗ prefix ржЪрзЗржХ ржХрж░рж╛рж░ ржЬржирзНржп ржЫрзЛржЯ ржлрж╛ржВрж╢ржи рж▓рж┐ржЦрзЗ ржирж┐рзЯрзЗржЫрзЛ (ржпрзЗржЯрж╛ STL starts_with() ржлрж╛ржВрж╢ржирзЗрж░ ржмрж┐ржХрж▓рзНржк)ред

рждрзЛржорж╛рж░ ржХрзЛржб Efficiently ржХрж╛ржЬ ржХрж░рзЗ ржХрж╛рж░ржг рждрзБржорж┐ ржкрзНрж░ржержо ржпрзЗржЯрж╛ ржкрж╛ржУ, рж╕рзЗржЯрж╛ржЗ рж░рж┐ржЯрж╛рж░рзНржи ржХрж░рзЛред

рждрзЛржорж╛рж░ ржХрзЛржб рж╕ржм ржЯрзЗрж╕рзНржЯ ржХрзЗрж╕ ржкрж╛рж╕ ржХрж░ржмрзЗред

Full Code:
-----------

  class Solution 
{
public:
   bool CheckPrefix(string a,string  b)
   {
    bool isprefix=false;
    string ans="";
    for(int i=0;i<a.size();i++)
    {
      ans+=a[i];
      if(ans==b)
      {
        isprefix=true;
        break;
      }
    }
    return isprefix;
   }
    int isPrefixOfWord(string sentence, string searchWord) 
{
        int ans=-1;
        stringstream ss(sentence);
        string word;
        vector<string>reserve;
        while(ss>>word)
        {
             reserve.push_back(word);
        }
        for(int j=0;j<reserve.size();j++)
        {
          if(CheckPrefix(reserve[j],searchWord))
          {
            ans=j+1;
            break;
          }
        }
        return ans;
    }
};
