рж╕ржорж╕рзНржпрж╛ (Problem):

ржЖржкржирж┐ ржПржХржЯрж┐ Item List Manager рждрзИрж░рж┐ ржХрж░рждрзЗ ржЪрж╛ржЗржЫрзЗржи ржпрзЗржЦрж╛ржирзЗ:

ржмрзНржпржмрж╣рж╛рж░ржХрж╛рж░рзА ржЗржиржкрзБржЯ ржмржХрзНрж╕рзЗ ржЖржЗржЯрзЗржо ржЯрж╛ржЗржк ржХрж░ржмрзЗред

"Add Item" ржмрж╛ржЯржирзЗ ржХрзНрж▓рж┐ржХ ржХрж░рж▓рзЗ ржЖржЗржЯрзЗржоржЯрж┐ рж▓рж┐рж╕рзНржЯрзЗ ржпрзЛржЧ рж╣ржмрзЗред

рж▓рж┐рж╕рзНржЯржЯрж┐ ржбрж╛ржЗржирж╛ржорж┐ржХржнрж╛ржмрзЗ ржжрзЗржЦрж╛ржмрзЗред

рж╕ржорж╛ржзрж╛ржирзЗрж░ ржкржжрзНржзрждрж┐ (Solution Approach):
рззя╕ПтГг State (ржЕржмрж╕рзНржерж╛) ржмрзНржпржмрж╕рзНржерж╛ржкржирж╛

React-ржП state ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж╛ рж╣ржпрж╝ ржПржоржи ржбрзЗржЯрж╛ рж╕ржВрж░ржХрзНрж╖ржгрзЗрж░ ржЬржирзНржп ржпрж╛ UI-рждрзЗ ржкрж░рж┐ржмрж░рзНрждржи ржШржЯрж╛рж▓рзЗ рж╕рзНржмржпрж╝ржВржХрзНрж░рж┐ржпрж╝ржнрж╛ржмрзЗ рж░рзЗржирзНржбрж╛рж░ рж╣ржмрзЗред

const [items, setItems] = useState([]); // рж▓рж┐рж╕рзНржЯрзЗрж░ ржЬржирзНржп state
const [input, setInput] = useState(""); // ржЗржиржкрзБржЯ ржмржХрзНрж╕рзЗрж░ ржорж╛ржирзЗрж░ ржЬржирзНржп state


items: рж▓рж┐рж╕рзНржЯрзЗ ржпрзЛржЧ рж╣ржУржпрж╝рж╛ рж╕ржорж╕рзНржд ржЖржЗржЯрзЗржо рж░рж╛ржЦржмрзЗред

input: ржЗржиржкрзБржЯ ржмржХрзНрж╕рзЗ ржмрж░рзНрждржорж╛ржирзЗ ржЯрж╛ржЗржк ржХрж░рж╛ ржорж╛ржи рж░рж╛ржЦржмрзЗред

useState ржжрзНржмрж╛рж░рж╛ state рж╢рзБрж░рзБ рж╣ржпрж╝ ([] ржмрж╛ "")ред

ржХрзЗржи: React ржпржЦржи state ржкрж░рж┐ржмрж░рзНрждрж┐ржд рж╣ржпрж╝ рждржЦржи UI рж╕рзНржмржпрж╝ржВржХрзНрж░рж┐ржпрж╝ржнрж╛ржмрзЗ рж░рж┐ржлрзНрж░рзЗрж╢ рж╣ржпрж╝ред

рзия╕ПтГг Controlled Input

Input ржмржХрзНрж╕ржХрзЗ controlled component ржмрж╛ржирж╛ржирзЛ рж╣ржпрж╝рзЗржЫрзЗ:

<input
  value={input}
  onChange={(e) => setInput(e.target.value)}
/>


value={input} тЖТ ржЗржиржкрзБржЯрзЗрж░ ржорж╛ржи state ржерзЗржХрзЗ ржЖрж╕рзЗред

onChange тЖТ ржмрзНржпржмрж╣рж╛рж░ржХрж╛рж░рзА ржпржЦржи ржЯрж╛ржЗржк ржХрж░рзЗ, рждржЦржи state ржЖржкржбрзЗржЯ ржХрж░рзЗред

ржХрзЗржи: ржПржЯрж╛ React-ржПрж░ рж╕ржарж┐ржХ ржкржжрзНржзрждрж┐ ржпрж╛рждрзЗ input ржПржмржВ state рж╕ржмрж╕ржоржпрж╝ рж╕ржоржирзНржмрж┐ржд ржерж╛ржХрзЗред

рзйя╕ПтГг ржЖржЗржЯрзЗржо ржпрзЛржЧ ржХрж░рж╛ (Adding Items)

ржпржЦржи ржмрзНржпржмрж╣рж╛рж░ржХрж╛рж░рзА Add Item ржмрж╛ржЯржирзЗ ржХрзНрж▓рж┐ржХ ржХрж░рзЗ:

const handleAddItem = (e) => {
  e.preventDefault();          // ржкрзЗржЬ рж░рж┐ржлрзНрж░рзЗрж╢ ржмржирзНржз ржХрж░рзЗ
  if(input.trim() !== "") {    // ржЦрж╛рж▓рж┐ ржорж╛ржи ржпрзЛржЧ ржирж╛ ржХрж░рж╛рж░ ржЬржирзНржп
    setItems([...items, input]); // ржирждрзБржи ржЖржЗржЯрзЗржо рж▓рж┐рж╕рзНржЯрзЗ ржпрзЛржЧ
    setInput("");               // ржЗржиржкрзБржЯ ржХрзНрж▓рж┐ржпрж╝рж╛рж░
  }
};


e.preventDefault() тЖТ ржлрж░рзНржорзЗрж░ ржбрж┐ржлрж▓рзНржЯ рж░рж┐ржлрзНрж░рзЗрж╢ ржмржирзНржз ржХрж░рзЗред

input.trim() !== "" тЖТ ржЦрж╛рж▓рж┐ рж╕рзНржЯрзНрж░рж┐ржВ ржпрзЛржЧ ржХрж░рж╛ рж░рзЛржз ржХрж░рзЗред

setItems([...items, input]) тЖТ spread operator ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзЗ ржкрзБрж░рзЛржирзЛ рж▓рж┐рж╕рзНржЯрзЗрж░ ржЖржЗржЯрзЗржоржЧрзБрж▓рзЛ ржХржкрж┐ ржХрж░рзЗ ржирждрзБржи ржЖржЗржЯрзЗржо ржпрзЛржЧ ржХрж░рж╛ред

setInput("") тЖТ ржЗржиржкрзБржЯ ржмржХрзНрж╕ ржлрж╛ржБржХрж╛ ржХрж░рж╛ред

React ржзрж╛рж░ржгрж╛: state immutable ржнрж╛ржмрзЗ ржЖржкржбрзЗржЯ ржХрж░рж╛ред рж╕рж░рж╛рж╕рж░рж┐ ржкрзБрж░рзЛржирзЛ array ржкрж░рж┐ржмрж░рзНрждржи ржХрж░рж╛ ржарж┐ржХ ржиржпрж╝ред

рзкя╕ПтГг рж▓рж┐рж╕рзНржЯ рж░рзЗржирзНржбрж╛рж░ ржХрж░рж╛ (Rendering List)

рж▓рж┐рж╕рзНржЯржЯрж┐ ржбрж╛ржЗржирж╛ржорж┐ржХржнрж╛ржмрзЗ ржжрзЗржЦрж╛ржирзЛ рж╣ржпрж╝рзЗржЫрзЗ map ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзЗ:

<ul>
  {items.map((item, index) => (
    <li key={index}>{item}</li>
  ))}
</ul>


map тЖТ items array ржПрж░ ржкрзНрж░рждрж┐ржЯрж┐ ржЖржЗржЯрзЗржорзЗ ржЗржЯрж╛рж░рзЗржЯ ржХрж░рзЗред

<li> тЖТ ржкрзНрж░рждрж┐ржЯрж┐ ржЖржЗржЯрзЗржо ржкрзНрж░ржжрж░рзНрж╢ржиред

key={index} тЖТ React ржХрзЗ ржкрзНрж░рждрж┐ржЯрж┐ ржЖржЗржЯрзЗржо ржЖрж▓рж╛ржжрж╛ ржЪрзЗржирж╛рж░ ржЬржирзНржпред

React ржзрж╛рж░ржгрж╛: JSX + ржбрж╛ржЗржирж╛ржорж┐ржХ renderingред

рзля╕ПтГг JSX ржПржмржВ Component Structure

React component JSX ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзЗ UI define ржХрж░рзЗ:

<>
  <h8k-navbar header="Item List Manager" />
  <div className="App"> ... </div>
</>


<h8k-navbar> тЖТ ржХрж╛рж╕рзНржЯржо componentред

<div className="App"> тЖТ app containerред

{} тЖТ JavaScript expressions JSX-ржП embed ржХрж░рж╛рж░ ржЬржирзНржпред

рзмя╕ПтГг рж╕ржмржХрж┐ржЫрзБ ржПржХрждрзНрж░рж┐ржд ржХрж░рж╛

ржкржжрзНржзрждрж┐:

State рждрзИрж░рж┐ ржХрж░рзБржи (input ржУ items)ред

Controlled input рждрзИрж░рж┐ ржХрж░рзБржиред

Add button handler тЖТ state ржЖржкржбрзЗржЯред

List render тЖТ map + keyред

React ржорзВрж▓ ржзрж╛рж░ржгрж╛ ржПржЦрж╛ржирзЗ ржмрзНржпржмрж╣рж╛рж░ рж╣ржпрж╝рзЗржЫрзЗ:

useState тЖТ state management

Event handling тЖТ onChange, onClick

Controlled component тЖТ input value state-ржП рж╕ржВржпрзБржХрзНржд

JSX rendering тЖТ ржбрж╛ржЗржирж╛ржорж┐ржХ UI

Immutable update тЖТ [...items, input]

ржХрзА рж╢рж┐ржЦрж▓рж╛ржо:

React UI reactive тЖТ state ржкрж░рж┐ржмрж░рзНрждржи рж╣рж▓рзЗ рж╕рзНржмржпрж╝ржВржХрзНрж░рж┐ржпрж╝ рж░рзЗржирзНржбрж╛рж░ред

Array/objects state immutable ржнрж╛ржмрзЗ ржЖржкржбрзЗржЯ ржХрж░рждрзЗ рж╣ржмрзЗред

Controlled inputs ржлрж░рзНржорзЗ React best practiceред

map + key тЖТ ржбрж╛ржЗржирж╛ржорж┐ржХ list renderingред

ЁЯТб Extra Tip:
ржкрж░ржмрж░рзНрждрзА ржзрж╛ржкрзЗ, ржкрзНрж░рждрж┐ржЯрж┐ item-ржПрж░ ржкрж╛рж╢рзЗ Remove button ржпрзБржХрзНржд ржХрж░рж▓рзЗ ржЖржкржирж┐ ржЖрж░ржУ React concept рж╢рж┐ржЦржмрзЗржи, ржпрзЗржоржи event per item ржПржмржВ state filteringред
