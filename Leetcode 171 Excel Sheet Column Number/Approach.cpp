ЁЯФ╢ ржкрзНрж░рж╢рзНржиржЯрж╛ ржХрзА ржмрж▓ржЫрзЗ?

рждрзЛржорж╛ржХрзЗ ржПржХржЯрж╛ Excel-ржПрж░ ржХрж▓рж╛ржорзЗрж░ ржирж╛ржо (columnTitle) ржжрзЗржУрзЯрж╛ рж╣ржмрзЗ ржпрзЗржоржи "A", "AB", "ZY"ред
ржПржЗ ржирж╛ржоржЧрзБрж▓рзЛ Excel-ржПрж░ ржорждрзЛ рж╕рж┐рж╕рзНржЯрзЗржорзЗ ржмрж╕рж╛ржирзЛ рж╣рзЯрзЗржЫрзЗ, ржпрзЗржЦрж╛ржирзЗ:

A тЖТ 1

B тЖТ 2

тАж

Z тЖТ 26

AA тЖТ 27

AB тЖТ 28

тАж

ZY тЖТ 701


рждрзЛржорж╛ржХрзЗ ржПржЗ columnTitle ржжрзЗржЦрзЗ рждрж╛рж░ рж╕ржВржЦрзНржпрж╛ржЯрж┐ ржмрзЗрж░ ржХрж░рждрзЗ рж╣ржмрзЗред


---

ЁЯФ╖ ржкрзНрж░ржержорзЗ ржХрзАржнрж╛ржмрзЗ ржЪрж┐ржирзНрждрж╛ ржХрж░ржмрзЗ?

ржПржЯрж╛ ржЖрж╕рж▓рзЗ 26-base number systemред
ржпрзЗржоржи decimal рж╣рж▓рзЛ base-10, binary рж╣рж▓рзЛ base-2, ржПржЯрж╛ рж╣рж▓рзЛ base-26 (ржХрж╛рж░ржг A-Z = 26 letters)ред

рждрзБржорж┐ ржпрзЗржнрж╛ржмрзЗ ржмрзБржЭржмрзЗ:

ржкрзНрж░рждрж┐ржЯрж┐ ржЕржХрзНрж╖рж░ ржПржХржЯрж╛ рж╕ржВржЦрзНржпрж╛ ржмрзЛржЭрж╛рзЯ:

'A' = 1, 'B' = 2, ..., 'Z' = 26


ржарж┐ржХ ржПржХржЗржнрж╛ржмрзЗ "AB" ржПрж░ ржорж╛ржи:

A = 1 (ржмрж╛ржоржкрж╛рж╢рзЗ, ржорж╛ржирзЗ рж╕ржмржЪрзЗрзЯрзЗ ржмрзЬ ржкржЬрж┐рж╢ржирзЗ)

B = 2 (ржбрж╛ржиржкрж╛рж╢рзЗ, ржЫрзЛржЯ ржкржЬрж┐рж╢ржи)

рждрж╛рж╣рж▓рзЗ: 1├Ч26^1 + 2├Ч26^0 = 26 + 2 = 28



рждрж╛ржЗ ржПржЗржнрж╛ржмрзЗ ржкрзНрж░рждрж┐ржЯрж┐ ржЕржХрзНрж╖рж░рзЗрж░ ржорж╛ржи ржмрзЗрж░ ржХрж░рзЗ power of 26 ржжрж┐рзЯрзЗ ржЧрзБржг ржХрж░рзЗ ржпрзЛржЧ ржХрж░рждрзЗ рж╣ржмрзЗред


---

ЁЯФ╢ рждрзЛржорж╛рж░ ржжрзЗржУрзЯрж╛ ржХрзЛржб:

class Solution
{
public:
    int titleToNumber(string columnTitle) 
    {
        int ans=0;
        for(int i=0;i<columnTitle.size();i++)
        {
            ans += pow(26, columnTitle.size()-i-1) * (tolower(columnTitle[i]) - 'a' + 1);
        }
        return ans;
    }
};


---

ЁЯФН рж▓рж╛ржЗржи ржмрж╛ржЗ рж▓рж╛ржЗржи ржмрзНржпрж╛ржЦрзНржпрж╛ (ржмрж╛ржВрж▓рж╛рзЯ):

int ans=0;

ЁЯФ╕ ржПржЗ ржнрзНржпрж╛рж░рж┐рзЯрзЗржмрж▓ ans-ржП ржЖржорж░рж╛ рж╕ржм ржорж╛ржи ржпрзЛржЧ ржХрж░ржм, ржлрж╛ржЗржирж╛рж▓ рж░рзЗржЬрж╛рж▓рзНржЯ рж░рж╛ржЦржмред


---

for(int i=0;i<columnTitle.size();i++)

ЁЯФ╕ ржкрзНрж░рждрж┐ржЯрж┐ ржЕржХрзНрж╖рж░ ржирж┐рзЯрзЗ рж▓рзБржк ржЪрж╛рж▓рж╛ржмрзЗред
ЁЯФ╕ ржпрзЗржоржи columnTitle = "AB" рж╣рж▓рзЗ size = 2
ЁЯФ╕ i = 0 (A), i = 1 (B)


---

ans += pow(26, columnTitle.size()-i-1) * (tolower(columnTitle[i]) - 'a' + 1);

ржПржЯрж╛ ржПржХ рж▓рж╛ржЗржирзЗ ржЕржирзЗржХ ржХрж┐ржЫрзБ ржХрж░ржЫрзЗред
рждрзЛржорж╛ржХрзЗ ржнрж╛ржЧ ржХрж░рзЗ ржмрзБржЭрждрзЗ рж╣ржмрзЗ:

1я╕ПтГг tolower(columnTitle[i]) - 'a' + 1

ЁЯСЙ ржПржЯрж╛ ржХрж░рзЗ ржкрзНрж░рждрж┐ржЯрж┐ ржЕржХрзНрж╖рж░рзЗрж░ рж╕ржВржЦрзНржпрж╛ ржмрзЗрж░ ржХрж░рзЗ:

tolower(columnTitle[i]) тЖТ ржЕржХрзНрж╖рж░ржХрзЗ ржЫрзЛржЯ ржХрж░рзЗ (ржпржжрж┐ ржжрж░ржХрж╛рж░ рж╣рзЯ, ржпржжрж┐ржУ input рж╕ржм UPPERCASE)

'A' = 65, 'a' = 97

'A' тЖТ 97 - 97 + 1 = 1

'B' тЖТ 98 - 97 + 1 = 2

...

'Z' тЖТ 122 - 97 + 1 = 26


ЁЯУМ ржПржЯрж╛ ржорзВрж▓ржд ржХрж░рзЗ ржжрж┐ржЪрзНржЫрзЗ 'A' тЖТ 1, ..., 'Z' тЖТ 26


---

2я╕ПтГг pow(26, columnTitle.size()-i-1)

ЁЯСЙ ржПржЯрж╛ ржжрж┐рзЯрзЗ ржХрж░рж╛ рж╣ржЪрзНржЫрзЗ power of 26:

ржЖржорж░рж╛ base-26 system ржмрзНржпржмрж╣рж╛рж░ ржХрж░ржЫрж┐

ржпрзЗржоржи тАЬABтАЭ тЖТ A = 26┬╣, B = 26тБ░


рждрж╛ржЗ:

i = 0 тЖТ pow(26, 2-0-1) = 26┬╣

i = 1 тЖТ pow(26, 2-1-1) = 26тБ░



---

3я╕ПтГг ржПржХрждрзНрж░рзЗ:

ans += pow(26, position) * value

ЁЯСЙ ржкрзНрж░рждрж┐ржЯрж┐ ржЕржХрзНрж╖рж░рзЗрж░ ржорж╛ржи * рждрж╛рж░ position power тЖТ ржпрзЛржЧ ржХрж░рзЗ ржжрж┐ржЪрзНржЫрзЗ ans-ржПред


---

тЬЕ ржЙржжрж╛рж╣рж░ржг ржжрж┐рзЯрзЗ ржмрзНржпрж╛ржЦрзНржпрж╛:

ЁЯФ╣ Input: "AB"

Length = 2

i = 0:

columnTitle[0] = 'A' тЖТ value = 1

power = 26^(2 - 0 - 1) = 26^1 = 26

ans += 1 ├Ч 26 = 26


i = 1:

columnTitle[1] = 'B' тЖТ value = 2

power = 26^(2 - 1 - 1) = 26^0 = 1

ans += 2 ├Ч 1 = 2



ЁЯФ╕ Final ans = 26 + 2 = 28


---

тЬЕ ржЕржирзНржп ржЙржжрж╛рж╣рж░ржг:

ЁЯФ╣ Input: "ZY"

'Z' тЖТ 26

'Y' тЖТ 25

ZY = 26├Ч26 + 25 = 676 + 25 = 701



---

тЬЕ Accepted ржХрзЗржи?

1. ржПржЗ ржкржжрзНржзрждрж┐рждрзЗ рж╕ржм ржХрзЗрж╕ handle рж╣рзЯ тАФ ржпрзЗржоржи 1-letter, 2-letter, ... 7-letter ржкрж░рзНржпржирзНрждред


2. Time Complexity: O(N), ржпрзЗржЦрж╛ржирзЗ N = columnTitle.length


3. pow(26, ...) ржХрж░рж╛ efficient, ржХрж╛рж░ржг columnTitle max 7 character




---

ЁЯФЪ рж╢рзЗрж╖ ржХржерж╛ (Recap):

ржПржЯрж╛ ржПржХржЯрж╛ base-26 number conversion problem

A-Z = 1-26 рж╣рж┐рж╕рзЗржмрзЗ ржзрж░рждрзЗ рж╣ржмрзЗ

ржкрзНрж░рждрж┐ржЯрж┐ ржЕржХрзНрж╖рж░рзЗрж░ ржорж╛ржиржХрзЗ ржкржЬрж┐рж╢ржи ржЕржирзБржпрж╛рзЯрзА 26 ржПрж░ ржШрж╛ржд ржжрж┐рзЯрзЗ ржЧрзБржг ржХрж░рждрзЗ рж╣ржмрзЗ

рж╕ржм ржорж╛ржи ржпрзЛржЧ ржХрж░рзЗ ржлрж▓рж╛ржлрж▓ ржкрж╛ржУрзЯрж╛ ржпрж╛ржмрзЗ



---

тЬНя╕П Bonus (Improved Code without pow, faster):

int titleToNumber(string s) {
    int ans = 0;
    for (char c : s) {
        ans = ans * 26 + (c - 'A' + 1);
    }
    return ans;
}

ржХрж╛рж░рзНржпржкрзНрж░ржгрж╛рж▓рж┐: ржмрж╛ржо ржерзЗржХрзЗ ржбрж╛ржирзЗ ржкрзНрж░рждрж┐ржЯрж┐ ржЕржХрзНрж╖рж░ ржирж┐рзЯрзЗ base-26 рж╣рж┐рж╕рзЗржмрзЗ ржХрж╛ржЬ ржХрж░рзЗред


  Full Code:
----------------

class Solution
{
public:
    int titleToNumber(string columnTitle) 
    {
        int ans=0;
    
        for(int i=0;i<columnTitle.size();i++)
            {
                ans+=pow(26,columnTitle.size()-i-1)*(tolower(columnTitle[i])-'a'+1);
            }
        return ans;
            
    }
};  
