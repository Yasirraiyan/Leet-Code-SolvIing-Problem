рждрзБржорж┐ ржпрзЗржЗ рж╕ржорж╕рзНржпрж╛рж░ рж╕ржорж╛ржзрж╛ржи ржХрж░рзЗржЫрзЛ рж╕рзЗржЯрж┐ рж╣ржЪрзНржЫрзЗ LeetCode-ржПрж░ Missing Number ржкрзНрж░ржмрж▓рзЗржоред

ЁЯФН ржкрзНрж░рж╢рзНржиржЯрж┐ ржХрзА ржмрж▓ржЫрзЗ?
рждрзЛржорж╛ржХрзЗ ржПржХржЯрж╛ array nums ржжрзЗржУрзЯрж╛ ржЖржЫрзЗ ржпрзЗржЯрж┐рждрзЗ n ржЯрж┐ distinct рж╕ржВржЦрзНржпрж╛ ржЖржЫрзЗред ржПржЗ рж╕ржВржЦрзНржпрж╛ржЧрзБрж▓рзЛ 0 ржерзЗржХрзЗ n ржкрж░рзНржпржирзНржд рж░рзЗржЮрзНржЬрзЗрж░ ржоржзрзНржпрзЗ, рждржмрзЗ ржПржХржЯрж┐ рж╕ржВржЦрзНржпрж╛ ржорж┐рж╕рж┐ржВред

рждрзЛржорж╛рж░ ржХрж╛ржЬ: ржорж┐рж╕рж┐ржВ рж╕ржВржЦрзНржпрж╛ржЯрж┐ ржЦрзБржБржЬрзЗ ржмрзЗрж░ ржХрж░рж╛ред

ЁЯза рждрзБржорж┐ ржХрзАржнрж╛ржмрзЗ ржЪрж┐ржирзНрждрж╛ ржХрж░рзЗржЫрзЛ?
ржкрзНрж░ржержорзЗ рждрзБржорж┐ ржкрзНрж░рж╢рзНржи ржкрзЬрзЗ ржмрзБржЭрзЗржЫрзЛ:

nums-ржП ржЖржЫрзЗ n ржЯрж┐ рж╕ржВржЦрзНржпрж╛ тЖТ ржХрж┐ржирзНрждрзБ рж░рзЗржЮрзНржЬ рж╣ржЪрзНржЫрзЗ 0 ржерзЗржХрзЗ n (ржорж╛ржирзЗ n+1 рж╕ржВржЦрзНржпрж╛рж░ ржоржзрзНржпрзЗ рззржЯрж╛ ржирзЗржЗ)ред

ржорж╛ржирзЗ: ржкрзБрж░рзЛ рж░рзЗржЮрзНржЬ рж╣ржЪрзНржЫрзЗ [0, 1, 2, ..., n] тЖТ ржорзЛржЯ рж╕ржВржЦрзНржпрж╛ n+1

рждрзБржорж┐ ржЪрж┐ржирзНрждрж╛ ржХрж░рзЗржЫрзЛ: ржпржжрж┐ ржЖржорж░рж╛ [0, ..., n] рж▓рж┐рж╕рзНржЯ ржмрж╛ржирж┐рзЯрзЗ ржирж┐ржЗ, ржПржмржВ рждрж╛рж░ ржоржзрзНржпрзЗ ржерзЗржХрзЗ nums-ржП ржпрзЗржЯрж╛ ржирзЗржЗ рж╕рзЗржЯрж╛ ржмрзЗрж░ ржХрж░рж┐ тАФ рждрж╛рж╣рж▓рзЗржЗ ржорж┐рж╕рж┐ржВ ржирж╛ржорзНржмрж╛рж░ ржкрзЗрзЯрзЗ ржпрж╛ржмрзЛред

ржПржЗ ржХрж╛рж░ржгрзЗ рждрзБржорж┐:

unordered_set ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзЗржЫрзЛ ржпрзЗржи nums ржПрж░ рж╕ржм ржирж╛ржорзНржмрж╛рж░ржХрзЗ fast way-рждрзЗ ржЦрзБржБржЬрзЗ ржкрж╛ржУрзЯрж╛ ржпрж╛рзЯред

0 ржерзЗржХрзЗ n ржкрж░рзНржпржирзНржд ржПржХржЯрж╛ рж▓рж┐рж╕рзНржЯ ржмрж╛ржирж┐рзЯрзЗржЫрзЛ тЖТ reserve

рждрж╛рж░ржкрж░ reserve-ржПрж░ ржкрзНрж░рждрж┐ржЯрж╛ ржирж╛ржорзНржмрж╛рж░ржХрзЗ ржжрзЗржЦрзЗ ржЪрзЗржХ ржХрж░ржЫрзЛ: ржпржжрж┐ рж╕рзЗржЯрж╛ nums-ржП ржирж╛ ржерж╛ржХрзЗ тЖТ ржРржЯрж╛ржЗ ржорж┐рж╕рж┐ржВред

тЬЕ ржХрзЛржб ржмрзНржпрж╛ржЦрзНржпрж╛ (Line-by-Line in Bangla)
cpp
Copy
Edit
unordered_set<int> set1; 
ЁЯФ╣ ржПржХржЯрж╛ unordered_set ржирж┐ржЪрзНржЫрзЛ ржпрж╛рждрзЗ nums ржПрж░ рж╕ржм ржирж╛ржорзНржмрж╛рж░ рж░рж╛ржЦрзЛред
unordered_set ржПрж░ ржЦрзЛржБржЬрж╛рж░ рж╕ржорзЯ complexity O(1) average case-ржПред

cpp
Copy
Edit
vector<int> reserve;
ЁЯФ╣ ржПржЦрж╛ржирзЗ рждрзБржорж┐ 0 ржерзЗржХрзЗ n ржкрж░рзНржпржирзНржд рж╕ржм рж╕ржВржЦрзНржпрж╛ рж░рж╛ржЦржмрзЗред

cpp
Copy
Edit
int n = nums.size();
int miss;
ЁЯФ╣ n рж╣ржЪрзНржЫрзЗ nums-ржПрж░ рж╕рж╛ржЗржЬред ржЖржорж░рж╛ ржЬрж╛ржирж┐ ржорж┐рж╕рж┐ржВ ржирж╛ржорзНржмрж╛рж░ 0 ржерзЗржХрзЗ n ржПрж░ ржоржзрзНржпрзЗ рж╣ржмрзЗред

cpp
Copy
Edit
for(int i = 0; i <= n; i++) {
    reserve.push_back(i);
}
ЁЯФ╣ рждрзБржорж┐ reserve ржнрж░ржЫрзЛ 0 ржерзЗржХрзЗ n ржкрж░рзНржпржирзНржд рж╕ржм рж╕ржВржЦрзНржпрж╛ ржжрж┐рзЯрзЗред
ЁЯСЙ Total n+1 рж╕ржВржЦрзНржпрж╛ред

cpp
Copy
Edit
for(int j = 0; j < nums.size(); j++) {
    set1.insert(nums[j]);
}
ЁЯФ╣ ржПржЦржи nums ржПрж░ рж╕ржм рж╕ржВржЦрзНржпрж╛ set1-ржП ржврзБржХрж┐рзЯрзЗ рж░рж╛ржЦрж▓рзЗ future-ржП ржЦрзЛржБржЬрж╛ рж╕рж╣ржЬ рж╣ржмрзЗред

cpp
Copy
Edit
for(int k = 0; k < reserve.size(); k++) {
    if(set1.find(reserve[k]) == set1.end()) {
        miss = reserve[k];
        break;
    }
}
ЁЯФ╣ reserve-ржПрж░ рж╕ржм рж╕ржВржЦрзНржпрж╛рж░ ржнрж┐рждрж░ ржжрж┐рзЯрзЗ ржпрж╛ржЪрзНржЫрзЛред
ЁЯФН ржпржжрж┐ ржХрзЛржирзЛ рж╕ржВржЦрзНржпрж╛ set1 (ржорж╛ржирзЗ nums) ржП ржирж╛ ржерж╛ржХрзЗ тЖТ рж╕рзЗржЯрж╛ржЗ ржорж┐рж╕рж┐ржВред

cpp
Copy
Edit
return miss;
ЁЯФ╣ ржорж┐рж╕рж┐ржВ рж╕ржВржЦрзНржпрж╛ржЯрж┐ рж░рж┐ржЯрж╛рж░рзНржи ржХрж░ржЫрзЛред

ЁЯФО ржЙржжрж╛рж╣рж░ржг ржжрж┐рзЯрзЗ ржмрзНржпрж╛ржЦрзНржпрж╛ (Test Case Walkthrough)
тЬЕ Test Case: nums = [3,0,1]
n = 3 тЖТ 0 to 3 ржкрж░рзНржпржирзНржд ржерж╛ржХрж╛ ржЙржЪрж┐ржд тЖТ [0,1,2,3]

nums тЖТ [3,0,1]

reserve тЖТ [0,1,2,3]

set1 тЖТ {0,1,3}

reserve-ржПрж░ ржоржзрзНржпрзЗ 2 ржХрзЗ ржЦрзБржБржЬрзЗ ржкрж╛ржмрзЗ ржирж╛ тЖТ тЬЕ ржЙрждрзНрждрж░: 2

тЬЕ Test Case: nums = [0,1]
n = 2

reserve = [0,1,2]

set1 = {0,1}

2 ржирж╛ржЗ тЖТ тЬЕ ржЙрждрзНрждрж░: 2

тЬЕ Test Case: nums = [9,6,4,2,3,5,7,0,1]
n = 9

reserve = [0,1,2,3,4,5,6,7,8,9]

set1-ржП рж╕ржм ржЖржЫрзЗ ржЫрж╛рзЬрж╛ 8 тЖТ тЬЕ ржЙрждрзНрждрж░: 8

тЬЕ ржХрзЗржи ржПржЗ рж╕ржорж╛ржзрж╛ржи Accepted рж╣рж▓рзЛ?
рж╕ржарж┐ржХржнрж╛ржмрзЗ 0 ржерзЗржХрзЗ n ржПрж░ рж░рзЗржЮрзНржЬ рждрзИрж░рж┐ ржХрж░рзЗржЫрзЛ

unordered_set ржжрж┐рзЯрзЗ nums-ржП ржжрзНрж░рзБржд ржЦрзЛржБржЬрж╛ ржХрж░рзЗржЫрзЛ тЖТ efficient

Overall time complexity тЖТ O(n)

Space complexity тЖТ O(n)

ржПржЯрж╛ржЗ ржХрж╛рж░ржг тАФ ржХрзЛржб рж╕ржарж┐ржХржнрж╛ржмрзЗ ржХрж╛ржЬ ржХрж░ржЫрзЗ ржПржмржВ efficiency ржнрж╛рж▓рзЛред

Full Code:
----------

  class Solution 
{
public:
    int missingNumber(vector<int>& nums) 
    {
      unordered_set<int>set1;
       vector<int>reserve;
       int n=nums.size();
       int miss;
       for(int i=0;i<=n;i++)
       {
       reserve.push_back(i);
       }
       for(int j=0;j<nums.size();j++)
       {
        set1.insert(nums[j]);
       }
       for(int k=0;k<reserve.size();k++)
       {
        if(set1.find(reserve[k])==set1.end())
        {
          miss=reserve[k];
          break;
        }
       }
       return miss;
    }
};
