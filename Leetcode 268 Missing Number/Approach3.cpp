ржорж┐ ржПржЦржи ржпрзЗржЗ ржирждрзБржи solution рж╢рзЗрзЯрж╛рж░ ржХрж░рзЗржЫрзЛ рж╕рзЗржЯрж┐ржУ LeetCode-ржПрж░ Missing Number рж╕ржорж╕рзНржпрж╛рж░ рж╕ржарж┐ржХ ржУ ржЧрзНрж░рж╣ржгржпрзЛржЧрзНржп рж╕ржорж╛ржзрж╛ржиред ржПржмрж╛рж░ ржЖржорж░рж╛ рждрзЛржорж╛рж░ ржирждрзБржи ржХрзЛржбржЯрж┐ line-by-line Bangla рждрзЗ ржмрзНржпрж╛ржЦрзНржпрж╛, test case walkthrough, ржПржмржВ ржЪрж┐ржирзНрждрж╛ ржХрж░рж╛рж░ ржкржжрзНржзрждрж┐ (approach) ржмрж┐рж╢рзНрж▓рзЗрж╖ржг ржХрж░рзЗ ржжрзЗржЦржмрзЛред

ЁЯФН ржкрзНрж░рж╢рзНржиржЯрж╛ ржХрзА ржмрж▓ржЫрзЗ?
Input: nums = [0, 1, 3]
Output: 2

рждрзЛржорж╛ржХрзЗ ржПржоржи ржПржХржЯрж╛ nums array ржжрзЗржУрзЯрж╛ рж╣рзЯрзЗржЫрзЗ, ржпрж╛рждрзЗ ржЖржЫрзЗ n рж╕ржВржЦрзНржпржХ ржнрж┐ржирзНржи рж╕ржВржЦрзНржпрж╛ (distinct), ржпрзЗржЧрзБрж▓рзЛ ржПрж╕рзЗржЫрзЗ 0 ржерзЗржХрзЗ n ржкрж░рзНржпржирзНржд рж░рзЗржЮрзНржЬ ржерзЗржХрзЗред

тЖТ ржХрж┐ржирзНрждрзБ рждрж╛рж░ ржоржзрзНржпрзЗ ржорж╛рждрзНрж░ ржПржХржЯрж┐ рж╕ржВржЦрзНржпрж╛ ржирзЗржЗред

рждрзЛржорж╛рж░ ржХрж╛ржЬ: ржУржЗ missing рж╕ржВржЦрзНржпрж╛ржЯрж┐ ржмрзЗрж░ ржХрж░рж╛ред

ЁЯза рждрзБржорж┐ ржХрзАржнрж╛ржмрзЗ ржЪрж┐ржирзНрждрж╛ ржХрж░рзЗржЫрзЛ?
ржкрзНрж░ржержорзЗ рждрзБржорж┐ ржЪрж┐ржирзНрждрж╛ ржХрж░рзЗржЫрзЛ:

ржпрзЗрж╣рзЗрждрзБ nums-ржП ржЖржЫрзЗ nржЯрж┐ рж╕ржВржЦрзНржпрж╛, рждрж╛ржЗ 0 ржерзЗржХрзЗ n ржкрж░рзНржпржирзНржд ржорзЛржЯ n+1ржЯрж┐ рж╕ржВржЦрзНржпрж╛ ржерж╛ржХрж╛ ржЙржЪрж┐рждред

рждрж╛рж╣рж▓рзЗ ржЖржорж░рж╛ ржпржжрж┐ 0 ржерзЗржХрзЗ n ржкрж░рзНржпржирзНржд ржкрзНрж░рждрзНржпрзЗржХржЯрж┐ рж╕ржВржЦрзНржпрж╛ ржзрж░рзЗ ржЪрзЗржХ ржХрж░рж┐:
"ржПржЗ рж╕ржВржЦрзНржпрж╛ржЯрж╛ nums-ржП ржЖржЫрзЗ ржХрж┐ржирж╛?" тАФ рждрж╛рж╣рж▓рзЗржЗ ржмрзБржЭрждрзЗ ржкрж╛рж░ржмрзЛ ржХрзЗ ржорж┐рж╕рж┐ржВред

ржПржЬржирзНржп рждрзБржорж┐:

unordered_map<int, int> тЖТ рж╕ржВржЦрзНржпрж╛ ржЧрзБрж▓рзЛрж░ frequency рж╣рж┐рж╕рж╛ржм ржХрж░рзЗржЫрзЛ (ржпржжрж┐ржУ рж╕ржм рж╕ржВржЦрзНржпрж╛ 1 ржмрж╛рж░ржЗ ржерж╛ржХржмрзЗ)

0 ржерзЗржХрзЗ n ржкрж░рзНржпржирзНржд ржПржХржЯрж╛ рж▓рж┐рж╕рзНржЯ ржмрж╛ржирж┐рзЯрзЗ ржЪрзЗржХ ржХрж░рзЗржЫрзЛ ржХрзЛржи рж╕ржВржЦрзНржпрж╛ ржирзЗржЗред

тЬЕ ржХрзЛржб ржмрзНржпрж╛ржЦрзНржпрж╛ Line-by-Line (Bangla)
cpp
Copy
Edit
unordered_map<int, int> freq;
ЁЯФ╣ ржПржХржЯрж╛ frequency map ржирж┐ржЪрзНржЫрзЛ ржпрж╛рждрзЗ nums ржП ржкрзНрж░рждрж┐ржЯрж╛ рж╕ржВржЦрзНржпрж╛ ржХрзЯржмрж╛рж░ ржЖржЫрзЗ рж╕рзЗржЯрж╛ рж░рж╛ржЦрж╛ ржпрж╛рзЯред

cpp
Copy
Edit
for(int i=0;i<nums.size();i++) {
    freq[nums[i]]++;
}
ЁЯФ╣ nums ржПрж░ рж╕ржм рж╕ржВржЦрзНржпрж╛ map ржП ржврзЛржХрж╛ржЪрзНржЫрзЛред
ЁЯСЙ ржпрзЗрж╣рзЗрждрзБ nums ржПрж░ рж╕ржм рж╕ржВржЦрзНржпрж╛ distinct (ржПржХржЗ ржирж╛ржорзНржмрж╛рж░ ржмрж╛рж░ржмрж╛рж░ ржирзЗржЗ), рждрж╛ржЗ ржкрзНрж░рждрж┐ржЯрж╛рж░ value рж╣ржмрзЗ 1ред

cpp
Copy
Edit
int n = nums.size();
vector<int> reserve;
ЁЯФ╣ n рж╣ржЪрзНржЫрзЗ nums ржПрж░ рж╕рж╛ржЗржЬред ржПржЦржи 0 ржерзЗржХрзЗ n ржкрж░рзНржпржирзНржд рж╕ржм рж╕ржВржЦрзНржпрж╛ рж░рж╛ржЦрж╛рж░ ржЬржирзНржп reserve ржирж╛ржорзЗ ржПржХржЯрж╛ ржнрзЗржХрзНржЯрж░ ржмрж╛ржирж╛ржЪрзНржЫрзЛред

cpp
Copy
Edit
for(int j=0;j<=n;j++) {
    reserve.push_back(j);
}
ЁЯФ╣ reserve рждрзЗ ржврзБржХрж╛ржЪрзНржЫрзЛ 0 ржерзЗржХрзЗ n ржкрж░рзНржпржирзНржд рж╕ржм рж╕ржВржЦрзНржпрж╛ тЖТ ржорзЛржЯ n+1 рж╕ржВржЦрзНржпрж╛ред

cpp
Copy
Edit
int miss;
for(int k=0;k<reserve.size();k++) {
    if(freq[reserve[k]]==0) {
        miss=reserve[k];
        break;
    }
}
ЁЯФ╣ reserve ржерзЗржХрзЗ ржПржХ ржПржХ ржХрж░рзЗ рж╕ржВржЦрзНржпрж╛ ржирж┐ржЪрзНржЫрзЛред
ЁЯСЙ ржпржжрж┐ ржХрзЛржи рж╕ржВржЦрзНржпрж╛ freq map ржП ржирж╛ ржерж╛ржХрзЗ (ржорж╛ржирзЗ, value 0), рждрж╛рж╣рж▓рзЗ рж╕рзЗржЗ рж╕ржВржЦрзНржпрж╛ржЯрж╛ржЗ ржорж┐рж╕рж┐ржВред

cpp
Copy
Edit
return miss;
ЁЯФ╣ ржорж┐рж╕рж┐ржВ ржирж╛ржорзНржмрж╛рж░ рж░рж┐ржЯрж╛рж░рзНржи ржХрж░ржЫрзЛред

ЁЯзк Test Case Walkthrough (Bangla)
тЬЕ Example 1: nums = [3,0,1]
n = 3

reserve = [0,1,2,3]

freq map = {0:1, 1:1, 3:1}

reserve[0] тЖТ 0 тЖТ ржЖржЫрзЗ
reserve[1] тЖТ 1 тЖТ ржЖржЫрзЗ
reserve[2] тЖТ тЭМ ржирзЗржЗ тЖТ тЬЕ Missing = 2

тЬЕ Example 2: nums = [0,1]
n = 2

reserve = [0,1,2]

freq = {0:1, 1:1}

reserve[2] тЖТ тЭМ ржирзЗржЗ тЖТ тЬЕ Missing = 2

тЬЕ Example 3: nums = [9,6,4,2,3,5,7,0,1]
n = 9

reserve = [0,1,2,3,4,5,6,7,8,9]

freq = {...} рж╕ржм ржЖржЫрзЗ рж╢рзБржзрзБ 8 ржирзЗржЗ

тЬЕ Missing = 8

тЬЕ ржХрзЗржи ржПржЗ рж╕ржорж╛ржзрж╛ржи Accepted рж╣рзЯрзЗржЫрзЗ?
unordered_map ржжрж┐рзЯрзЗ O(1) ржЯрж╛ржЗржорзЗ ржЦрзЛржБржЬрж╛ рж╣ржЪрзНржЫрзЗ тЖТ efficient

nums рж╕рзНржХрзНржпрж╛ржи рж╣ржЪрзНржЫрзЗ O(n)

reserve-ржП n+1 рж╕ржВржЦрзНржпрж╛рж░ ржоржзрзНржп ржерзЗржХрзЗ ржЪрзЗржХ ржХрж░рж╛ рж╣ржЪрзНржЫрзЗ O(n)

Total Time Complexity: O(n)

Space Complexity: O(n) (map + reserve vector)

рждрж╛ржЗ ржПржЗ рж╕ржорж╛ржзрж╛ржиржУ рж╕ржарж┐ржХ ржПржмржВ acceptedред

Full Code:
---------

  class Solution 
{
public:
    int missingNumber(vector<int>& nums) 
    {
      unordered_map<int,int>freq;
       for(int i=0;i<nums.size();i++)
       {
        freq[nums[i]]++;
       }
       int n=nums.size();
       vector<int>reserve;
       for(int j=0;j<=n;j++)
       {
        reserve.push_back(j);
       }
       int  miss;
       for(int k=0;k<reserve.size();k++)
       {
        if(freq[reserve[k]]==0)
        {
            miss=reserve[k];
            break;
        }
       }
       return miss;
    }
};
