ЁЯза рж╕ржорж╕рзНржпрж╛рж░ ржмрж┐рж╢рзНрж▓рзЗрж╖ржг (Problem Analysis in Bangla)
ржкрзНрж░рждрж┐ржЯрж┐ index i-рж░ ржЬржирзНржп ржПржХржЯрж┐ subarray рждрзИрж░рж┐ ржХрж░рждрзЗ рж╣ржмрзЗ ржпрзЗржЯрж╛рж░ рж╢рзБрж░рзБ start = max(0, i - nums[i]) ржерзЗржХрзЗ ржПржмржВ рж╢рзЗрж╖ i ржкрж░рзНржпржирзНрждред
рждрж╛рж░ржкрж░, ржР subarray-рж░ рж╕ржмржЧрзБрж▓рзЛ ржЙржкрж╛ржжрж╛ржирзЗрж░ ржпрзЛржЧржлрж▓ ржмрзЗрж░ ржХрж░рзЗ рж╕ржмржЧрзБрж▓рзЛ index-ржПрж░ ржЬржирзНржп ржпрзЛржЧ ржХрж░рждрзЗ рж╣ржмрзЗред

ЁЯФН ржЙржжрж╛рж╣рж░ржг ржмрж┐рж╢рзНрж▓рзЗрж╖ржг (Example Analysis)
Input: nums = [2, 3, 1]
ржЪрж▓ рждрзЛржорж░рж╛ ржПржХрзЗржХржЯрж╛ index ржжрзЗржЦрзЗ ржжрзЗржЦрж┐ ржХрзА рж╣рзЯ:

i	nums[i]	start = max(0, i - nums[i])	Subarray	Sum
0	2	max(0, 0 - 2) = 0	nums[0] = [2]	2
1	3	max(0, 1 - 3) = 0	nums[0..1] = [2, 3]	5
2	1	max(0, 2 - 1) = 1	nums[1..2] = [3, 1]	4

ЁЯСЙ ржорзЛржЯ ржпрзЛржЧржлрж▓ = 2 + 5 + 4 = 11

тЬЕ рж╕ржорж╛ржзрж╛ржирзЗрж░ ржкржжрзНржзрждрж┐ (Approach Explanation in Bangla)
Step-by-step:
ржкрзНрж░рждрж┐ржЯрж┐ index i-рж░ ржЬржирзНржп start = max(0, i - nums[i]) ржмрзЗрж░ ржХрж░рзЛред

рждрж╛рж░ржкрж░ start ржерзЗржХрзЗ i ржкрж░рзНржпржирзНржд subarray-ржПрж░ рж╕ржм ржЙржкрж╛ржжрж╛ржирзЗрж░ ржпрзЛржЧржлрж▓ ржмрзЗрж░ ржХрж░рзЛред

ржкрзНрж░рждрзНржпрзЗржХржЯрж┐ index ржПрж░ ржЬржирзНржп ржПржЗ sum ржпрзЛржЧ ржХрж░рзЛ total ржнрзЗрж░рж┐рзЯрзЗржмрж▓рзЗред

тЬЕ ржХрзЛржб ржмрзНржпрж╛ржЦрзНржпрж╛ (Code Explanation in Bangla)
cpp
Copy
Edit
class Solution {
public:
   // рж╕рж╛ржмржЕрзНржпрж╛рж░рзЗ-рж░ ржпрзЛржЧржлрж▓ ржмрзЗрж░ ржХрж░рж╛рж░ рж╣рзЗрж▓ржкрж╛рж░ ржлрж╛ржВрж╢ржи
   int sum(int start, int end, vector<int>& nums)
   {
     int sum = 0;
     for (int j = start; j <= end; j++)
     {
        sum += nums[j];
     }
     return sum;
   }

   // ржорзВрж▓ ржлрж╛ржВрж╢ржи
   int subarraySum(vector<int>& nums) {
       int total = 0;
       int start;
       
       for (int i = 0; i < nums.size(); i++)
       {
         // рж╕рж╛ржмржЕрзНржпрж╛рж░рзЗ-рж░ рж╢рзБрж░рзБ ржирж┐рж░рзНржзрж╛рж░ржг
         start = std::max(0, i - nums[i]);
         
         // рж╕рж╛ржмржЕрзНржпрж╛рж░рзЗ ржпрзЛржЧ ржХрж░рзЗ ржорзЛржЯ ржпрзЛржЧржлрж▓рзЗ ржпрзЛржЧ ржХрж░рж╛
         total += sum(start, i, nums);
       } 

       return total;
   }
};
ЁЯзк ржЙржжрж╛рж╣рж░ржг ржжрж┐рзЯрзЗ ржХрзЛржб ржЯрзЗрж╕рзНржЯ (Test with Example)
cpp
Copy
Edit
int main() {
    Solution obj;
    vector<int> nums1 = {2, 3, 1};
    cout << obj.subarraySum(nums1) << endl; // Output: 11

    vector<int> nums2 = {3, 1, 1, 2};
    cout << obj.subarraySum(nums2) << endl; // Output: 13

    return 0;
}
тЬЕ ржХрзЗржи ржПржЗ ржХрзЛржб Accept рж╣рзЯ?
Input constraint ржЫрзЛржЯ (n тЙд 100), рждрж╛ржЗ ржкрзНрж░рждрж┐ index-ржП loop ржЪрж╛рж▓рж╛ржирзЛ ржПржмржВ subarray sum ржмрзЗрж░ ржХрж░рж╛ performance рж╕ржорж╕рзНржпрж╛рзЯ ржлрзЗрж▓ржмрзЗ ржирж╛ред

Time Complexity: O(n^2) тАФ ржХрж╛рж░ржг ржкрзНрж░рждрж┐ржЯрж┐ index-ржП ржЖржмрж╛рж░ ржПржХржЯрж╛ O(n) ржкрж░рзНржпржирзНржд loop рж╣ржЪрзНржЫрзЗ worst case-ржПред

Full Code:
----------

  class Solution {
public:
   int sum(int start,int end ,vector<int>& nums)
   {
     int sum=0;
     //start=0;
     for(int j=start;j<=end;j++)
     {
      sum+=nums[j];
     }
     return sum;
   }
    int subarraySum(vector<int>& nums) {
       int total=0;
       int start;
       for(int i=0;i<nums.size();i++)
       {
         start=std::max(0,i-nums[i]);
         total+=sum(start,i,nums);
       } 
  return total;
    }
};
