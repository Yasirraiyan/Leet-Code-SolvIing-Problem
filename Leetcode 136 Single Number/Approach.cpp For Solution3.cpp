üßæ Problem: 136. Single Number
üî∂ ‡¶™‡ßç‡¶∞‡¶∂‡ßç‡¶®‡ßá‡¶∞ ‡¶Æ‡ßÇ‡¶≤ ‡¶ï‡¶•‡¶æ:
‡¶§‡ßã‡¶Æ‡¶æ‡¶ï‡ßá ‡¶è‡¶ï‡¶ü‡¶æ nums ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶∞‡ßá ‡¶¶‡ßá‡¶ì‡ßü‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá ‡¶Ø‡ßá‡¶ñ‡¶æ‡¶®‡ßá ‡¶∏‡¶¨ ‡¶á‡¶≤‡¶ø‡¶Æ‡ßá‡¶®‡ßç‡¶ü ‡¶¶‡ßÅ‡¶á‡¶¨‡¶æ‡¶∞ ‡¶ï‡¶∞‡ßá ‡¶Ü‡¶õ‡ßá, ‡¶ï‡¶ø‡¶®‡ßç‡¶§‡ßÅ ‡¶è‡¶ï‡¶ü‡¶æ ‡¶Æ‡¶æ‡¶§‡ßç‡¶∞ ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ ‡¶Ü‡¶õ‡ßá ‡¶Ø‡¶æ ‡¶è‡¶ï‡¶¨‡¶æ‡¶∞‡¶á ‡¶è‡¶∏‡ßá‡¶õ‡ßá‡•§
‡¶§‡ßã‡¶Æ‡¶æ‡¶ï‡ßá ‡¶∏‡ßá‡¶ü‡¶æ‡¶á ‡¶ñ‡ßÅ‡¶Å‡¶ú‡ßá ‡¶¨‡ßá‡¶∞ ‡¶ï‡¶∞‡¶§‡ßá ‡¶π‡¶¨‡ßá‡•§

‚úÖ ‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ ‡¶∏‡¶Æ‡¶æ‡¶ß‡¶æ‡¶® (HashMap ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡ßá):
cpp
Copy
Edit
int singleNumber(vector<int>& nums) {
    unordered_map<int,int> freq;
    for (int i = 0; i < nums.size(); i++) {
        freq[nums[i]]++;
    }

    int ans;
    for (auto it : freq) {
        if (it.second == 1) {
            ans = it.first;
            break;
        }
    }
    return ans;
}
‚úÖ ‚úÖ ‡¶è‡¶ü‡¶ø ‡¶ï‡ßá‡¶® ‡¶ï‡¶æ‡¶ú ‡¶ï‡¶∞‡ßá?
üõ†Ô∏è Step-by-step ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ñ‡ßç‡¶Ø‡¶æ:
unordered_map ‡¶¶‡¶ø‡ßü‡ßá ‡¶™‡ßç‡¶∞‡¶§‡¶ø‡¶ü‡¶ø ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ‡¶∞ frequency ‡¶ï‡¶æ‡¶â‡¶®‡ßç‡¶ü ‡¶ï‡¶∞‡¶æ ‡¶π‡ßü‡•§

‡¶§‡¶æ‡¶∞‡¶™‡¶∞ map-‡¶è ‡¶ò‡ßÅ‡¶∞‡ßá ‡¶¶‡ßá‡¶ñ‡¶æ ‡¶π‡ßü ‡¶ï‡ßã‡¶® ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ‡¶∞ frequency 1 ‚Äî ‡¶è‡¶ü‡¶ø‡¶á ‡¶∏‡ßá‡¶á ‡¶è‡¶ï‡¶Æ‡¶æ‡¶§‡ßç‡¶∞ ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ‡•§

‡¶∏‡ßá‡¶ü‡¶ø return ‡¶ï‡¶∞‡¶æ ‡¶π‡ßü‡•§

‚úÖ ‡¶è‡¶á ‡¶ï‡ßã‡¶° ‡¶ï‡ßã‡¶® Test Case-‡¶è ‡¶ï‡¶æ‡¶ú ‡¶ï‡¶∞‡ßá:
Test Case	Output
[2, 2, 1]	1
[4, 1, 2, 1, 2]	4
[1]	1

‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ ‡¶ï‡ßã‡¶° ‡¶∏‡¶¨‡¶ó‡ßÅ‡¶≤‡ßã ‡¶∏‡¶†‡¶ø‡¶ï ‡¶Ü‡¶â‡¶ü‡¶™‡ßÅ‡¶ü ‡¶¶‡¶ø‡¶ö‡ßç‡¶õ‡ßá‡•§ Accepted ‡¶π‡ßü‡ßá‡¶õ‡ßá‡•§

‚ö†Ô∏è ‡¶ï‡¶ø‡¶®‡ßç‡¶§‡ßÅ ‡¶è‡¶ï‡¶ü‡¶æ Warning:
‡¶™‡ßç‡¶∞‡¶∂‡ßç‡¶®‡ßá ‡¶¨‡¶≤‡¶æ ‡¶Ü‡¶õ‡ßá:

"You must implement a solution with a linear runtime complexity and use only constant extra space."

‚ùå ‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ ‡¶ï‡ßã‡¶°‡ßá‡¶∞ ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ:
Time Complexity: ‚úÖ O(n) ‚Äî ‡¶†‡¶ø‡¶ï ‡¶Ü‡¶õ‡ßá

Space Complexity: ‚ùå O(n) ‚Äî ‡¶ï‡¶æ‡¶∞‡¶£ unordered_map ‡¶Ö‡¶§‡¶ø‡¶∞‡¶ø‡¶ï‡ßç‡¶§ ‡¶ú‡¶æ‡ßü‡¶ó‡¶æ ‡¶®‡¶ø‡¶ö‡ßç‡¶õ‡ßá‡•§

‚úÖ ‡¶∏‡¶§‡ßç‡¶Ø‡¶ø‡¶ï‡¶æ‡¶∞‡ßá‡¶∞ Efficient ‡¶∏‡¶Æ‡¶æ‡¶ß‡¶æ‡¶® (Bitwise XOR):
cpp
Copy
Edit
int singleNumber(vector<int>& nums) {
    int result = 0;
    for (int num : nums) {
        result ^= num;
    }
    return result;
}
üß† ‡¶ï‡ßá‡¶® ‡¶ï‡¶æ‡¶ú ‡¶ï‡¶∞‡ßá?
‡¶ï‡ßã‡¶®‡ßã ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ‡¶ï‡ßá ‡¶®‡¶ø‡¶ú‡ßá ‡¶∏‡¶æ‡¶•‡ßá XOR ‡¶ï‡¶∞‡¶≤‡ßá ‡¶∞‡ßá‡¶ú‡¶æ‡¶≤‡ßç‡¶ü ‡¶π‡ßü 0 (‡¶Ø‡ßá‡¶Æ‡¶®: a ^ a = 0)

‡¶Ü‡¶∞ 0 ‡¶è‡¶∞ ‡¶∏‡¶æ‡¶•‡ßá ‡¶ï‡ßã‡¶®‡ßã ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ XOR ‡¶ï‡¶∞‡¶≤‡ßá ‡¶∏‡ßá‡¶ü‡¶æ ‡¶®‡¶ø‡¶ú‡ßá‡¶á ‡¶•‡¶æ‡¶ï‡ßá (0 ^ a = a)

‡¶Ø‡ßá‡¶π‡ßá‡¶§‡ßÅ ‡¶∏‡¶¨ ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ ‡¶¶‡ßÅ‡¶á‡¶¨‡¶æ‡¶∞ ‡¶Ü‡¶õ‡ßá, XOR ‡¶ï‡¶∞‡¶≤‡ßá ‡¶∏‡¶¨ ‡¶Æ‡ßÅ‡¶õ‡ßá ‡¶Ø‡¶æ‡¶¨‡ßá, ‡¶∂‡ßÅ‡¶ß‡ßÅ ‡¶è‡¶ï‡¶¨‡¶æ‡¶∞ ‡¶•‡¶æ‡¶ï‡¶æ ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ‡¶ü‡¶æ ‡¶•‡¶æ‡¶ï‡¶¨‡ßá‡•§

üßÆ ‡¶â‡¶¶‡¶æ‡¶π‡¶∞‡¶£:
[4,1,2,1,2]

Copy
Edit
4 ^ 1 ^ 2 ^ 1 ^ 2 
= (1^1) ^ (2^2) ^ 4 
= 0 ^ 0 ^ 4 
= 4
üîç Complexity Analysis:
Solution Type	Time Complexity	Space Complexity
HashMap (‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ ‡¶ï‡ßã‡¶°)	O(n)	O(n)
XOR (Best Solution)	‚úÖ O(n)	‚úÖ O(1)

üìò ‡¶≠‡¶¨‡¶ø‡¶∑‡ßç‡¶Ø‡¶§‡ßá ‡¶Æ‡¶®‡ßá ‡¶∞‡¶æ‡¶ñ‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ ‡¶ü‡¶ø‡¶™‡¶∏:
‡¶Ø‡¶ñ‡¶® ‡¶¶‡ßá‡¶ñ‡¶æ ‡¶Ø‡¶æ‡¶¨‡ßá ‡¶∏‡¶¨ ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ‡¶∞ ‡¶Æ‡¶ß‡ßç‡¶Ø‡ßá ‡¶∂‡ßÅ‡¶ß‡ßÅ ‡¶è‡¶ï‡¶ü‡¶æ ‡¶¨‡ßç‡¶Ø‡¶§‡¶ø‡¶ï‡ßç‡¶∞‡¶Æ ‡¶Ü‡¶õ‡ßá (‡¶Ø‡ßá‡¶Æ‡¶® ‡ßß ‡¶¨‡¶æ‡¶∞ ‡¶è‡¶∏‡ßá‡¶õ‡ßá), ‡¶Ü‡¶∞ ‡¶¨‡¶æ‡¶ï‡¶ø ‡¶∏‡¶¨ ‡ß® ‡¶¨‡¶æ‡¶∞, ‡¶§‡¶ñ‡¶®:

‚úÖ XOR ‡¶ü‡ßá‡¶ï‡¶®‡¶ø‡¶ï‡¶á ‡¶∏‡¶¨‡¶ö‡ßá‡ßü‡ßá ‡¶≠‡¶æ‡¶≤

‚úÖ ‡¶ï‡¶æ‡¶∞‡¶£ ‡¶è‡¶§‡ßá Time ‡¶ï‡¶Æ, Space ‡¶ï‡¶Æ

‡¶§‡ßÅ‡¶Æ‡¶ø ‡¶ö‡¶æ‡¶á‡¶≤‡ßá ‡¶Ü‡¶Æ‡¶ø ‡¶è‡¶á ‡¶™‡ßç‡¶∞‡¶¨‡¶≤‡ßá‡¶Æ‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶∏‡¶Æ‡ßç‡¶™‡ßÇ‡¶∞‡ßç‡¶£ ‡¶®‡ßã‡¶ü ‡¶≤‡¶ø‡¶ñ‡ßá GitHub ‡¶¨‡¶æ PDF ‡¶Ü‡¶ï‡¶æ‡¶∞‡ßá ‡¶¶‡¶ø‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡¶ø, ‡¶Ø‡¶æ‡¶§‡ßá ‡¶∞‡¶ø‡¶≠‡¶ø‡¶∂‡¶® ‡¶ï‡¶∞‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡ßã ‡¶∏‡¶π‡¶ú‡ßá‡•§ ‡¶∏‡ßá‡¶ü‡¶æ ‡¶ï‡¶ø ‡¶ö‡¶æ‡¶ì?








You said:
test all case Example 1:

Input: nums = [2,2,1]

Output: 1

Example 2:

Input: nums = [4,1,2,1,2]

Output: 4

Example 3:

Input: nums = [1]

Output: 1

 

Constraints:

1 <= nums.length <= 3 * 104
-3 * 104 <= nums[i] <= 3 * 104
Each element in the array appears twice except for one element which appears only once.  for my sol


ChatGPT said:
‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ ‡¶¶‡ßá‡¶ì‡ßü‡¶æ ‡¶ï‡ßã‡¶°‡¶ü‡¶ø (HashMap ‡¶¶‡¶ø‡ßü‡ßá ‡¶ï‡¶∞‡¶æ) ‡¶†‡¶ø‡¶ï‡¶Æ‡¶§‡ßã ‡¶∏‡¶¨ ‡¶ï‡ßá‡¶∏‡ßá ‡¶ï‡¶æ‡¶ú ‡¶ï‡¶∞‡ßá ‡¶ï‡¶ø‡¶®‡¶æ ‡¶∏‡ßá‡¶ü‡¶æ ‡¶®‡¶ø‡¶ö‡ßá ‡¶§‡¶ø‡¶®‡¶ü‡¶ø ‡¶è‡¶ï‡ßç‡¶∏‡¶æ‡¶Æ‡ßç‡¶™‡¶≤ ‡¶¶‡¶ø‡ßü‡ßá ‡¶ü‡ßá‡¶∏‡ßç‡¶ü ‡¶ï‡¶∞‡¶õ‡¶ø:

‚úÖ ‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ ‡¶ï‡ßã‡¶° (‡¶∏‡ßç‡¶Æ‡¶∞‡¶£‡¶æ‡¶∞‡ßç‡¶•‡ßá):
cpp
Copy
Edit
#include <vector>
#include <unordered_map>
using namespace std;

class Solution {
public:
    int singleNumber(vector<int>& nums) {
        unordered_map<int, int> freq;
        for (int i = 0; i < nums.size(); i++) {
            freq[nums[i]]++;
        }
        int ans;
        for (auto it : freq) {
            if (it.second == 1) {
                ans = it.first;
                break;
            }
        }
        return ans;
    }
};
üîç Test Cases with Explanation:
‚úÖ Example 1:
Input: [2, 2, 1]
HashMap: {2 ‚Üí 2, 1 ‚Üí 1}
Output: 1 ‚úÖ

‚úÖ Example 2:
Input: [4, 1, 2, 1, 2]
HashMap: {4 ‚Üí 1, 1 ‚Üí 2, 2 ‚Üí 2}
Output: 4 ‚úÖ

‚úÖ Example 3:
Input: [1]
HashMap: {1 ‚Üí 1}
Output: 1 ‚úÖ

‚úÖ Custom Case 1:
Input: [9, 3, 9, 3, 7]
HashMap: {9 ‚Üí 2, 3 ‚Üí 2, 7 ‚Üí 1}
Output: 7 ‚úÖ

‚úÖ Custom Case 2:
Input: [1000, 2000, 1000]
HashMap: {1000 ‚Üí 2, 2000 ‚Üí 1}
Output: 2000 ‚úÖ

üß† ‡¶â‡¶™‡¶∏‡¶Ç‡¶π‡¶æ‡¶∞:
‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ HashMap ‡¶≠‡¶ø‡¶§‡ßç‡¶§‡¶ø‡¶ï ‡¶∏‡¶≤‡¶ø‡¶â‡¶∂‡¶® ‡¶®‡¶ø‡¶ö‡ßá‡¶∞ ‡¶∏‡¶¨ ‡¶ü‡ßá‡¶∏‡ßç‡¶ü ‡¶ï‡ßá‡¶∏‡ßá ‡¶ï‡¶æ‡¶ú ‡¶ï‡¶∞‡ßá:

Test Case	Output	Correct?
[2,2,1]	1	‚úÖ
[4,1,2,1,2]	4	‚úÖ
[1]	1	‚úÖ
[9,3,9,3,7]	7	‚úÖ
[1000,2000,1000]	2000	‚úÖ

üìå ‡¶Æ‡¶®‡ßá ‡¶∞‡¶æ‡¶ñ‡¶æ‡¶∞ ‡¶Æ‡¶§‡ßã:
‡¶è‡¶á ‡¶ï‡ßã‡¶° ‡¶∏‡¶¨ ‡¶ï‡ßá‡¶∏‡ßá ‡¶†‡¶ø‡¶ï ‡¶Ü‡¶â‡¶ü‡¶™‡ßÅ‡¶ü ‡¶¶‡ßá‡ßü ‚úÖ

‡¶ï‡¶ø‡¶®‡ßç‡¶§‡ßÅ ‡¶™‡ßç‡¶∞‡¶∂‡ßç‡¶®‡ßá ‡¶¨‡¶≤‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá: "constant space" ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡¶§‡ßá ‡¶π‡¶¨‡ßá ‚ùå

‡¶§‡¶æ‡¶á ‡¶≠‡¶¨‡¶ø‡¶∑‡ßç‡¶Ø‡¶§‡ßá XOR approach ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡ßã ‚Äî ‡¶¶‡ßç‡¶∞‡ßÅ‡¶§, ‡¶∏‡ßç‡¶™‡ßá‡¶∏ ‡¶∏‡¶æ‡¶∂‡ßç‡¶∞‡ßü‡ßÄ ‡¶è‡¶¨‡¶Ç ‡¶á‡¶®‡ßç‡¶ü‡¶æ‡¶∞‡¶≠‡¶ø‡¶â‡¶§‡ßá ‡¶¨‡ßá‡¶∂‡¶ø ‡¶ó‡ßç‡¶∞‡¶π‡¶£‡¶Ø‡ßã‡¶ó‡ßç‡¶Ø‡•§

‡¶§‡ßã‡¶Æ‡¶æ‡¶ï‡ßá ‡¶ï‡¶ø XOR ‡¶∏‡¶Æ‡¶æ‡¶ß‡¶æ‡¶® ‡¶¶‡¶ø‡ßü‡ßá ‡¶è‡¶ó‡ßÅ‡¶≤‡ßã‡¶ï‡ßá‡¶ì ‡¶ü‡ßá‡¶∏‡ßç‡¶ü ‡¶ï‡¶∞‡ßá ‡¶¶‡ßá‡¶ñ‡¶æ‡¶¨‡ßã?







You said:
line by line test


ChatGPT said:
‡¶ö‡¶≤‡ßã ‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ HashMap ‡¶≠‡¶ø‡¶§‡ßç‡¶§‡¶ø‡¶ï ‡¶ï‡ßã‡¶°‡¶ü‡¶ø line-by-line Example 2: nums = [4, 1, 2, 1, 2] ‡¶è‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶ß‡¶æ‡¶™‡ßá ‡¶ß‡¶æ‡¶™‡ßá ‡¶ü‡ßá‡¶∏‡ßç‡¶ü ‡¶ï‡¶∞‡¶ø ‚Äî ‡¶Ø‡¶æ‡¶§‡ßá ‡¶≠‡¶¨‡¶ø‡¶∑‡ßç‡¶Ø‡¶§‡ßá ‡¶™‡ßú‡¶≤‡ßá ‡¶¨‡ßÅ‡¶ù‡ßá ‡¶´‡ßá‡¶≤‡ßã ‡¶†‡¶ø‡¶ï ‡¶ï‡ßÄ ‡¶π‡¶ö‡ßç‡¶õ‡ßá‡•§

‚úÖ Problem:
‡¶™‡ßç‡¶∞‡¶§‡¶ø‡¶ü‡¶ø ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ ‡¶¶‡ßÅ‡¶á‡¶¨‡¶æ‡¶∞ ‡¶•‡¶æ‡¶ï‡ßá, ‡¶∂‡ßÅ‡¶ß‡ßÅ ‡¶è‡¶ï‡¶ü‡¶æ ‡¶Æ‡¶æ‡¶§‡ßç‡¶∞ ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ ‡¶•‡¶æ‡¶ï‡ßá ‡¶è‡¶ï‡¶¨‡¶æ‡¶∞‡•§ ‡¶∏‡ßá‡¶ü‡¶ø ‡¶¨‡ßá‡¶∞ ‡¶ï‡¶∞‡¶§‡ßá ‡¶π‡¶¨‡ßá‡•§

üß† ‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ ‡¶ï‡ßã‡¶°:
cpp
Copy
Edit
int singleNumber(vector<int>& nums) {
    unordered_map<int, int> freq;
    for (int i = 0; i < nums.size(); i++) {
        freq[nums[i]]++;
    }
    int ans;
    for (auto it : freq) {
        if (it.second == 1) {
            ans = it.first;
            break;
        }
    }
    return ans;
}
üì• Input:
cpp
Copy
Edit
nums = [4, 1, 2, 1, 2]
üîÑ Step-by-step Execution:
Step 1: Frequency Count (freq[nums[i]]++)
cpp
Copy
Edit
freq[4]++; ‚Üí freq = {4:1}
freq[1]++; ‚Üí freq = {4:1, 1:1}
freq[2]++; ‚Üí freq = {4:1, 1:1, 2:1}
freq[1]++; ‚Üí freq = {4:1, 1:2, 2:1}
freq[2]++; ‚Üí freq = {4:1, 1:2, 2:2}
üîç Final freq map:

cpp
Copy
Edit
{4:1, 1:2, 2:2}
Step 2: Find the single number
cpp
Copy
Edit
for (auto it : freq)
it = {4,1} ‚Üí it.second == 1 ‚úÖ ‚Üí ans = 4, break
‚õî ‡¶®‡¶æ ‡¶ó‡ßá‡¶≤‡ßá ‡¶™‡¶∞‡¶¨‡¶∞‡ßç‡¶§‡ßÄ ‡¶õ‡¶ø‡¶≤ {1,2}, {2,2} ‚Äî ‡¶Ø‡¶æ‡¶∞‡¶æ second == 2

Step 3: Return
cpp
Copy
Edit
return ans; // 4
‚úÖ Output:
cpp
Copy
Edit
4
üîÅ Recap:
Step	Map Status	Comment
After loop	{4:1, 1:2, 2:2}	Frequency map built
Check loop	Finds 4 where freq = 1	Breaks early on match
Final ans	4	Correct single number found

üîö ‡¶â‡¶™‡¶∏‡¶Ç‡¶π‡¶æ‡¶∞ (Bangla Summary):
‡¶™‡ßç‡¶∞‡¶•‡¶Æ‡ßá ‡¶™‡ßç‡¶∞‡¶§‡¶ø‡¶ü‡¶ø ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ‡¶∞ ‡¶ò‡¶®‡¶§‡ßç‡¶¨ (frequency) ‡¶¨‡ßá‡¶∞ ‡¶ï‡¶∞‡¶æ ‡¶π‡ßü‡•§

‡¶§‡¶æ‡¶∞‡¶™‡¶∞ ‡¶Ø‡ßá‡¶á ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ‡¶∞ frequency = 1, ‡¶∏‡ßá‡¶ü‡¶æ ‡¶â‡¶§‡ßç‡¶§‡¶∞‡•§

‡¶è‡¶á ‡¶ï‡ßå‡¶∂‡¶≤ ‡¶∏‡¶¨ ‡¶ï‡ßá‡¶∏‡ßá‡¶á ‡¶†‡¶ø‡¶ï ‡¶ï‡¶æ‡¶ú ‡¶ï‡¶∞‡ßá, ‡¶ï‡¶ø‡¶®‡ßç‡¶§‡ßÅ Extra Space (HashMap) ‡¶≤‡¶æ‡¶ó‡ßá‡•§

‡¶ö‡¶æ‡¶ì ‡¶ï‡¶ø ‡¶Ü‡¶Æ‡¶ø ‡¶è‡¶ñ‡¶® XOR ‡¶¶‡¶ø‡ßü‡ßá O(1) Space ‡¶∏‡¶≤‡¶ø‡¶â‡¶∂‡¶®‡¶ì line-by-line ‡¶¶‡ßá‡¶ñ‡¶æ‡¶á?

















