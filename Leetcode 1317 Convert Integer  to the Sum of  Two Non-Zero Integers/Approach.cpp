üî∂ Problem Summary:

‡¶§‡ßã‡¶Æ‡¶æ‡¶ï‡ßá ‡¶è‡¶ï‡¶ü‡¶ø positive integer n ‡¶¶‡ßá‡¶ì‡ßü‡¶æ ‡¶π‡¶¨‡ßá‡•§ ‡¶§‡ßã‡¶Æ‡¶æ‡¶ï‡ßá ‡¶è‡¶Æ‡¶® ‡¶¶‡ßÅ‡¶ü‡¶ø positive integers a ‡¶ì b ‡¶¨‡ßá‡¶∞ ‡¶ï‡¶∞‡¶§‡ßá ‡¶π‡¶¨‡ßá ‡¶Ø‡¶æ‡¶§‡ßá:

a + b = n ‡¶π‡ßü ‡¶è‡¶¨‡¶Ç

a ‡¶ì b ‡¶¶‡ßÅ‡¶ü‡ßã‡¶á No-Zero integer, ‡¶Ö‡¶∞‡ßç‡¶•‡¶æ‡ßé ‡¶Ø‡ßá‡¶∏‡¶¨ ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ‡¶∞ ‡¶°‡¶ø‡¶ú‡¶ø‡¶ü‡ßá ‡¶ï‡ßã‡¶®‡ßã 0 ‡¶®‡ßá‡¶á (‡¶Ø‡ßá‡¶Æ‡¶® 10, 20, 105 ‚Üí invalid)‡•§



---

üî∑ ‡¶â‡¶¶‡¶æ‡¶π‡¶∞‡¶£:

‡¶â‡¶¶‡¶æ‡¶π‡¶∞‡¶£ ‡ßß:

Input: n = 2
Output: [1,1]
Explanation: 1 + 1 = 2, ‡¶è‡¶¨‡¶Ç ‡¶¶‡ßÅ‡¶ü‡ßã‡¶§‡ßá‡¶á ‡¶ï‡ßã‡¶®‡ßã '0' ‡¶®‡ßá‡¶á‡•§ valid ‚úÖ

‡¶â‡¶¶‡¶æ‡¶π‡¶∞‡¶£ ‡ß®:

Input: n = 11
Output: [2, 9] ‚úÖ
‡¶Ö‡¶•‡¶¨‡¶æ [8, 3], [4, 7] ‡¶è‡¶∏‡¶¨‡¶ì valid


---

üß† Approaching the Problem (‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ‡ßü ‡¶ö‡¶ø‡¶®‡ßç‡¶§‡¶æ ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶ß‡¶æ‡¶™):

Step 1:

‡¶Ü‡¶Æ‡¶∞‡¶æ ‡¶ú‡¶æ‡¶®‡¶ø a + b = n ‡¶π‡¶¨‡ßá, ‡¶è‡¶¨‡¶Ç a, b-‡¶§‡ßá 0 ‡¶•‡¶æ‡¶ï‡¶æ ‡¶Ø‡¶æ‡¶¨‡ßá ‡¶®‡¶æ‡•§
‡¶§‡¶æ‡¶π‡¶≤‡ßá n ‡¶è‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶∏‡¶Æ‡ßç‡¶≠‡¶æ‡¶¨‡ßç‡¶Ø a ‡¶®‡ßá‡¶ì, b = n - a ‡¶¨‡ßá‡¶∞ ‡¶ï‡¶∞‡ßã ‚Äî ‡¶§‡¶æ‡¶∞‡¶™‡¶∞ ‡¶ö‡ßá‡¶ï ‡¶ï‡¶∞‡ßã a ‡¶ì b ‡¶§‡ßá 0 ‡¶Ü‡¶õ‡ßá ‡¶ï‡¶ø ‡¶®‡¶æ‡•§

‡¶Ø‡¶¶‡¶ø ‡¶®‡¶æ ‡¶•‡¶æ‡¶ï‡ßá, ‡¶§‡¶æ‡¶π‡¶≤‡ßá ‡¶è‡¶á pair valid ‚úÖ
‡¶§‡ßÅ‡¶Æ‡¶ø ‡¶Ø‡ßá‡¶ï‡ßã‡¶®‡ßã ‡¶è‡¶ï‡¶ü‡¶æ‡¶á return ‡¶ï‡¶∞‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡ßã‡•§


---

‚úÖ Mathematical Approach:

‡¶§‡ßÅ‡¶Æ‡¶ø ‡¶è‡¶Æ‡¶® i ‡¶®‡¶æ‡¶ì (‡ßß ‡¶•‡ßá‡¶ï‡ßá n-1 ‡¶™‡¶∞‡ßç‡¶Ø‡¶®‡ßç‡¶§),
‡¶§‡¶æ‡¶∞‡¶™‡¶∞ a = i, b = n - i
‡¶§‡¶æ‡¶∞‡¶™‡¶∞ ‡¶ö‡ßá‡¶ï ‡¶ï‡¶∞‡ßã a ‡¶ì b ‡¶§‡ßá 0 ‡¶Ü‡¶õ‡ßá ‡¶ï‡¶ø ‡¶®‡¶æ‡•§


---

üß© Code Explanation (Line by Line in Bangla):

class Solution 
{
public:
    bool HasZero(int n)

‚û°Ô∏è HasZero ‡¶´‡¶æ‡¶Ç‡¶∂‡¶®‡¶ü‡¶æ ‡¶ö‡ßá‡¶ï ‡¶ï‡¶∞‡¶¨‡ßá ‡¶ï‡ßã‡¶®‡ßã ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ‡¶∞ ‡¶Æ‡¶ß‡ßç‡¶Ø‡ßá 0 ‡¶Ü‡¶õ‡ßá ‡¶ï‡¶ø‡¶®‡¶æ‡•§


---

{
        bool has=false;
        while(n>0)
        {
            int rem=n%10;

‚û°Ô∏è ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ‡¶ü‡¶ø‡¶∞ ‡¶™‡ßç‡¶∞‡¶§‡¶ø‡¶ü‡¶ø ‡¶°‡¶ø‡¶ú‡¶ø‡¶ü ‡¶®‡ßá‡¶¨ (mod 10 ‡¶¶‡¶ø‡ßü‡ßá)‡•§


---

if(rem==0)
            {
                has=true;
                break;
            }

‚û°Ô∏è ‡¶Ø‡¶¶‡¶ø ‡¶ï‡ßã‡¶®‡ßã ‡¶°‡¶ø‡¶ú‡¶ø‡¶ü 0 ‡¶π‡ßü, ‡¶§‡¶æ‡¶π‡¶≤‡ßá has true ‡¶ï‡¶∞‡ßá return ‡¶ï‡¶∞‡¶¨‡ßã‡•§


---

n=n/10;
        }
        return has;
    }

‚û°Ô∏è ‡¶Ø‡¶§‡¶ï‡ßç‡¶∑‡¶£ ‡¶®‡¶æ ‡¶∏‡¶¨ ‡¶°‡¶ø‡¶ú‡¶ø‡¶ü ‡¶ö‡ßá‡¶ï ‡¶ï‡¶∞‡¶æ ‡¶π‡¶ö‡ßç‡¶õ‡ßá, ‡¶§‡¶§‡¶ï‡ßç‡¶∑‡¶£ ‡¶≤‡ßÅ‡¶™ ‡¶ö‡¶≤‡¶¨‡ßá‡•§ ‡¶∂‡ßá‡¶∑ ‡¶™‡¶∞‡ßç‡¶Ø‡¶®‡ßç‡¶§ true ‡¶¨‡¶æ false return ‡¶ï‡¶∞‡¶¨‡ßá‡•§


---

‡¶è‡¶ñ‡¶® ‡¶Æ‡ßÇ‡¶≤ ‡¶ï‡¶æ‡¶ú‡ßá‡¶∞ ‡¶´‡¶æ‡¶Ç‡¶∂‡¶®:

vector<int> getNoZeroIntegers(int n)
    {
        vector<int>v;

‚û°Ô∏è ‡¶≠‡ßá‡¶ï‡ßç‡¶ü‡¶∞‡ßá [a, b] ‡¶∏‡ßç‡¶ü‡ßã‡¶∞ ‡¶ï‡¶∞‡¶¨‡ßã‡•§


---

for(int i=1;i<n;i++)
        {
            int a=i;
            int b=n-i;

‚û°Ô∏è i ‡¶ß‡¶∞‡ßá a = i, b = n - i ‡¶ß‡¶∞‡¶≤‡¶æ‡¶Æ‡•§


---

if(!HasZero(a)&&!HasZero(b)&&a<n&&b<n)
            {
                v.push_back(a);
                v.push_back(b);
                break;
            }

‚û°Ô∏è ‡¶Ø‡¶¶‡¶ø a ‡¶ì b ‡¶§‡ßá 0 ‡¶®‡¶æ ‡¶•‡¶æ‡¶ï‡ßá (‡¶Æ‡¶æ‡¶®‡ßá No-Zero), ‡¶§‡¶æ‡¶π‡¶≤‡ßá ‡¶ì‡¶¶‡ßá‡¶∞ ‡¶≠‡ßá‡¶ï‡ßç‡¶ü‡¶∞‡ßá ‡¶∞‡¶æ‡¶ñ‡ßã‡•§
‚û°Ô∏è break; ‡¶ï‡¶∞‡ßá ‡¶¶‡¶æ‡¶ì ‡¶ï‡¶æ‡¶∞‡¶£ ‡¶è‡¶ï‡¶ü‡¶æ‡¶á ‡¶â‡¶§‡ßç‡¶§‡¶∞‡¶á ‡¶Ø‡¶•‡ßá‡¶∑‡ßç‡¶ü‡•§


---

}
        return v;
    }
};


---

üß™ Test Case Analysis:

Test Case 1:

Input: n = 2

Loop:

i = 1 ‚Üí a = 1, b = 1
‚Üí HasZero(1) = false
‚Üí valid ‚úÖ ‚Üí return [1, 1]



---

Test Case 2:

Input: n = 11

Loop:

i = 1 ‚Üí a=1, b=10 ‚Üí b has zero ‚ùå

i = 2 ‚Üí a=2, b=9 ‚Üí both ok ‚úÖ
‚Üí return [2, 9]



---

üîç Time Complexity:

O(n) worst case (‡¶Ø‡¶¶‡¶ø ‡¶Ö‡¶®‡ßá‡¶ï i try ‡¶ï‡¶∞‡¶§‡ßá ‡¶π‡ßü)

O(1) space (‡¶è‡¶ï‡¶ü‡¶æ‡¶á pair ‡¶∞‡¶æ‡¶ñ‡¶õ‡¶ø)



---

üìå ‡¶∏‡¶Ç‡¶ï‡ßç‡¶∑‡ßá‡¶™‡ßá Summary:

‡¶™‡ßç‡¶∞‡¶§‡¶ø‡¶ü‡¶ø ‡¶∏‡¶Æ‡ßç‡¶≠‡¶æ‡¶¨‡ßç‡¶Ø a ‡¶®‡¶ø‡ßü‡ßá ‡¶¶‡ßá‡¶ñ‡¶ø b = n - a-‡¶§‡ßá ‡¶ï‡ßã‡¶®‡ßã 0 ‡¶Ü‡¶õ‡ßá ‡¶ï‡¶ø ‡¶®‡¶æ‡•§

‡¶ï‡ßã‡¶®‡ßã pair-‡¶è 0 ‡¶®‡¶æ ‡¶•‡¶æ‡¶ï‡¶≤‡ßá‡¶á return ‡¶ï‡¶∞‡¶ø‡•§



---

‚úÖ ‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ ‡¶®‡¶ø‡¶ú‡ßá‡¶∞ ‡¶Æ‡¶§ ‡¶ö‡¶ø‡¶®‡ßç‡¶§‡¶æ ‡¶ï‡¶∞‡ßá ‡¶∏‡¶Æ‡¶æ‡¶ß‡¶æ‡¶® ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶ï‡ßå‡¶∂‡¶≤:

1. ‡¶™‡ßç‡¶∞‡¶∂‡ßç‡¶®‡ßá ‡¶¨‡¶≤‡¶æ ‡¶õ‡¶ø‡¶≤ a + b = n, ‡¶§‡¶æ‡¶á ‡¶ö‡¶ø‡¶®‡ßç‡¶§‡¶æ ‡¶ï‡¶∞‡ßã a ‡¶ß‡¶∞‡¶≤‡ßá b = n - a ‡¶π‡ßü‡ßá ‡¶Ø‡¶æ‡¶¨‡ßá‡•§


2. Check ‡¶ï‡¶∞‡¶§‡ßá ‡¶π‡¶¨‡ßá "0 ‡¶Ü‡¶õ‡ßá ‡¶ï‡¶ø‡¶®‡¶æ", ‡¶§‡¶æ‡¶á ‡¶è‡¶ï‡¶ü‡¶æ ‡¶π‡ßá‡¶≤‡ßç‡¶™‡¶æ‡¶∞ ‡¶´‡¶æ‡¶Ç‡¶∂‡¶® HasZero(n) ‡¶≤‡¶ø‡¶ñ‡ßá ‡¶´‡ßá‡¶≤‡ßã‡•§


3. ‡¶§‡¶æ‡¶∞‡¶™‡¶∞ 1 to n-1 ‡¶™‡¶∞‡ßç‡¶Ø‡¶®‡ßç‡¶§ ‡¶ò‡ßÅ‡¶∞‡¶ø‡ßü‡ßá ‡¶™‡ßç‡¶∞‡¶§‡¶ø‡¶ü‡¶ø a ‡¶ì b ‡¶®‡¶ø‡ßü‡ßá ‡¶Ø‡¶æ‡¶ö‡¶æ‡¶á ‡¶ï‡¶∞‡ßá valid ‡¶™‡ßá‡¶≤‡ßá‡¶á return‡•§



Full Code:
-------------

class Solution 
{
public:
    bool HasZero(int n)
    {
        bool has=false;
        while(n>0)
            {
                int rem=n%10;
                if(rem==0)
                {
                    has=true;
                    break;
                }
                n=n/10;
            }
        return has;
    }
    vector<int> getNoZeroIntegers(int n)
    {
         vector<int>v;
        for(int i=1;i<n;i++)
            {
        int a=i;
                int b=n-i;
                if(!HasZero(a)&&!HasZero(b)&&a<n&&b<n)
                {
                    v.push_back(a);
                    v.push_back(b);
                    break;
                }
            }
        return v;
    }
};
