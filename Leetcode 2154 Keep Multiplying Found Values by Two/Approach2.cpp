рждрзЛржорж╛рж░ ржжрзЗржУрзЯрж╛ C++ ржХрзЛржб ржЦрзБржм рж╕рзБржирзНржжрж░ржнрж╛ржмрзЗ рж╕ржорж╕рзНржпрж╛ржЯрж╛рж░ рж╕ржорж╛ржзрж╛ржи ржХрж░рзЗржЫрзЗред ржПржЦржи ржЖржорж░рж╛ ржкрзНрж░рж╢рзНржиржЯрж┐ ржмрзБржЭрзЗ ржирж┐ржЗ ржПржмржВ рждрж╛рж░ржкрж░рзЗ рждрзЛржорж╛рж░ ржХрзЛржбрзЗрж░ approach, line-by-line ржмрзНржпрж╛ржЦрзНржпрж╛, ржПржмржВ test case ржжрж┐рзЯрзЗ ржХрж┐ржнрж╛ржмрзЗ ржХрж╛ржЬ ржХрж░рзЗ рждрж╛ ржмрж╛ржВрж▓рж╛рзЯ ржмрж┐рж╢рзНрж▓рзЗрж╖ржг ржХрж░рж┐ред

ЁЯФН ржкрзНрж░рж╢рзНржи ржмрж┐рж╢рзНрж▓рзЗрж╖ржг (Problem Analysis)
рждрзЛржорж╛ржХрзЗ ржПржХржЯрж┐ рж╕ржВржЦрзНржпрж╛ original ржПржмржВ ржПржХржЯрж┐ рж╕ржВржЦрзНржпрж╛-рж╕ржорзГржжрзНржз ржЕрзНржпрж╛рж░рзЗ nums ржжрзЗржУрзЯрж╛ рж╣рзЯрзЗржЫрзЗред ржХрж╛ржЬ рж╣рж▓рзЛ:

ржпржжрж┐ original рж╕ржВржЦрзНржпрж╛ржЯрж┐ nums ржПрж░ ржоржзрзНржпрзЗ ржерж╛ржХрзЗ тЖТ рждрж╛рж╣рж▓рзЗ original *= 2 ржХрж░рзЗ ржлрзЗрж▓рзЛред

ржПрж░ржкрж░ ржЖржмрж╛рж░ ржЪрзЗржХ ржХрж░рзЛ, ржирждрзБржи original рж╕ржВржЦрзНржпрж╛ржЯрж┐ nums ржП ржЖржЫрзЗ ржХрж┐ржирж╛ред

ржпрждржХрзНрж╖ржг ржкрж░рзНржпржирзНржд original рж╕ржВржЦрзНржпрж╛ржЯрж┐ nums ржП ржкрж╛ржУрзЯрж╛ ржпрж╛ржЪрзНржЫрзЗ, рждрждржХрзНрж╖ржг original *= 2 ржХрж░рзЛред

ржПржХржмрж╛рж░ ржПржоржи рж╣ржмрзЗ ржпржЦржи original ржЖрж░ nums ржП ржерж╛ржХржмрзЗ ржирж╛, рждржЦржи рж╕рзЗржЯрж╛ ржлрж╛ржЗржирж╛рж▓ ржЖржЙржЯржкрзБржЯ рж╣ржмрзЗред

тЬЕ ржХрзЛржбрзЗрж░ ржорзВрж▓ ржЖржЗржбрж┐рзЯрж╛ (Approach):
рждрзБржорж┐ ржпрж╛ ржХрж░рзЗржЫрзЛ, рждрж╛ рж╣рж▓рзЛ:

ржкрзНрж░ржержорзЗ nums ржЕрзНржпрж╛рж░рзЗрж░ ржкрзНрж░рждрж┐ржЯрж┐ рж╕ржВржЦрзНржпрж╛рж░ presence ржЪрж┐рж╣рзНржирж┐ржд ржХрж░рж╛рж░ ржЬржирзНржп unordered_map ржЗржЙржЬ ржХрж░рзЗржЫрзЛ (ржПржХржжржо рж╕ржарж┐ржХ, ржХрж╛рж░ржг O(1) time ржП ржЦрзЛржБржЬрж╛ ржпрж╛рзЯ)ред

рждрж╛рж░ржкрж░ ржпрждржХрзНрж╖ржг original ржирж╛ржорзНржмрж╛рж░ржЯрж╛ map ржПрж░ ржоржзрзНржпрзЗ ржЖржЫрзЗ, рждрждржХрзНрж╖ржг original *= 2 ржХрж░ржЫрзЛред

ЁЯФН ржХрзЛржб ржмрзНржпрж╛ржЦрзНржпрж╛ (Line-by-Line Bangla Explanation)
cpp
Copy
Edit
class Solution 
{
public:
    int findFinalValue(vector<int>& nums, int original)
ЁЯФ╕ ржПржЯрж┐ Leetcode format ржЕржирзБржпрж╛рзЯрзА solution classред findFinalValue ржлрж╛ржВрж╢ржи nums ржЕрзНржпрж╛рж░рзЗ ржПржмржВ ржПржХржЯрж┐ original ржирж╛ржорзНржмрж╛рж░ ржЗржиржкрзБржЯ ржирзЗрзЯред

cpp
Copy
Edit
unordered_map<int,int>freq;
ЁЯФ╕ ржПржХржЯрж┐ frequency map ржирж┐ржЪрзНржЫрзЛ, ржпрж╛рждрзЗ nums ржПрж░ ржкрзНрж░рждрж┐ржЯрж┐ рж╕ржВржЦрзНржпрж╛рж░ ржЕрж╕рзНрждрж┐рждрзНржм O(1) рж╕ржорзЯрзЗрж░ ржоржзрзНржпрзЗ ржЪрзЗржХ ржХрж░рж╛ ржпрж╛рзЯред

cpp
Copy
Edit
for(int i=0; i<nums.size(); i++) {
    freq[nums[i]]++;
}
ЁЯФ╕ ржкрзНрж░рждрж┐ржЯрж┐ nums[i] ржХрзЗ freq ржорзНржпрж╛ржкрзЗ ржпрзЛржЧ ржХрж░рж╛ рж╣ржЪрзНржЫрзЗред ржпржжрж┐ржУ frequency ржжрж░ржХрж╛рж░ ржирзЗржЗ, presence ржЬрж╛ржирж▓рзЗржЗ ржЪрж▓ржд, ржХрж┐ржирзНрждрзБ frequency рж░рж╛ржЦрж▓рзЗ future use/debug рж╕рзБржмрж┐ржзрж╛ рж╣рзЯред

cpp
Copy
Edit
while(freq[original] > 0)
ЁЯФ╕ ржпрждржХрзНрж╖ржг original ржирж╛ржорзНржмрж╛рж░ржЯрж╛ freq ржорзНржпрж╛ржкрзЗ ржкрж╛ржУрзЯрж╛ ржпрж╛ржЪрзНржЫрзЗ (ржорж╛ржирзЗ nums-ржП ржЖржЫрзЗ), рждрждржХрзНрж╖ржг ржПржЗ рж▓рзБржк ржЪрж▓ржмрзЗред

cpp
Copy
Edit
original = original * 2;
ЁЯФ╕ original ржХрзЗ ржжрзНржмрж┐ржЧрзБржг ржХрж░рж╛ рж╣ржЪрзНржЫрзЗ, ржпрзЗржоржиржЯрж╛ ржкрзНрж░рж╢рзНржи ржмрж▓рзЗржЫрзЗред

cpp
Copy
Edit
if(freq[original] == 0)
{
    break;
}
ЁЯФ╕ ржПржХржмрж╛рж░ ржпржжрж┐ ржирждрзБржи original ржЖрж░ nums ржП ржирж╛ ржерж╛ржХрзЗ, рждржЦржи рж▓рзБржк ржерзЗржХрзЗ ржмрзЗрж░ рж╣рзЯрзЗ ржЖрж╕ржмрзЗред
(ржПржЗ check ржирж╛ ржХрж░рж▓рзЗржУ ржЪрж▓ржд ржХрж╛рж░ржг while(freq[original] > 0) ржирж┐ржЬрзЗржЗ ржпржерзЗрж╖рзНржЯ, ржХрж┐ржирзНрждрзБ ржирж┐рж░рж╛ржкрждрзНрждрж╛рж░ ржЬржирзНржп рждрзБржорж┐ ржарж┐ржХржЗ рж░рзЗржЦрзЗржЫрзЛред)

cpp
Copy
Edit
return original;
ЁЯФ╕ рж╕ржмрж╢рзЗрж╖рзЗ, ржмрж░рзНрждржорж╛ржи original (ржпрзЗржЯрж╛ ржЖрж░ nums ржП ржирзЗржЗ) рж╕рзЗржЯрж╛ржЗ рж░рж┐ржЯрж╛рж░рзНржиред

ЁЯзк Test Case ржжрж┐рзЯрзЗ ржЪрж╛рж▓рж┐рзЯрзЗ ржжрзЗржЦрж╛ (Line-by-Line):
cpp
Copy
Edit
int main() {
    Solution sol;
    vector<int> nums = {5, 3, 6, 1, 12};
    int original = 3;
    int result = sol.findFinalValue(nums, original);
    cout << result;
}
Step-by-Step Execution:
Input тЖТ original = 3

3 in nums тЖТ YES тЖТ original = 6

6 in nums тЖТ YES тЖТ original = 12

12 in nums тЖТ YES тЖТ original = 24

24 in nums тЖТ NO тЖТ return 24

тЬЕ Output: 24

ржЖрж░рзЗржХржЯрж╛ Test:
cpp
Copy
Edit
vector<int> nums = {2,7,9};
int original = 4;
4 in nums тЖТ NO тЖТ return 4

тЬЕ Output: 4

тЬЕ ржХрзЗржи рждрзЛржорж╛рж░ рж╕ржорж╛ржзрж╛ржи рж╕ржарж┐ржХ?
рждрзБржорж┐ unordered_map ржжрж┐рзЯрзЗ fast lookup ржХрж░рзЗржЫрзЛ тЬЕ

ржпрждржХрзНрж╖ржг ржкрж░рзНржпржирзНржд value ржкрж╛ржУрзЯрж╛ ржпрж╛ржЪрзНржЫрзЗ, рждрждржХрзНрж╖ржг multiply ржХрж░ржЫрзЛ тЬЕ

Time complexity: O(n) тАФ n = nums.size()

Space: O(n) for map

Efficient, readable, ржПржмржВ clean тЬЕ

Full Code:
-----------
  class Solution 
{
public:
    int findFinalValue(vector<int>& nums, int original) 
    {
        unordered_map<int,int>freq;
        for(int i=0;i<nums.size();i++)
        {
          freq[nums[i]]++;
        }
        while(freq[original]>0)
        {
          original=original*2;
          if(freq[original]==0)
          {
            break;
          }
        }
        return original;
    }
};
