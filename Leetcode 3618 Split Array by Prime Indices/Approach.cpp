ЁЯФ╕ ржПржХржЯрж┐ ржкрзВрж░рзНржгрж╕ржВржЦрзНржпрж╛рж░ ржЕрзНржпрж╛рж░рзЗ (nums) ржжрзЗржУрзЯрж╛ ржЖржЫрзЗред рждрзЛржорж╛ржХрзЗ ржПржЗ ржЕрзНржпрж╛рж░рзЗржЯрж┐ржХрзЗ ржжрзБржЗржЯрж┐ ржЕрзНржпрж╛рж░рзЗрждрзЗ ржнрж╛ржЧ ржХрж░рждрзЗ рж╣ржмрзЗ тАФ A ржПржмржВ Bред

ржпрзЗрж╕ржм ржЗржиржбрзЗржХрзНрж╕ ржкрзНрж░рж╛ржЗржо (prime), ржР ржЗржиржбрзЗржХрзНрж╕рзЗрж░ ржнрзНржпрж╛рж▓рзБржЧрзБрж▓рзЛ ржпрж╛ржмрзЗ Array A рждрзЗред

ржмрж╛ржХрж┐ ржЗржиржбрзЗржХрзНрж╕ржЧрзБрж▓рзЛрж░ ржнрзНржпрж╛рж▓рзБ ржпрж╛ржмрзЗ Array B рждрзЗред


рж╢рзЗрж╖рзЗ, ржПржЗ ржжрзБржЗржЯрж┐ ржЕрзНржпрж╛рж░рзЗрж░ ржпрзЛржЧржлрж▓рзЗрж░ ржЕрзНржпрж╛ржмрж╕рзЛрж▓рж┐ржЙржЯ ржбрж┐ржлрж╛рж░рзЗржирзНрж╕ (|sum(A) - sum(B)|) рж░рж┐ржЯрж╛рж░рзНржи ржХрж░рждрзЗ рж╣ржмрзЗред


---

ЁЯФН Step-by-Step Thinking Approach (ржмрж╛ржВрж▓рж╛ржпрж╝):

тЮд Step 1: ржкрзНрж░рж╢рзНржиржЯрж┐ ржкржбрж╝рзЗ ржХрзА ржмрзЛржЭрж╛ ржЧрзЗрж▓рзЛ?

ржЖржорж░рж╛ nums ржирж╛ржорзЗрж░ ржПржХржЯрж┐ ржкрзВрж░рзНржгрж╕ржВржЦрзНржпрж╛рж░ ржЕрзНржпрж╛рж░рзЗ ржкрзЗржпрж╝рзЗржЫрж┐ред

ЁЯСЙ ржЖржорж╛ржжрзЗрж░ ржХрж╛ржЬ:

1. ржкрзНрж░рждрзНржпрзЗржХ ржЗржиржбрзЗржХрзНрж╕ i ржЪрзЗржХ ржХрж░ржмрзЛред


2. ржпржжрж┐ i prime number рж╣рзЯ тЖТ рждрж╛рж╣рж▓рзЗ nums[i] ржпрж╛ржмрзЗ A рждрзЗред


3. ржирж╛ рж╣рж▓рзЗ тЖТ nums[i] ржпрж╛ржмрзЗ B рждрзЗред


4. рждрж╛рж░ржкрж░ A ржУ B ржПрж░ ржпрзЛржЧржлрж▓ ржмрзЗрж░ ржХрж░рзЗ рждрж╛ржжрзЗрж░ ржЕрзНржпрж╛ржмрж╕рзЛрж▓рж┐ржЙржЯ ржкрж╛рж░рзНржержХрзНржп (|A - B|) ржмрзЗрж░ ржХрж░ржмрзЛред




---

тЬПя╕П ржЙржжрж╛рж╣рж░ржг ржжрж┐рзЯрзЗ ржмрзБржЭрж┐ (Example 2):

nums = [-1, 5, 7, 0]
index =  0   1  2  3

Prime indices: 2, 3 тЖТ A = [7, 0]

Non-prime indices: 0, 1 тЖТ B = [-1, 5]

sum(A) = 7 + 0 = 7

sum(B) = -1 + 5 = 4

Output = |7 - 4| = 3 тЬЕ



---

тЬЕ ржХрзЛржбрзЗрж░ ржкрзНрж░рждрж┐ржЯрж┐ ржЕржВрж╢ ржмрж┐рж╢рзНрж▓рзЗрж╖ржг (line-by-line in Bangla):

class Solution
{
public:

тЮд Solution ржирж╛ржорзЗрж░ ржПржХржЯрж┐ ржХрзНрж▓рж╛рж╕ рждрзИрж░рж┐ ржХрж░рж╛ рж╣рзЯрзЗржЫрзЗред


---

long long findsum(vector<int>&v)
    {
        long long sum=0;
        for(int k=0;k<v.size();k++)
        {
            sum+=v[k];
        }
        return sum;
    }

тЬЕ findsum() ржлрж╛ржВрж╢ржиржЯрж╛ ржПржХржЯрж╛ ржЕрзНржпрж╛рж░рзЗрж░ рж╕ржм ржЙржкрж╛ржжрж╛ржи ржпрзЛржЧржлрж▓ ржмрзЗрж░ ржХрж░рзЗ рж░рж┐ржЯрж╛рж░рзНржи ржХрж░рзЗред long long ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж╛ рж╣рзЯрзЗржЫрзЗ ржХрж╛рж░ржг рж╕ржВржЦрзНржпрж╛ржЧрзБрж▓рзЛ ржмрзЬ рж╣рждрзЗ ржкрж╛рж░рзЗред


---

bool Prime(int n)
    {
        bool isprime=true;
        if(n<2) return false;
        for(int i=2;i*i<=n;i++)
        {
            if(n%i==0)
            {
                isprime=false;
                break;
            }
        }
        return isprime;
    }

тЬЕ Prime() ржлрж╛ржВрж╢ржи:

ржЪрзЗржХ ржХрж░рзЗ n ржкрзНрж░рж╛ржЗржо ржХрж┐ржирж╛ред

ржпржжрж┐ n < 2 рж╣рзЯ тЖТ рж╕рзЗржЯрж╛ ржкрзНрж░рж╛ржЗржо ржирж╛ред

рждрж╛рж░ржкрж░ i = 2 ржерзЗржХрзЗ тИЪn ржкрж░рзНржпржирзНржд ржЪрзЗржХ ржХрж░рж╛ рж╣рзЯ n ржХрж┐ i ржжрж┐рзЯрзЗ ржмрж┐ржнрж╛ржЬрзНржп ржХрж┐ржирж╛ред

ржпржжрж┐ рж╣рзЯ тЖТ ржкрзНрж░рж╛ржЗржо ржирж╛ред



---

long long splitArray(vector<int>& nums) 
    {
        vector<int>v1;  // A
        vector<int>v2;  // B

тЬЕ ржорзВрж▓ ржлрж╛ржВрж╢ржи splitArray:

ржжрзБржЯрж┐ ржнрзЗржХрзНржЯрж░ рждрзИрж░рж┐ ржХрж░рж╛ рж╣рзЯрзЗржЫрзЗ: v1 (ржкрзНрж░рж╛ржЗржо ржЗржиржбрзЗржХрзНрж╕рзЗрж░ ржнрзНржпрж╛рж▓рзБ), v2 (ржмрж╛ржХрж┐ рж╕ржм)ред



---

for(int j=0;j<nums.size();j++)
        {
            if(Prime(j))
            {
                v1.push_back(nums[j]);  // ржкрзНрж░рж╛ржЗржо ржЗржиржбрзЗржХрзНрж╕рзЗ A рждрзЗ ржпрж╛рзЯ
            }
            else
            {
                v2.push_back(nums[j]);  // non-prime ржЗржиржбрзЗржХрзНрж╕рзЗ B рждрзЗ ржпрж╛рзЯ
            }
        }

тЬЕ nums ржПрж░ ржкрзНрж░рждрж┐ржЯрж┐ ржЗржиржбрзЗржХрзНрж╕ j ржирж┐рзЯрзЗ:

ржпржжрж┐ j ржкрзНрж░рж╛ржЗржо рж╣рзЯ тЖТ nums[j] ржХрзЗ v1 рждрзЗ рж░рж╛ржЦрж╛ рж╣рзЯред

ржирж╛рж╣рж▓рзЗ тЖТ v2 рждрзЗ рж░рж╛ржЦрж╛ рж╣рзЯред



---

long long primesum = findsum(v1);
        long long nonprimesum = findsum(v2);

тЬЕ v1 ржУ v2 ржПрж░ ржпрзЛржЧржлрж▓ ржмрзЗрж░ ржХрж░рж╛ рж╣рж▓рзЛред


---

long long result = abs(primesum - nonprimesum);
        return result;
    }
};

тЬЕ ржЕржмрж╢рзЗрж╖рзЗ, рждрж╛ржжрзЗрж░ ржоржзрзНржпрзЗ ржЕрзНржпрж╛ржмрж╕рзЛрж▓рж┐ржЙржЯ ржкрж╛рж░рзНржержХрзНржп ржмрзЗрж░ ржХрж░рзЗ рж░рж┐ржЯрж╛рж░рзНржи ржХрж░рж╛ рж╣рзЯрзЗржЫрзЗред


---

ЁЯУМ Time & Space Complexity:

Time Complexity:

ржкрзНрж░рж╛ржЗржо ржЪрзЗржХрж┐ржВ = O(тИЪn) ├Ч n ржЗржиржбрзЗржХрзНрж╕ = approx O(nтИЪn)

ржпрзЛржЧржлрж▓ ржмрзЗрж░ ржХрж░рж╛ = O(n)


Space Complexity: O(n) for storing v1 and v2



---

тЬЕ Accepted рж╣ржУрзЯрж╛рж░ ржХрж╛рж░ржг:

Efficient ржкрзНрж░рж╛ржЗржо ржЪрзЗржХрж┐ржВ рж▓ржЬрж┐ржХред

ржЖрж▓рж╛ржжрж╛ ржХрж░рзЗ A ржУ B ржХрзЗ рж╕рзНржЯрзЛрж░ ржХрж░рж╛ рж╣рзЯрзЗржЫрзЗред

рж╕рзАржорж┐ржд ржЗржиржбрзЗржХрзНрж╕ рж░рзЗржЮрзНржЬрзЗ тИЪn ржПрж░ ржнрзЗрждрж░рзЗржЗ рж▓рзБржк ржЪрж▓ржЫрзЗред

рж▓ржЬрж┐ржХ ржкрзБрж░рзЛржкрзБрж░рж┐ ржкрзНрж░рж╢рзНржи ржЕржирзБржпрж╛рзЯрзА рждрзИрж░рж┐ред



---

тЬЕ How to think for similar problems:

1. ржкрзНрж░рж╢рзНржирзЗ ржХрзАржнрж╛ржмрзЗ ржЕрзНржпрж╛рж░рзЗ ржмрж┐ржнрж╛ржЬржи ржХрж░рждрзЗ ржмрж▓рж╛ рж╣рзЯрзЗржЫрзЗ рждрж╛ рж▓ржХрзНрж╖рзНржп ржХрж░рзЛред


2. рж╢рж░рзНрждржорждрзЛ ржпрзЗрж╕ржм ржЗржиржбрзЗржХрзНрж╕ ржмрж╛ ржорж╛ржи ржкрзНрж░рзЯрзЛржЬржи рж╕рзЗржЧрзБрж▓рж╛ ржЖрж▓рж╛ржжрж╛ ржХрж░рзЗ рж░рж╛ржЦрзЛред


3. ржкрзНрж░рж╛ржЗржо ржмрж╛ ржмрж┐рж╢рзЗрж╖ ржХржирзНржбрж┐рж╢ржирзЗрж░ ржЬржирзНржп рж╕рж╛ржмржлрж╛ржВрж╢ржи ржмрж╛ржирж╛ржУ тАФ readable ржПржмржВ reusableред


4. рж╕ржарж┐ржХ Math operation (sum, abs, etc.) ржкрзНрж░рзЯрзЛржЧ ржХрж░рзЛред


  Full Code:
---------------

class Solution
{
public:
    long long findsum(vector<int>&v)
    {
        long long sum=0;
        for(int k=0;k<v.size();k++)
            {
                sum+=v[k];
            }
        return sum;
    }
    bool Prime(int n)
    {
        bool isprime=true;
        if(n<2) return false;
        for(int i=2;i*i<=n;i++)
            {
                if(n%i==0)
                {
                    isprime=false;
                    break;
                }
            }
        return isprime;
    }
    long long splitArray(vector<int>& nums) 
    {
        vector<int>v1;
        vector<int>v2;
        for(int j=0;j<nums.size();j++)
            {
                if(Prime(j))
                {
                    v1.push_back(nums[j]);
                }
                else
                {
                    v2.push_back(nums[j]);
                }
            }
    long long  primesum=findsum(v1);
        long long  nonprimesum=findsum(v2);
        long long result=abs(primesum-nonprimesum);
        return result;
    }
};
