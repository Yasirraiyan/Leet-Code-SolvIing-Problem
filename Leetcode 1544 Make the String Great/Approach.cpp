рждрзЛржорж╛рж░ ржХрзЛржбржЯрж┐ ржПржХржЯрж┐ рж╕рзНржЯрзНржпрж╛ржХ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзЗ рж╕рзНржЯрзНрж░рж┐ржВржХрзЗ "good" рж╕рзНржЯрзНрж░рж┐ржВрзЯрзЗ рж░рзВржкрж╛ржирзНрждрж░ ржХрж░рзЗ, ржпрзЗржЦрж╛ржирзЗ ржХрзЛржирзЛ ржжрзБржЯрж┐ ржкрж╛рж╢рж╛ржкрж╛рж╢рж┐ ржЕржХрзНрж╖рж░ тАФ ржПржХржЯрж┐ ржЫрзЛржЯ рж╣рж╛рждрзЗрж░ ржЖрж░рзЗржХржЯрж┐ ржмрзЬ рж╣рж╛рждрзЗрж░ ржПржХржЗ ржЕржХрзНрж╖рж░ тАФ ржПржХрж╕рж╛ржерзЗ ржерж╛ржХрзЗ ржирж╛ред ржЖржорж░рж╛ ржирж┐ржЪрзЗ ржзрж╛ржкрзЗ ржзрж╛ржкрзЗ ржмрзНржпрж╛ржЦрзНржпрж╛ ржХрж░ржм, ржкрзНрж░рж╢рзНржи ржмрзЛржЭрж╛, рж▓ржЬрж┐ржХ ржмрзЗрж░ ржХрж░рж╛, ржПржмржВ ржХрзЛржб рж▓рж╛ржЗржи-ржмрж╛ржЗ-рж▓рж╛ржЗржи ржмрж┐рж╢рзНрж▓рзЗрж╖ржгрж╕рж╣ ржПржХржЯрж┐ ржЯрзЗрж╕рзНржЯ ржХрзЗрж╕ ржЪрж╛рж▓рж┐рзЯрзЗ ржжрзЗржЦрж╛ржмрзЛред

тЬЕ ржкрзНрж░рж╢рзНржи ржмрзЛржЭрж╛ (Understanding the Question in Bangla)
рждрзЛржорж╛ржХрзЗ ржПржХржЯрж┐ рж╕рзНржЯрзНрж░рж┐ржВ s ржжрзЗржУрзЯрж╛ ржЖржЫрзЗ ржпрзЗржЦрж╛ржирзЗ ржмрзЬ рж╣рж╛рждрзЗрж░ ржПржмржВ ржЫрзЛржЯ рж╣рж╛рждрзЗрж░ ржЗржВрж░рзЗржЬрж┐ ржЕржХрзНрж╖рж░ рж░рзЯрзЗржЫрзЗред

Good string рж╣ржЪрзНржЫрзЗ ржПржоржи ржПржХржЯрж┐ рж╕рзНржЯрзНрж░рж┐ржВ ржпрзЗржЦрж╛ржирзЗ ржХрзЛржирзЛ ржжрзБржЯрж┐ ржкрж╛рж╢рж╛ржкрж╛рж╢рж┐ ржЕржХрзНрж╖рж░ ржПржоржи ржирзЗржЗ, ржпрзЗржЧрзБрж▓рзЛрж░ ржПржХржЯрж┐ ржЫрзЛржЯ рж╣рж╛рждрзЗрж░ ржПржмржВ ржЕржкрж░ржЯрж┐ ржмрзЬ рж╣рж╛рждрзЗрж░, ржПржмржВ ржЙржнрзЯрзЗржЗ ржПржХржЗ ржЕржХрзНрж╖рж░ред ржпрзЗржоржи: aA, Bb ржПржЧрзБрж▓рзЛ Badред ржПржжрзЗрж░ржХрзЗ ржПржХрж╕рж╛ржерзЗ remove ржХрж░рждрзЗ ржкрж╛рж░рзЛ ржпрждржХрзНрж╖ржг ржирж╛ string ржЯрж┐ Good рж╣рзЯрзЗ ржпрж╛рзЯред

ЁЯСЙ ржЖржорж░рж╛ ржмрж╛рж░ржмрж╛рж░ ржПржоржи ржкрзЗрзЯрж╛рж░ (ржпрзЗржоржи aA, Aa) ржЦрзБржБржЬрзЗ ржмрзЗрж░ ржХрж░рзЗ ржорзБржЫрзЗ ржлрзЗрж▓ржмрзЛ ржпрждржХрзНрж╖ржг ржирж╛ ржХрзЛржирзЛ Bad ржкрзЗрзЯрж╛рж░ ржерж╛ржХрзЗред

тЬЕ ржЙржжрж╛рж╣рж░ржг ржмрж┐рж╢рзНрж▓рзЗрж╖ржг (Example: s = "leEeetcode")
ржкрзНрж░ржержо ржмрж╛рж░ ржжрзЗржЦрж╛ ржпрж╛ржХ:

mathematica
Copy
Edit
l e E e t c o d e
      тЖС тЖС
   тЖТ E, e = bad pair (ржХрж╛рж░ржг: ржПржХржЗ ржЕржХрзНрж╖рж░, case ржнрж┐ржирзНржи)
тЖТ Remove тЖТ l e e t c o d e
ржПржЦржи рж╕рзНржЯрзНрж░рж┐ржВ "leetcode" тЖТ ржпрзЗржЯрж┐ good, ржХрж╛рж░ржг ржЖрж░ ржХрзЛржирзЛ ржкрзЗрзЯрж╛рж░ ржирзЗржЗ ржпрзЗржЦрж╛ржирзЗ case ржнрж┐ржирзНржи ржХрж┐ржирзНрждрзБ ржЕржХрзНрж╖рж░ ржПржХржЗред

тЬЕ ржЪрж┐ржирзНрждрж╛ ржХрж░рж╛рж░ ржзрж░ржи (Thinking Process)
ржкрзНрж░рждрж┐ржЯрж┐ ржЕржХрзНрж╖рж░ ржжрзЗржЦрж┐ ржПржХржЯрж╛рж░ ржкрж░ ржПржХржЯрж╛ред

ржЖржЧрзЗрж░ ржЕржХрзНрж╖рж░ ржпржжрж┐ рж╕рзНржЯрзНржпрж╛ржХрзЗрж░ ржЯржкрзЗ ржерж╛ржХрзЗ, ржПржмржВ рж╕рзЗржЯрж╛ ржПржЦржиржХрж╛рж░ ржЕржХрзНрж╖рж░рзЗрж░ рж╕рж╛ржерзЗ same letter but different case, рждрж╛рж╣рж▓рзЗ ржорзБржЫрзЗ ржлрзЗрж▓рж┐ред

ржирж╛ рж╣рж▓рзЗ рж╕рзНржЯрзНржпрж╛ржХрзЗ рж░рзЗржЦрзЗ ржжрж┐ржЗред

рж╕ржмрж╢рзЗрж╖рзЗ рж╕рзНржЯрзНржпрж╛ржХрзЗ ржпрж╛ ржЖржЫрзЗ рждрж╛ ржЙрж▓рзНржЯрзЛ ржХрж░рзЗ рж░рж┐ржЯрж╛рж░рзНржи ржХрж░рж┐ (ржХрж╛рж░ржг рж▓рж╛рж╕рзНржЯрзЗ ржврзЛржХрж╛ ржЕржХрзНрж╖рж░ ржЖржЧрзЗ ржмрзЗрж░ рж╣рзЯ)ред

тЬЕ рж▓рж╛ржЗржи ржмрж╛ржЗ рж▓рж╛ржЗржи ржХрзЛржб ржмрж┐рж╢рзНрж▓рзЗрж╖ржг ржмрж╛ржВрж▓рж╛рзЯ
cpp
Copy
Edit
class Solution 
{
public:
    string makeGood(string s) 
    {
        stack<char> st;  // тЬЕ рж╕рзНржЯрзНржпрж╛ржХ ржбрж┐ржХрзНрж▓рзЗрзЯрж╛рж░ ржХрж░ржЫрж┐ ржЕржХрзНрж╖рж░ рж░рж╛ржЦрж╛рж░ ржЬржирзНржп
cpp
Copy
Edit
        for(int i = 0; i < s.size(); i++) // тЬЕ рж╕рзНржЯрзНрж░рж┐ржВ ржПрж░ ржкрзНрж░рждрж┐ржЯрж┐ ржЕржХрзНрж╖рж░рзЗрж░ ржЙржкрж░ рж▓рзБржк
        {
cpp
Copy
Edit
            if(!st.empty())  // тЬЕ ржпржжрж┐ рж╕рзНржЯрзНржпрж╛ржХ ржЦрж╛рж▓рж┐ ржирж╛ рж╣рзЯ (ржорж╛ржирзЗ ржЖржЧрзЗрж░ ржЕржХрзНрж╖рж░ ржЖржЫрзЗ)
            {
                // тЬЕ ржЖржЧрзЗрж░ ржЕржХрзНрж╖рж░ ржУ ржПржЦржиржХрж╛рж░ ржЕржХрзНрж╖рж░ ржПржХржЗ ржЕржХрзНрж╖рж░ ржХрж┐ржирж╛ ржЪрзЗржХ ржХрж░рж┐ (toupper ржХрж░рзЗ), 
                // рждржмрзЗ case ржнрж┐ржирзНржи рж╣рж▓рзЗ pop ржХрж░рж┐
                if((toupper(st.top()) == toupper(s[i])) && st.top() != s[i]) 
                {
                    st.pop();  // тЬЕ ржПржХржЗ ржЕржХрзНрж╖рж░, ржнрж┐ржирзНржи case тЖТ bad тЖТ ржорзБржЫрзЗ ржлрзЗрж▓
                }
                else
                {
                    st.push(s[i]); // тЬЕ ржирж╛ рж╣рж▓рзЗ рж╕рзНржЯрзНржпрж╛ржХрзЗ рж░рзЗржЦрзЗ ржжрж╛ржУ
                }
            }
            else
            {
                st.push(s[i]); // тЬЕ ржкрзНрж░ржержо ржЕржХрзНрж╖рж░ ржмрж╛ рж╕рзНржЯрзНржпрж╛ржХ ржЦрж╛рж▓рж┐ рж╣рж▓рзЗ push ржХрж░
            }
        }
cpp
Copy
Edit
        string ans = "";
        while(!st.empty()) // тЬЕ рж╕рзНржЯрзНржпрж╛ржХрзЗ ржпрж╛ ржЖржЫрзЗ ржЙрж▓рзНржЯрзЛ ржХрж░рзЗ рж╕рзНржЯрзНрж░рж┐ржВ ржмрж╛ржирж╛ржЗ
        {
            ans += st.top(); 
            st.pop();
            if(st.empty()) break;
        }
cpp
Copy
Edit
        string result = "";
        for(int j = ans.size() - 1; j >= 0; j--) // тЬЕ ржЙрж▓рзНржЯрж╛ рж╕рзНржЯрзНрж░рж┐ржВржЯрж╛ рж╕ржарж┐ржХ ржЕрж░рзНржбрж╛рж░рзЗ рж░рж╛ржЦрж┐
        {
            result += ans[j];
        }
        return result; // тЬЕ ржлрж╛ржЗржирж╛рж▓ ржлрж▓рж╛ржлрж▓ рж░рж┐ржЯрж╛рж░рзНржи ржХрж░рж┐
    }
};
тЬЕ ржЙржжрж╛рж╣рж░ржг ржжрж┐рзЯрзЗ ржмрзНржпрж╛ржЦрзНржпрж╛ (Test Case: s = "abBAcC")
ржЪрж▓ ржЖржорж░рж╛ ржПржЗ ржЗржиржкрзБржЯржЯрж╛ ржжрж┐рзЯрзЗ ржПржХрзЗ ржПржХрзЗ ржжрзЗржЦрж┐ ржХрзА рж╣рзЯ:

Input: "abBAcC"

i	s[i]	stack	ржмрзНржпрж╛ржЦрзНржпрж╛
0	'a'	a	ржЦрж╛рж▓рж┐ ржЫрж┐рж▓ тЖТ push 'a'
1	'b'	a,b	'b' тЙа 'a' тЖТ push
2	'B'	a	'B' ржУ 'b' тЖТ ржПржХржЗ ржЕржХрзНрж╖рж░ ржнрж┐ржирзНржи case тЖТ pop
3	'A'		'A' ржУ 'a' тЖТ pop
4	'c'	c	ржЦрж╛рж▓рж┐ тЖТ push 'c'
5	'C'		'C' ржУ 'c' тЖТ pop

Final stack тЖТ empty

Output тЖТ "" тЬЕ ржпрзЗржЯрж╛ рж╕ржарж┐ржХред

тЬЕ Time & Space Complexity
тП▒ Time: O(n) тЖТ ржкрзНрж░рждрж┐ржЯрж┐ ржЕржХрзНрж╖рж░ ржПржХржмрж╛рж░ржЗ ржжрзЗржЦрж┐ред

ЁЯза Space: O(n) тЖТ ржЦрж╛рж░рж╛ржк ржХрзНрж╖рзЗрждрзНрж░рзЗ рж╕ржм ржЕржХрзНрж╖рж░ рж╕рзНржЯрзНржпрж╛ржХрзЗ рж░рж╛ржЦрждрзЗ рж╣рждрзЗ ржкрж╛рж░рзЗред

тЬЕ ржЙржкрж╕ржВрж╣рж╛рж░
ржПржЗ рж╕ржорж╛ржзрж╛ржиржЯрж┐ accepted ржХрж╛рж░ржг:

ржкрзНрж░рж╢рзНржирзЗрж░ ржирж┐рзЯржо ржарж┐ржХржорждрзЛ ржЕржирзБрж╕рж░ржг ржХрж░рзЗржЫрзЗред

рж╕рзНржЯрзНржпрж╛ржХрзЗрж░ ржорж╛ржзрзНржпржорзЗ ржПржХрж╕рж╛ржерзЗ ржжрзБржЗ ржЕржХрзНрж╖рж░ржХрзЗ compare ржХрж░рзЗ efficiently remove ржХрж░ржЫрзЗред

рж╕рзНржЯрзНржпрж╛ржХрзЗрж░ рж╕рж╛рж╣рж╛ржпрзНржпрзЗ ржпрзЗрж╕ржм ржЬрзЛрзЬрж╛ bad, рж╕рзЗржЧрзБрж▓рзЛ sequentially ржорзБржЫрзЗ ржлрзЗрж▓рж╛ рж╕ржорзНржнржмред

ржлрж╛ржЗржирж╛рж▓ рж╕рзНржЯрзНрж░рж┐ржВ рждрзИрж░рж┐ ржХрж░рж╛ рж╣рзЯрзЗржЫрзЗ ржЙрж▓рзНржЯрзЗ ржжрж┐рзЯрзЗ (reverse)ред

Full Code;
-----------
  class Solution 
{
public:
    string makeGood(string s) 
    {
        stack<char>st;
        for(int i=0;i<s.size();i++)
        {
        if(!st.empty())
        {

        
          if((toupper(st.top()))==toupper(s[i])&&st.top()!=s[i])
          {
            st.pop();
          }
          else
          {
            st.push(s[i]);
          }
        }
          else
          {
            st.push(s[i]);
          }
          
        }
        string ans="";
        while(!st.empty())
        {
          ans+=st.top();
          st.pop();
          if(st.empty())
          {
            break;
          }
        }
        string result="";
        for(int j=ans.size()-1;j>=0;j--)
        {
          result+=ans[j];
        }
        return result;
    }
};
