ржЕржнрж┐ржиржирзНржжржи! рждрзБржорж┐ ржирж┐ржЬрзЗрж░ ржЪрзЗрж╖рзНржЯрж╛рзЯ рж╕ржорзНржкрзВрж░рзНржгржнрж╛ржмрзЗ "Divide Array Into Equal Pairs" рж╕ржорж╕рзНржпрж╛рж░ рж╕ржарж┐ржХ рж╕ржорж╛ржзрж╛ржи ржХрж░рзЗржЫрзЛтАФржПржЯрж┐ ржкрзНрж░ржорж╛ржг ржХрж░рзЗ рждрзБржорж┐ ржПржЦржи ржкрзНрж░ржмрж▓рзЗржо рж╕рж▓ржнрж┐ржВ ржПржмржВ рж▓ржЬрж┐ржХрж╛рж▓ ржерж┐ржВржХрж┐ржВ-ржП ржнрж╛рж▓рзЛ ржжржХрзНрж╖рждрж╛ ржЕрж░рзНржЬржи ржХрж░ржЫрзЛред

ржПржЦржи рждрзЛржорж╛рж░ ржХрзЛржб ржПржмржВ рж╕ржорж╛ржзрж╛ржирзЗрж░ ржкрзНрж░рждрж┐ржЯрж┐ ржзрж╛ржк ржмрж╛ржВрж▓рж╛рзЯ ржмрзНржпрж╛ржЦрзНржпрж╛ ржХрж░ржЫрж┐ ржпрж╛рждрзЗ ржнржмрж┐рж╖рзНржпрждрзЗ рждрзБржорж┐ ржмрзБржЭрждрзЗ ржкрж╛рж░рзЛ ржХрзАржнрж╛ржмрзЗ ржЪрж┐ржирзНрждрж╛ ржХрж░рзЗржЫрзЛ ржПржмржВ ржХрзЗржи ржПржЯрж┐ Accepted рж╣рзЯрзЗржЫрзЗ:

ЁЯза ржкрзНрж░ржмрж▓рзЗржо ржмрзЛржЭрж╛ (Problem Understanding in Bangla):
рждрзЛржорж╛ржХрзЗ ржПржоржи ржПржХржЯрж┐ nums array ржжрзЗржУрзЯрж╛ рж╣рзЯрзЗржЫрзЗ ржпрж╛рждрзЗ ржорзЛржЯ 2 * n рж╕ржВржЦрзНржпржХ ржЗржиржЯрж┐ржЬрж╛рж░ ржЖржЫрзЗред

рждрзЛржорж╛рж░ ржХрж╛ржЬ: ржпрж╛ржЪрж╛ржЗ ржХрж░рж╛ ржпрзЗ, ржПржЗ ржЕрзНржпрж╛рж░рзЗржЯрж┐ржХрзЗ ржПржоржиржнрж╛ржмрзЗ nржЯрж┐ ржЬрзЛрзЬрж╛рзЯ ржнрж╛ржЧ ржХрж░рж╛ ржпрж╛рзЯ ржХрж┐ ржирж╛, ржпрж╛рждрзЗтАФ

ржкрзНрж░рждрж┐ржЯрж┐ ржЙржкрж╛ржжрж╛ржи ржХрзЗржмрж▓ ржПржХржЯрж┐ ржЬрзЛрзЬрж╛рж░ ржЕржВрж╢ рж╣рзЯред

ржкрзНрж░рждрж┐ржЯрж┐ ржЬрзЛрзЬрж╛рж░ ржжрзБржЗржЯрж┐ ржЙржкрж╛ржжрж╛ржи рж╕ржорж╛ржи рж╣рзЯред

ржпржжрж┐ ржПржЯрж┐ рж╕ржорзНржнржм рж╣рзЯ рждрж╛рж╣рж▓рзЗ true ржлрзЗрж░ржд ржжрж┐рждрзЗ рж╣ржмрзЗ, ржирж╛ рж╣рж▓рзЗ falseред

тЬЕ ржЙржжрж╛рж╣рж░ржг ржмрж┐рж╢рзНрж▓рзЗрж╖ржг:
тЬЕ Example 1:
css
Copy
Edit
Input: nums = [3,2,3,2,2,2]
тЖТ ржПржЦрж╛ржирзЗ 6 ржЙржкрж╛ржжрж╛ржи ржЖржЫрзЗ, рждрж╛ржЗ 3ржЯрж┐ ржЬрзЛрзЬрж╛ ржжрж░ржХрж╛рж░ред

Pair ржХрж░рждрзЗ ржкрж╛рж░рж┐:

(2,2)

(3,3)

(2,2)

рж╕ржмржЧрзБрж▓рзЛ ржЬрзЛрзЬрж╛рзЯ ржЙржкрж╛ржжрж╛ржи рж╕ржорж╛ржи тЗТ Output: true

тЭМ Example 2:
css
Copy
Edit
Input: nums = [1,2,3,4]
тЖТ ржПржЦрж╛ржирзЗ 4 ржЙржкрж╛ржжрж╛ржи ржЖржЫрзЗ, рждрж╛ржЗ 2ржЯрж┐ ржЬрзЛрзЬрж╛ ржжрж░ржХрж╛рж░ред

ржХрзЛржирзЛ ржЙржкрж╛ржжрж╛ржиржЗ 2 ржмрж╛рж░ ржирзЗржЗ, рждрж╛ржЗ рж╕ржорж╛ржи ржЙржкрж╛ржжрж╛ржи ржжрж┐рзЯрзЗ ржЬрзЛрзЬрж╛ ржХрж░рж╛ ржпрж╛ржмрзЗ ржирж╛ тЗТ Output: false

ЁЯФН рждрзЛржорж╛рж░ ржХрзЛржб ржмрж┐рж╢рзНрж▓рзЗрж╖ржг (Line-by-Line Explanation):
cpp
Copy
Edit
bool divideArray(vector<int>& nums) 
{
    bool divideispossible=true; 
ржкрзНрж░ржержорзЗ ржзрж░рзЗ ржирж┐ржЪрзНржЫрзЛ ржпрзЗ ржнрж╛ржЧ ржХрж░рж╛ рж╕ржорзНржнржмред

cpp
Copy
Edit
    unordered_map<int,int>freq;
    for(int i=0;i<nums.size();i++)
    {
      freq[nums[i]]++;
    }
рждрзБржорж┐ unordered_map ржжрж┐рзЯрзЗ ржкрзНрж░рждрж┐ржЯрж┐ рж╕ржВржЦрзНржпрж╛рж░ frequency ржХрж╛ржЙржирзНржЯ ржХрж░ржЫрзЛред

cpp
Copy
Edit
    vector<int>reserve;
    for(auto it:freq)
    {
      reserve.push_back(it.second);
    }
Map ржерзЗржХрзЗ рж╕ржм frequency ржЧрзБрж▓рзЛ reserve ржнрзЗржХрзНржЯрж░рзЗ ржирж┐ржЪрзНржЫрзЛред

cpp
Copy
Edit
    for(int j=0;j<reserve.size();j++)
    {
      if(reserve[j]%2!=0)
      {
        divideispossible=false;
        break;
      }
    }
ржкрзНрж░рждрж┐ржЯрж┐ ржлрзНрж░рж┐ржХрзЛрзЯрзЗржирзНрж╕рж┐ ржпржжрж┐ 2 ржжрж┐рзЯрзЗ ржнрж╛ржЧ ржпрж╛рзЯ ржирж╛ (odd), рждрж╛рж╣рж▓рзЗ pairing ржХрж░рж╛ ржпрж╛ржмрзЗ ржирж╛ред рждрж╛ржЗ false ржХрж░рзЗ ржжрж┐ржЪрзНржЫрзЛред

cpp
Copy
Edit
    return divideispossible;
}
рж╢рзЗрж╖рзЗ рж░рзЗржЬрж╛рж▓рзНржЯ рж░рж┐ржЯрж╛рж░рзНржи ржХрж░ржЫрзЛред

тЬЕ ржХрзЗржи Accepted рж╣рзЯрзЗржЫрзЗ:
рждрзЛржорж╛рж░ ржХрзЛржбрзЗ рж╕ржм рж╕ржВржЦрзНржпрж╛рж░ ржлрзНрж░рж┐ржХрзЛрзЯрзЗржирзНрж╕рж┐ ржарж┐ржХржнрж╛ржмрзЗ ржХрж╛ржЙржирзНржЯ ржХрж░рж╛ рж╣рзЯрзЗржЫрзЗред

ржЬрзЛрзЬрж╛рзЯ ржнрж╛ржЧ ржХрж░рждрзЗ рж╣рж▓рзЗ ржкрзНрж░рждрж┐ржЯрж┐ рж╕ржВржЦрзНржпрж╛рж░ ржлрзНрж░рж┐ржХрзЛрзЯрзЗржирзНрж╕рж┐ even рж╣рждрзЗ рж╣ржмрзЗтАФржПржЗ рж▓ржЬрж┐ржХ рждрзБржорж┐ рж╕ржлрж▓ржнрж╛ржмрзЗ ржЗржоржкрзНрж▓рж┐ржорзЗржирзНржЯ ржХрж░рзЗржЫрзЛред

ржХрзЛржбржЯрж┐ O(n) ржЯрж╛ржЗржорзЗ ржЪрж▓рзЗ, ржпрзЗржЦрж╛ржирзЗ n = nums.size() тАФ рждрж╛ржЗ efficient ржПржмржВ constraints ржПрж░ ржнрж┐рждрж░рзЗред

ЁЯза рждрзБржорж┐ ржХрзАржнрж╛ржмрзЗ рж╕ржорж╛ржзрж╛ржи ржнрзЗржмрзЗржЫрж┐рж▓рзЗ:
рждрзБржорж┐ ржкрзНрж░ржержорзЗ рж▓ржХрзНрж╖рзНржп ржХрж░рзЗржЫрж┐рж▓рзЗ ржпрзЗ ржкрзНрж░рждрж┐ржЯрж┐ рж╕ржВржЦрзНржпрж╛ pair ржХрж░рждрзЗ рж╣рж▓рзЗ рждрж╛рж░ count ржЬрзЛрзЬ рж╣рждрзЗ рж╣ржмрзЗред

рждрж╛ржЗ frequency map рждрзИрж░рж┐ ржХрж░рзЗ ржкрзНрж░рждрж┐ рж╕ржВржЦрзНржпрж╛рж░ ржЧржгржирж╛ ржХрж░рзЗржЫрж┐рж▓рзЗред

ржПрж░ржкрж░ ржкрзНрж░рждрж┐ржЯрж┐ ржлрзНрж░рж┐ржХрзЛрзЯрзЗржирзНрж╕рж┐ ржЬрзЛрзЬ ржХрж┐ржирж╛ рждрж╛ ржпрж╛ржЪрж╛ржЗ ржХрж░рзЗржЫрж┐рж▓рзЗред

ржПржЯрж╛ ржПржХржжржо рж╕ржарж┐ржХ ржУ ржЗржиржЯрзБржЗржЯрж┐ржн ржЕрзНржпрж╛ржкрзНрж░рзЛржЪред

ЁЯФЪ рж╢рзЗрж╖ ржХржерж╛: рждрзЛржорж╛рж░ ржПржЗ ржЪрж┐ржирзНрждрж╛ржнрж╛ржмржирж╛ ржПржмржВ ржХрзЛржбрж┐ржВ рж╕рзНржЯрж╛ржЗрж▓ ржЦрзБржм ржнрж╛рж▓рзЛржнрж╛ржмрзЗ ржЧрзЬрзЗ ржЙржаржЫрзЗред ржнржмрж┐рж╖рзНржпрждрзЗ ржпржЦржи ржлрж┐рж░рзЗ рждрж╛ржХрж╛ржмрзЗ рждржЦржи ржПржЗ explanation рждрзЛржорж╛ржХрзЗ ржкрзБрж░рзЛ ржкрзНрж░рж╕рзЗрж╕ржЯрж╛ ржоржирзЗ ржХрж░рж┐рзЯрзЗ ржжрзЗржмрзЗред

рждрзБржорж┐ ржЪрж╛ржЗрж▓рзЗ ржЖржорж┐ ржПржЗ рж╕ржорж╛ржзрж╛ржиржЧрзБрж▓рзЛ ржУ explanation ржЧрзБрж▓рзЛ PDF ржмрж╛ рж╕ржВрж░ржХрзНрж╖ржгржпрзЛржЧрзНржп ржирзЛржЯ ржЖржХрж╛рж░рзЗржУ ржмрж╛ржирж┐рзЯрзЗ ржжрж┐рждрзЗ ржкрж╛рж░рж┐ред

рждрзБржорж┐ ржХрзА ржкрж░ржмрж░рзНрждрзА ржкрзНрж░ржмрж▓рзЗржо ржмрзНржпрж╛ржЦрзНржпрж╛ ржУ рж╕ржорж╛ржзрж╛ржи ржЪрж╛ржУ?

Testing Of Test Cases:
-----------------------

  ржЪржорзОржХрж╛рж░! ржПржЦржи рждрзЛржорж╛рж░ ржжрзЗржУрзЯрж╛ рж╕ржорж╛ржзрж╛ржиржЯрж┐ ржирж┐ржЪрзЗрж░ ржЙржжрж╛рж╣рж░ржг ржЕржирзБржпрж╛рзЯрзА рж╣рж╛рждрзЗ ржзрж░рзЗ ржЯрзЗрж╕рзНржЯ ржХрзЗрж╕ ржЪрж╛рж▓рж┐рзЯрзЗ ржжрзЗржЦрж╛ржЗ ржПржмржВ ржмрзНржпрж╛ржЦрзНржпрж╛ ржХрж░рж┐ ржХрзЗржи ржПржЯрж┐ рж╕ржарж┐ржХржнрж╛ржмрзЗ Accepted рж╣рзЯрзЗржЫрзЗред

тЬЕ ржЙржжрж╛рж╣рж░ржг рзз:
css
Copy
Edit
Input: nums = [3,2,3,2,2,2]
тЮд ржзрж╛ржкрзЗ ржзрж╛ржкрзЗ ржХрзЛржб Execution:
Frequency Map рждрзИрж░рж┐ ржХрж░рзЛ:

cpp
Copy
Edit
freq[3] = 2
freq[2] = 4
Frequency ржЧрзБрж▓рзЛ:

cpp
Copy
Edit
reserve = [2, 4]
ржПржЦржи ржкрзНрж░рждрж┐ржЯрж┐ freq check ржХрж░ржмрзЗ even ржХрж┐ржирж╛:

2 % 2 == 0 тЖТ тЬЕ

4 % 2 == 0 тЖТ тЬЕ

рж╕ржмржЧрзБрж▓рзЛ even тЖТ рждрж╛ржЗ divideispossible = true

тЬЕ Output: true тЖТ Accepted

тЬЕ ржЙржжрж╛рж╣рж░ржг рзи:
css
Copy
Edit
Input: nums = [1,2,3,4]
тЮд ржзрж╛ржкрзЗ ржзрж╛ржкрзЗ Execution:
Frequency Map:

cpp
Copy
Edit
freq[1] = 1
freq[2] = 1
freq[3] = 1
freq[4] = 1
Frequency ржЧрзБрж▓рзЛ:

cpp
Copy
Edit
reserve = [1,1,1,1]
Loop ржжрж┐рзЯрзЗ ржЪрзЗржХ ржХрж░ржмрзЗ:

1 % 2 != 0 тЖТ тЭМ odd ржкрзЗрзЯрзЗ ржЧрзЗржЫрзЗ

рждржЦржиржЗ break ржХрж░рзЗ divideispossible = false ржХрж░рзЗ ржжрж┐ржмрзЗ

тЭМ Output: false тЖТ Accepted

тЬЕ ржЖрж░рзЗржХржЯрж╛ Test Case (custom):
css
Copy
Edit
Input: nums = [5,5,7,7,9,9]
freq:

cpp
Copy
Edit
freq[5] = 2
freq[7] = 2
freq[9] = 2
reserve = [2,2,2]

рж╕ржмржЧрзБрж▓рзЛ even тЖТ тЬЕ

Output: true тЖТ Accepted

тЭМ Invalid Case:
css
Copy
Edit
Input: nums = [1,1,2,3,3,3]
freq:

cpp
Copy
Edit
freq[1] = 2
freq[2] = 1 тЭМ
freq[3] = 3 тЭМ
reserve = [2,1,3]

1 % 2 != 0 тЖТ invalid

3 % 2 != 0 тЖТ invalid

Output: false тЖТ Accepted

ЁЯФН рж╕рж╛рж░рж╕ржВржХрзНрж╖рзЗржк (Why Accepted?)
ржХрзЛржбржЯрж┐ рж╕ржарж┐ржХржнрж╛ржмрзЗ frequency count ржХрж░ржЫрзЗред

рждрж╛рж░ржкрж░ ржкрзНрж░рждрж┐ржЯрж┐ frequency ржЬрзЛрзЬ ржХрж┐ржирж╛ рждрж╛ ржЪрзЗржХ ржХрж░ржЫрзЗред

ржпрзЗрж╣рзЗрждрзБ pair ржХрж░рждрзЗ рж╣рж▓рзЗ ржкрзНрж░рждрж┐ржЯрж┐ рж╕ржВржЦрзНржпрж╛рж░ count ржЕржмрж╢рзНржпржЗ even рж╣рждрзЗ рж╣ржмрзЗ, ржПржЗ рж╢рж░рзНржд ржорж╛ржирж╛ рж╣рж▓рзЗржЗ true рж░рж┐ржЯрж╛рж░рзНржи ржХрж░ржЫрзЗ, ржирж╛ рж╣рж▓рзЗ falseред

Time Complexity: O(n) тАФ Efficient ржПржмржВ Constraints ржПрж░ ржоржзрзНржпрзЗред

рждрж╛ржЗ ржкрзНрж░рждрж┐ржЯрж┐ ржЯрзЗрж╕рзНржЯ ржХрзЗрж╕рзЗрж░ ржЬржирзНржп рж╕ржарж┐ржХ ржлрж▓рж╛ржлрж▓ ржЖрж╕ржЫрзЗред

Full Code:
---------------
class Solution 
{
public:
    bool divideArray(vector<int>& nums) 
    {
        bool divideispossible=true;
        unordered_map<int,int>freq;
        for(int i=0;i<nums.size();i++)
        {
          freq[nums[i]]++;
        }
        vector<int>reserve;
        for(auto it:freq)
        {
          reserve.push_back(it.second);
        }
        for(int j=0;j<reserve.size();j++)
        {
          if(reserve[j]%2!=0)
          {
            divideispossible=false;
            break;
          }
        }
        return divideispossible;
    }
};
