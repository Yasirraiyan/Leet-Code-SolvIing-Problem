ЁЯФН рж╕ржорж╕рзНржпрж╛ ржмрзЛржЭрж╛ (Problem Understanding in Bangla):

ржзрж░рж╛ ржпрж╛ржХ num = 240, k = 2
ржПржЦржи num ржХрзЗ string рж╣рж┐рж╕рж╛ржмрзЗ ржкрзЬрж▓рзЗ тЖТ "240"

ржПржЗ string ржПрж░ ржкрзНрж░рждрж┐ржЯрж┐ length = k = 2 ржПрж░ substring ржмрзЗрж░ ржХрж░рждрзЗ рж╣ржмрзЗ, ржпрзЗржоржи:

"24" тЖТ 24 % 240 == 0 тЖТ тЬФя╕П

"40" тЖТ 40 % 240 == 0 тЖТ тЬФя╕П

Total = 2 тЖТ тЬЕ



---

ЁЯУМ рж▓ржХрзНрж╖рзНржп (Objective):

ржХрзЯржЯрж┐ substring ржЖржЫрзЗ ржпрж╛:

1. ржжрзИрж░рзНржШрзНржпрзЗ k


2. 0 ржирж╛ (ржХрж╛рж░ржг 0 ржжрж┐рзЯрзЗ ржнрж╛ржЧ ржХрж░рж╛ ржпрж╛рзЯ ржирж╛)


3. num ржХрзЗ ржирж┐ржГрж╢рзЗрж╖рзЗ ржнрж╛ржЧ ржХрж░рждрзЗ ржкрж╛рж░рзЗ (divisor рж╣рждрзЗ рж╣ржмрзЗ)



ржПржЯрж╛ржЗ рж╣рж▓ k-beautyред


---

ЁЯФО Approach / ржнрж╛ржмржирж╛ (Step-by-Step):

ржзрж░рж┐:
num = 430043 ржПржмржВ k = 2

Step 1:

ЁЯСЙ ржкрзНрж░ржержорзЗ num ржХрзЗ string ржП convert ржХрж░ржмрзЛ тЖТ "430043"

Step 2:

ЁЯСЙ рждрж╛рж░ржкрж░ k ржжрзИрж░рзНржШрзНржпрзЗрж░ рж╕ржм substring ржмрзЗрж░ ржХрж░ржмрзЛ:

"43", "30", "00", "04", "43"

Step 3:

ЁЯСЙ ржкрзНрж░рждрж┐ржЯрж┐ substring ржХрзЗ number ржП рж░рзВржкрж╛ржирзНрждрж░ ржХрж░ржмрзЛ
ЁЯСЙ ржпржжрж┐ рж╕рзЗржЗ рж╕ржВржЦрзНржпрж╛ тЙа 0 ржПржмржВ num % value == 0, рждрж╛рж╣рж▓рзЗ beauty ржмрж╛рзЬрж╛ржмрзЛ


---

тЬЕ Accepted Code Explanation:

class Solution {
public:
    int divisorSubstrings(int num, int k) 
    {
        string nums = to_string(num);  // Step 1: int тЖТ string
        vector<string> v;
        for (int i = 0; i <= nums.size() - k; i++)  // Step 2: Substrings of length k
        {
            v.push_back(nums.substr(i, k));  // nums.substr(start, length)
        }

        int beauty = 0;
        for (int j = 0; j < v.size(); j++)  // Step 3: Loop through all substrings
        {
            int val = stoi(v[j]);  // convert string тЖТ integer
            if (val != 0 && num % val == 0)  // val should not be 0, and divisor of num
            {
                beauty++;  // valid divisor, count it
            }
        }

        return beauty;  // Return total k-beauty
    }
};


---

ЁЯТб Mathematical Explanation (Bangla):

ржзрж░рзЛ, num = 430043

String form: "430043"
k = 2

Substrings:

"43" тЖТ 430043 % 43 == 0 тЖТ тЬФя╕П

"30" тЖТ 430043 % 30 тЙа 0 тЖТ тЬЦя╕П

"00" тЖТ invalid тЖТ тЬЦя╕П (0 divisor ржирж╛)

"04" тЖТ 4, 430043 % 4 тЙа 0 тЖТ тЬЦя╕П

"43" тЖТ тЬФя╕П


тЬЕ Total = 2


---

ЁЯУК Complexity:

Type	Value

Time Complexity	O(n * k) тЖТ Actually O(n)
Space Complexity	O(n) for storing substrings



---

тЬЕ ржЯрзЗрж╕рзНржЯ ржХрзЗрж╕ ржпрж╛ржЪрж╛ржЗ (Test Case Validation):

Test 1:

Input: num = 240, k = 2
String: "240"
Substrings: "24", "40" тЖТ both are valid divisors
Output: 2

Test 2:

Input: num = 430043, k = 2
Substrings: "43", "30", "00", "04", "43"
Valid divisors: "43", "43"
Output: 2


---

ЁЯза рждрзБржорж┐ ржХрзАржнрж╛ржмрзЗ ржЪрж┐ржирзНрждрж╛ ржХрж░ржмрзЗ (Thinking Strategy):

1. рж╕ржорж╕рзНржпрж╛ ржерзЗржХрзЗ ржмрзБржЭржмрзЗ:

Substring ржХржирж╕рзЗржкрзНржЯ

Divisibility



2. Input ржХрзЗ string ржП рж░рзВржкрж╛ржирзНрждрж░


3. Loop ржЪрж╛рж▓рж┐рзЯрзЗ ржкрзНрж░рждрж┐ржЯрж┐ substring ржмрзЗрж░ ржХрж░рзЗ integer ржП convert ржХрж░рзЛ


4. Valid рж╣рж▓рзЗ count ржмрж╛рзЬрж╛ржУ


5. Return final count




---

тЬНя╕П рждрзЛржорж╛рж░ ржЪрж┐ржирзНрждрж╛рж░ Code рж▓рзЗржЦрж╛ ржкржжрзНржзрждрж┐:

Step by Step Plan:

int divisorSubstrings(int num, int k)
{
    string nums = to_string(num);   // Step 1: num тЖТ string
    int count = 0;

    for (int i = 0; i <= nums.size() - k; i++)  // Step 2: Get substrings of length k
    {
        string sub = nums.substr(i, k);  // Step 3: Substring
        int val = stoi(sub);             // Step 4: Convert to number
        if (val != 0 && num % val == 0)  // Step 5: Check valid divisor
        {
            count++;
        }
    }

    return count;
}


---

тЬЕ ржЙржкрж╕ржВрж╣рж╛рж░ (Summary):

Substring ржЬрзЗржирж╛рж░рзЗржЯ ржХрж░рзЛ

ржкрзНрж░рждрж┐ржЯрж╛ substring ржХрзЗ ржирж╛ржорзНржмрж╛рж░рзЗ рж░рзВржкрж╛ржирзНрждрж░ ржХрж░рзЛ

valid рж╣рж▓рзЗ count ржмрж╛рзЬрж╛ржУ

Time Complexity efficient (O(n))


Full Code:
-------------

  class Solution 
{
public:
    int divisorSubstrings(int num, int k) 
    {
        string nums=to_string(num);
       vector<string>v;
        for(int i=0;i<=nums.size()-k;i++)
            {
                v.push_back(nums.substr(i,k));
            }
        int beauty=0;
        for(int j=0;j<v.size();j++)
            {
                int val=stoi(v[j]);
                if(val!=0&&num%val==0)
                {
                    beauty++;
                }
            }
        return beauty;
    }
};
