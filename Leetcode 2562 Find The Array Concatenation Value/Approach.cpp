ЁЯФ╣ Problem ржмрзЛржЭрж╛

рждрзЛржорж╛ржХрзЗ ржПржХржЯрж╛ array ржжрзЗржУрзЯрж╛ ржЖржЫрзЗред
ржкрзНрж░рждрж┐ржмрж╛рж░ рждрзБржорж┐ ржкрзНрж░ржержо element ржЖрж░ рж╢рзЗрж╖ element ржПржХрж╕рж╛ржерзЗ concatenate ржХрж░ржмрзЗ (ржорж╛ржирзЗ digit ржЬрзЛрзЬрж╛ ржжрж┐рзЯрзЗ ржирждрзБржи рж╕ржВржЦрзНржпрж╛ ржмрж╛ржирж╛ржмрзЗ)ред

рждрж╛рж░ржкрж░ рж╕рзЗржЯрж╛ sum ржП add ржХрж░ржмрзЗред

ржжрзБржЗ ржжрж┐ржХ ржерзЗржХрзЗ element ржмрж╛ржж ржжрж┐ржмрзЗред

ржпржжрж┐ рж╢рзЗрж╖рзЗ ржПржХржЯрж╛ element ржмрж╛ржХрж┐ ржерж╛ржХрзЗ, рж╕рзЗржЯрж╛ sum ржП ржпрзЛржЧ ржХрж░рзЗ ржжрж┐ржмрзЗред

рж╢рзЗрж╖рзЗ sum return ржХрж░рждрзЗ рж╣ржмрзЗред

ЁЯСЙ ржПржЯрж╛ ржХрж░рждрзЗ ржЖржорж╛ржжрзЗрж░ array ржПрж░ рж╢рзБрж░рзБ ржЖрж░ array ржПрж░ рж╢рзЗрж╖ ржжрзБржЗ ржЬрж╛рзЯржЧрж╛ ржПржХрж╕рж╛ржерзЗ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рждрзЗ рж╣ржмрзЗред ржПржЬржирзНржпржЗ two pointer technique рж╕ржмржЪрзЗрзЯрзЗ efficientред

ЁЯФ╣ Approach / Technique

Two Pointer Technique:

ржПржХржЯрж╛ pointer low ржерж╛ржХржмрзЗ рж╢рзБрж░рзБрждрзЗ (index 0)ред

ржЖрж░рзЗржХржЯрж╛ pointer high ржерж╛ржХржмрзЗ рж╢рзЗрж╖рзЗ (index n-1)ред

ржпрждржХрзНрж╖ржг low <= high рждрждржХрзНрж╖ржг ржХрж╛ржЬ ржЪрж▓ржмрзЗред

ржкрзНрж░рждрж┐ржмрж╛рж░ ржжрзБржЗ ржжрж┐ржХ ржерзЗржХрзЗ element ржирж┐рзЯрзЗ ржХрж╛ржЬ ржХрж░ржм, рждрж╛рж░ржкрж░ pointer move ржХрж░рж╛ржмред

ЁЯФ╣ ржХрзЗржи two pointer ржмрзНржпржмрж╣рж╛рж░ ржХрж░ржм?

ржХрж╛рж░ржг ржЖржорж░рж╛ ржкрзНрж░рждрж┐ржмрж╛рж░ рж╢рзБрж░рзБ ржЖрж░ рж╢рзЗрж╖ ржерзЗржХрзЗ element ржирж┐рждрзЗ ржЪрж╛ржЗред
ржпржжрж┐ рж╢рзБржзрзБ ржПржХржЯрж╛ loop ржжрж┐рзЯрзЗ ржХрж░рж┐ рждрж╛рж╣рж▓рзЗ:

ржкрзНрж░рждрж┐ржмрж╛рж░ beginning ржерзЗржХрзЗ delete ржХрж░рж▓рзЗ O(n) рж╣рзЯрзЗ ржпрж╛ржмрзЗ (inefficient)ред

ржХрж┐ржирзНрждрзБ ржжрзБржЗ pointer ржжрж┐рзЯрзЗ ржХрж░рж▓рзЗ O(n) ржП ржХрж╛ржЬ рж╢рзЗрж╖ рж╣рзЯрзЗ ржпрж╛ржмрзЗред

ЁЯФ╣ ржХрзЛржб ржмрзНржпрж╛ржЦрзНржпрж╛ (Line by Line Bangla)
class Solution 
{
public:
    long long findTheArrayConcVal(vector<int>& nums) 
    {
        int low=0;  // рж╢рзБрж░рзБ pointer
        int high=nums.size()-1;  // рж╢рзЗрж╖ pointer
        long long sum=0;  // final answer рж░рж╛ржЦрж╛рж░ ржЬржирзНржп


ржПржЦрж╛ржирзЗ ржЖржорж░рж╛ рж╢рзБрж░рзБрждрзЗ ржжрзБржЗ pointer set ржХрж░рж▓рж╛ржоред

sum рж╢рзБрж░рзБрждрзЗ 0 рж░рж╛ржЦрж▓рж╛ржоред

        while(low<=high)  // ржпрждржХрзНрж╖ржг ржкрж░рзНржпржирзНржд ржжрзБржЗ pointer cross ржирж╛ ржХрж░рзЗ
        {


рж▓рзБржк ржЪрж▓ржмрзЗ ржпрждржХрзНрж╖ржг ржкрж░рзНржпржирзНржд low <= highред

ржорж╛ржирзЗ array ржПрж░ ржорж╛ржЭ ржкрж░рзНржпржирзНржд ржпрж╛ржмред

             if (low == high)  // ржпржжрж┐ рж╢рзБржзрзБ ржПржХржЯрж╛ element ржмрж╛ржХрж┐ ржерж╛ржХрзЗ
             {
                sum += nums[low];  // рж╕рж░рж╛рж╕рж░рж┐ рж╕рзЗржЗ element ржпрзЛржЧ ржХрж░рж┐
                low++;
                high--; // middle element рж╢рзЗрж╖
             }


ржпржжрж┐ array рждрзЗ рж╢рзБржзрзБ ржПржХржЯрж╛ element ржмрж╛ржХрж┐ ржерж╛ржХрзЗ (ржпрзЗржоржи [13]), рждржЦржи рж╕рзЗржЗ number рж╕рж░рж╛рж╕рж░рж┐ sum ржП add ржХрж░ржмред

               else
               { 
                   string a=to_string(nums[low]);   // ржкрзНрж░ржержо element string ржП
                   string b=to_string(nums[high]);  // рж╢рзЗрж╖ element string ржП
                   string c=a+b;   // concatenate ржХрж░рж▓рж╛ржо
                   long long generate=stoll(c);  // ржЖржмрж╛рж░ number ржП convert ржХрж░рж▓рж╛ржо
                   sum+=generate;  // sum ржП ржпрзЛржЧ ржХрж░рж▓рж╛ржо
                   low++;   // рж╢рзБрж░рзБ pointer ржПржХ ржзрж╛ржк рж╕рж╛ржоржирзЗ
                   high--;  // рж╢рзЗрж╖ pointer ржПржХ ржзрж╛ржк ржкрзЗржЫржирзЗ
               }


ржпржЦржи ржжрзБржЗ ржкрж╛рж╢рзЗ element ржЖржЫрзЗ:

рждрж╛ржжрзЗрж░ string ржП convert ржХрж░рзЗ concatenate ржХрж░рж┐ (ржпрзЗржоржи "5" + "12" = "512")ред

рждрж╛рж░ржкрж░ ржЖржмрж╛рж░ stoll() ржжрж┐рзЯрзЗ number ржмрж╛ржирж╛ржЗред

sum ржП add ржХрж░рж┐ред

pointer update ржХрж░рж┐ред

        }
        return sum; // рж╕ржм рж╢рзЗрж╖ рж╣рж▓рзЗ sum return ржХрж░рж┐
    }
};

ЁЯФ╣ Example Walkthrough (nums = [5,14,13,8,12])

рж╢рзБрж░рзБ: low=0 (5), high=4 (12)

Concatenate тЖТ "5" + "12" = 512

sum = 512

ржПрж░ржкрж░: low=1 (14), high=3 (8)

Concatenate тЖТ "14" + "8" = 148

sum = 512 + 148 = 660

ржПрж░ржкрж░: low=2, high=2 (13)

рж╢рзБржзрзБ ржПржХржЯрж╛ржЗ element тЖТ sum = 660 + 13 = 673

ЁЯСЙ Final Answer = 673 тЬЕ

ЁЯФ╣ Complexity Analysis

Time Complexity: O(n) тЖТ ржПржХржмрж╛рж░ ржкрзБрж░рзЛ array traverse ржХрж░рж╛ред

Space Complexity: O(1) тЖТ рж╢рзБржзрзБ ржХрж┐ржЫрзБ extra variable ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзЗржЫрж┐ред

ЁЯФ╣ Summary (рж╕ржВржХрзНрж╖рзЗржкрзЗ)

Problem ржЯрж╛ ржкрзЬрзЗржЗ ржмрзБржЭрждрзЗ рж╣ржмрзЗ тЖТ рж╢рзБрж░рзБ ржЖрж░ рж╢рзЗрж╖ ржерзЗржХрзЗ ржПржХрж╕рж╛ржерзЗ ржХрж╛ржЬ ржХрж░рждрзЗ рж╣ржмрзЗред

ржПржЬржирзНржп Two Pointer Technique perfect.

Steps:

ржжрзБржЗ pointer тЖТ рж╢рзБрж░рзБ, рж╢рзЗрж╖

Concatenate ржХрж░рзЗ sum ржП ржпрзЛржЧ ржХрж░рж╛

Pointer shift ржХрж░рж╛

Full Code:
------------

  
  class Solution 
{
public:
    long long findTheArrayConcVal(vector<int>& nums) 
    {
        int low=0;
        int high=nums.size()-1;
        long long sum=0;
        while(low<=high)
        {
             if (low == high) 
             {
        sum += nums[low];
        low++;
        high--; // middle element
               }
               else
               { 
            string a=to_string(nums[low]);
           string  b=to_string(nums[high]);
           string c=a+b;
            long long generate=stoll(c);
            sum+=generate;
            low++;
            high--;
               }
        }
        return sum;
    }
};
  

ржорж╛ржЭрзЗ ржПржХржЯрж╛ element ржерж╛ржХрж▓рзЗ ржЖрж▓рж╛ржжрж╛ handle ржХрж░рж╛
