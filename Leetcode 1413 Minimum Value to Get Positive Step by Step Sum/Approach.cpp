рждрзЛржорж╛рж░ ржжрзЗржУрзЯрж╛ ржХрзЛржбржЯрж┐ minStartValue рж╕ржорж╕рзНржпрж╛рж░ ржЬржирзНржп ржПржХржжржо рж╕ржарж┐ржХ ржПржмржВ Accepted рж╣ржУрзЯрж╛рж░ ржХрж╛рж░ржг рж╣рж▓рзЛ рждрзБржорж┐ Step-by-Step Sum ржХржЦржирзЛ 1 ржПрж░ ржирж┐ржЪрзЗ ржирж╛ ржирж╛ржорж╛рж░ ржЬржирзНржп ржПржХржЯрж╛ Safe Minimum Start Value ржмрзЗрж░ ржХрж░рзЗржЫрзЛред ржПржЦржи ржкрзБрж░рзЛ рж╕ржорж╛ржзрж╛ржиржЯрж╛ ржзрж╛ржкрзЗ ржзрж╛ржкрзЗ ржмрж┐рж╢рзНрж▓рзЗрж╖ржг ржХрж░рж┐:

ЁЯФН ржкрзНрж░рж╢рзНржи ржмрж┐рж╢рзНрж▓рзЗрж╖ржг (Problem Breakdown)
рждрзЛржорж╛ржХрзЗ ржПржХржЯрж┐ nums array ржжрзЗржУрзЯрж╛ ржЖржЫрзЗ ржПржмржВ рждрзЛржорж╛рж░ рж╢рзБрж░рзБрждрзЗ ржПржХржЯрж┐ startValue ржирж┐рждрзЗ рж╣ржмрзЗред ржПрж░ржкрж░ startValue ржжрж┐рзЯрзЗ nums ржПрж░ ржкрзНрж░рждрж┐ржЯрж┐ рж╕ржВржЦрзНржпрж╛ржХрзЗ ржзрж╛ржкрзЗ ржзрж╛ржкрзЗ ржпрзЛржЧ ржХрж░рждрзЗ рж╣ржмрзЗред

рж╢рж░рзНржд:
ржпрзЗ ржХрзЛржирзЛ ржзрж╛ржкрзЗ (Step-by-Step sum) ржлрж▓рж╛ржлрж▓ ржпрзЗржи 1-ржПрж░ ржХржо ржирж╛ рж╣рзЯред

тЬЕ Approach ржПрж░ ржзрж╛рж░ржгрж╛ (Core Idea of the Approach)
ржзрж░рж╛ ржпрж╛ржХ startValue = x ржПржмржВ nums = [-3, 2, -3, 4, 2]ред

Step-by-step ржпрзЛржЧ ржХрж░рж▓рзЗ ржжрзЗржЦрж╛ ржпрж╛ржмрзЗ:

bash
Copy
Edit
sum = x
sum = sum + nums[0]
sum = sum + nums[1]
sum = sum + nums[2]
...
ржПржЗржнрж╛ржмрзЗ ржкрзНрж░рждрж┐ржЯрж┐ ржзрж╛ржкрзЗ ржПржХржЯрж┐ running sum рждрзИрж░рж┐ рж╣рзЯред ржЖржорж░рж╛ ржЪрж╛ржЗ ржПржЗ running sum ржпрзЗржи ржХрзЛржирзЛ ржзрж╛ржкрзЗржЗ 1 ржПрж░ ржирж┐ржЪрзЗ ржирж╛ ржпрж╛рзЯред

рждрж╛рж╣рж▓рзЗ ржЖржорж╛ржжрзЗрж░ ржХрж╛ржЬ:

ржкрзНрж░ржержорзЗ prefix sum ржмрзЗрж░ ржХрж░рж╛ (running total)ред

ржПрж░ржкрж░ рж╕рзЗржЗ prefix sum ржПрж░ ржоржзрзНржпрзЗ рж╕рж░рзНржмржирж┐ржорзНржи ржорж╛ржи (minimum) ржмрзЗрж░ ржХрж░рж╛ред

ржпржжрж┐ рж╕рзЗржЗ minPrefixSum < 0 рж╣рзЯ, рждрж╛рж╣рж▓рзЗ ржЖржорж╛ржжрзЗрж░ startValue ржХрзЗ 1 - minPrefixSum ржирж┐рждрзЗ рж╣ржмрзЗред

ржХрж╛рж░ржг:

ruby
Copy
Edit
startValue + minPrefixSum >= 1  
=> startValue >= 1 - minPrefixSum
ЁЯза Step-by-Step Code ржмрзНржпрж╛ржЦрзНржпрж╛ (Line-by-Line in Bangla)
cpp
Copy
Edit
class Solution {
public:
Solution ржХрзНрж▓рж╛рж╕ рждрзИрж░рж┐ ржХрж░рж╛ рж╣рзЯрзЗржЫрзЗ тАФ LeetCode ржП ржПрж░ржХржо convention ржерж╛ржХрзЗред

тЬЕ Helper Function: findmin
cpp
Copy
Edit
int findmin(vector<int>& nums)
{
  int min=nums[0];
  for(int k=1;k<nums.size();k++){
    if(nums[k]<min)
    {
      min=nums[k];
    }
  }
  return min;
}
ЁЯФ╣ ржПржЗ ржлрж╛ржВрж╢ржиржЯрж┐ nums ржнрзЗржХрзНржЯрж░рзЗрж░ ржоржзрзНржпрзЗ рж╕рж░рзНржмржирж┐ржорзНржи ржорж╛ржи ржмрзЗрж░ ржХрж░рзЗред ржПржЯрж╛ prefix sum ржПрж░ ржЬржирзНржп ржжрж░ржХрж╛рж░ ржпрж╛рждрзЗ ржЖржорж░рж╛ ржЪрзЗржХ ржХрж░рждрзЗ ржкрж╛рж░рж┐ рж╕ржмржЪрзЗрзЯрзЗ ржЦрж╛рж░рж╛ржк ржЕржмрж╕рзНржерж╛ ржХрзЛржиржЯрж╛ред

тЬЕ Main Function: minStartValue
cpp
Copy
Edit
int minStartValue(vector<int>& nums) {
ржорзВрж▓ ржлрж╛ржВрж╢ржи ржпрзЗржЦрж╛ржирзЗ рж╕ржорж╛ржзрж╛ржи рж╣ржмрзЗред

Step 1: Prefix Sum Array рждрзИрж░рж┐
cpp
Copy
Edit
vector<int>psum(nums.size(),0);
psum[0]=nums[0];
for(int i=1;i<nums.size();i++ )
{
  psum[i]=psum[i-1]+nums[i];
} 
ЁЯФ╣ psum рж╣рж▓рзЛ prefix sum array ржмрж╛ ржЪрж▓ржорж╛ржи ржпрзЛржЧржлрж▓ (running sum)ред
ЁЯФ╣ psum[i] ржорж╛ржирзЗ рж╣рж▓рзЛ nums[0] + nums[1] + ... + nums[i]

ржЙржжрж╛рж╣рж░ржг: nums = [-3,2,-3,4,2] рж╣рж▓рзЗ psum = [-3, -1, -4, 0, 2]

Step 2: рж╕рж░рзНржмржирж┐ржорзНржи prefix sum ржЦрзЛржБржЬрж╛
cpp
Copy
Edit
int startvalue=findmin(psum);
ЁЯФ╣ startvalue ржП prefix sum ржПрж░ рж╕ржмржЪрзЗрзЯрзЗ ржЫрзЛржЯ ржорж╛ржи ржПржирзЗ рж░рж╛ржЦрж╛ рж╣рж▓рзЛред

Step 3: StartValue ржирж┐рж░рзНржзрж╛рж░ржг
cpp
Copy
Edit
if(startvalue<0)
{
  startvalue=1-startvalue;
}
else
{
  startvalue=1;
}
ЁЯФ╣ ржпржжрж┐ prefix sum ржПрж░ рж╕ржмржЪрзЗрзЯрзЗ ржЫрзЛржЯ ржорж╛ржи negative рж╣рзЯ (ржзрж░рзЛ -4), рждрж╛рж╣рж▓рзЗ startValue = 1 - (-4) = 5

ЁЯФ╣ ржЖрж░ ржпржжрж┐ рж╕ржм ржХрж┐ржЫрзБ non-negative рж╣рзЯ, рждрж╛рж╣рж▓рзЗ 1 ржжрж┐рж▓рзЗржЗ ржЪрж▓рзЗред

Step 4: Return
cpp
Copy
Edit
return startvalue;
ЁЯФ╣ рж╕ржарж┐ржХ start value рж░рж┐ржЯрж╛рж░рзНржи ржХрж░рж╛ рж╣ржЪрзНржЫрзЗред

тЬЕ Example Walkthrough
Input: [-3, 2, -3, 4, 2]
Prefix Sum:

diff
Copy
Edit
-3, -1, -4, 0, 2
Minimum prefix sum: -4
StartValue = 1 - (-4) = 5 тЬЕ

ЁЯУМ Time & Space Complexity:
Time Complexity: O(n)

Space Complexity: O(n) [because of psum array]

(Optimization ржХрж░рж▓рзЗ psum ржЫрж╛рзЬрж╛ржУ ржХрж╛ржЬ ржХрж░рж╛ ржпрзЗрждрзЛ)

тЬЕ рж╕ржВржХрзНрж╖рзЗржкрзЗ ржзрж╛рж░рж╛ржмрж╛рж╣рж┐ржХ ржзрж╛ржк (Quick Summary)
Prefix Sum ржмрзЗрж░ ржХрж░рзЛ

рж╕рж░рзНржмржирж┐ржорзНржи prefix sum ржЦрзЛржБржЬрзЛ

ржпржжрж┐ min < 0 рж╣рзЯ тЖТ startValue = 1 - min

ржирж╛ рж╣рж▓рзЗ startValue = 1

Full Code:
-----------

class Solution 
{
public:
  int findmin(vector<int>& nums)
  {
    int min=nums[0];
    for(int k=1;k<nums.size();k++){
      if(nums[k]<min)
      {
        min=nums[k];
      }
    }
    return min;
  }
    int minStartValue(vector<int>& nums) 
{
      vector<int>psum(nums.size(),0);
      psum[0]=nums[0];
      for(int i=1;i<nums.size();i++ )
      {
        psum[i]=psum[i-1]+nums[i];
      } 
      int startvalue=findmin(psum);
      if(startvalue<0)
      {
        startvalue=1-startvalue;
      }
      else
      {
       startvalue= 1;
      }
      
      return startvalue;

    }
};
