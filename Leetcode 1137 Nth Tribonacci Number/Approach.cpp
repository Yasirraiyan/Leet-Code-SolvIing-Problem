ЁЯФв Tribonacci Sequence ржХрзА?

Tribonacci sequence Fibonacci-ржПрж░ ржорждржЗ, рждржмрзЗ ржПржЦрж╛ржирзЗ ржкрзВрж░рзНржмрзЗрж░ 3ржЯрж┐ рж╕ржВржЦрзНржпрж╛рж░ ржпрзЛржЧржлрж▓ ржкрж░ржмрж░рзНрждрзА рж╕ржВржЦрзНржпрж╛ ржирж┐рж░рзНржзрж╛рж░ржг ржХрж░рзЗред

ржирж┐рж░рзНржзрж╛рж░ржг:

T(0) = 0
T(1) = 1
T(2) = 1
T(n) = T(n-1) + T(n-2) + T(n-3)  // for n тЙе 3


---

ЁЯОп ржЙржжрж╛рж╣рж░ржг:

ржзрж░рзЛ n = 4, рждрж╛рж╣рж▓рзЗ:

T(0) = 0
T(1) = 1
T(2) = 1
T(3) = T(2) + T(1) + T(0) = 1 + 1 + 0 = 2
T(4) = T(3) + T(2) + T(1) = 2 + 1 + 1 = 4

тЬЕ Output рж╣ржмрзЗ 4.


---

ЁЯза ржХрзАржнрж╛ржмрзЗ ржЪрж┐ржирзНрждрж╛ ржХрж░ржмрзЗ рж╕ржорж╛ржзрж╛ржиржЯрж╛?

ржкрзНрж░рж╢рзНржирзЗ recursive рж╕ржорзНржкрж░рзНржХ ржжрзЗрзЯрж╛ ржЖржЫрзЗ:
T(n) = T(n-1) + T(n-2) + T(n-3)

рждрзБржорж┐ ржПржЯрж╛ ржжрзЗржЦрзЗржЗ ржмрзБржЭрждрзЗ ржкрж╛рж░ржмрзЗ ржпрзЗ ржПржЯрж┐ Dynamic Programming (DP) ржПрж░ ржоржд, ржХрж╛рж░ржг:

Overlapping subproblems ржЖржЫрзЗ (bar bar T(n-1), T(n-2), etc. ржжрж░ржХрж╛рж░ рж╣ржЪрзНржЫрзЗ)

рждрж╛ржЗ рждрзБржорж┐ memoization ржмрж╛ bottom-up DP (tabulation) ржжрж┐рзЯрзЗ рж╕ржорж╛ржзрж╛ржи ржХрж░рждрзЗ ржкрж╛рж░рзЛ


рждрзБржорж┐ ржпрзЗржЯрж╛ ржХрж░ржЫрзЛ рж╕рзЗржЯрж╛ Bottom-Up DPред


---

тЬЕ ржХрзЛржб ржмрж┐рж╢рзНрж▓рзЗрж╖ржг (Line by Line):

class Solution 
{
public:
    int tribonacci(int n)

ЁЯФ╣ ржЖржорж░рж╛ n-th Tribonacci рж╕ржВржЦрзНржпрж╛ ржмрзЗрж░ ржХрж░ржмред

vector<int>v(n+3);

ЁЯФ╣ ржЖржорж░рж╛ ржПржХржЯрж╛ vector ржирж┐ржЪрзНржЫрж┐ ржпрж╛рждрзЗ ржЖржорж░рж╛ T(0) ржерзЗржХрзЗ T(n) ржкрж░рзНржпржирзНржд рж╕ржм value рж░рж╛ржЦрждрзЗ ржкрж╛рж░рж┐ред
n+3 ржирж┐ржЪрзНржЫрж┐ ржХрж╛рж░ржг v[0], v[1], v[2] ржкрж░рзНржпржирзНржд initialize ржХрж░рж╛ рж▓рж╛ржЧржмрзЗ, ржЖрж░ n ржПрж░ ржЬржирзНржп ржирж┐рж╢рзНржЪрж┐рждржнрж╛ржмрзЗ ржЬрж╛рзЯржЧрж╛ ржерж╛ржХржмрзЗред

v[0]=0;
        v[1]=1;
        v[2]=1;

ЁЯФ╣ Initial condition set ржХрж░рж▓рж╛ржоред

for(int i=3;i<=n;i++)
        {
            v[i]=v[i-1]+v[i-2]+v[i-3];
        }

ЁЯФ╣ ржПржЦржи Bottom-Up рж╣рж┐рж╕рж╛ржм ржХрж░ржмрзЛред
ЁЯФБ i = 3 ржерзЗржХрзЗ n ржкрж░рзНржпржирзНржд loop ржЪрж╛рж▓рж╛ржмрзЛред

ЁЯФ╕ ржкрзНрж░рждрзНржпрзЗржХ ржзрж╛ржкрзЗ v[i] = v[i-1] + v[i-2] + v[i-3]

ржЙржжрж╛рж╣рж░ржг:
i = 4 тЖТ v[4] = v[3] + v[2] + v[1]

int ans=v[n];

ЁЯФ╣ ржЖржорж░рж╛ ржЪрж╛ржЗ n-th Tribonacci ржорж╛ржиред рждрж╛ржЗ рж╕рзЗржЯрж╛ ржирж┐рзЯрзЗ ржирж┐рж▓рж╛ржоред

return ans;
    }
};

ЁЯФЪ ржЕржмрж╢рзЗрж╖рзЗ рж╕рзЗржЯрж╛ return ржХрж░рж▓рж╛ржоред


---

ЁЯзк Test Case Analyses:

тЬЕ Test Case 1: n = 4

v[0]=0
v[1]=1
v[2]=1
v[3]=1+1+0 = 2
v[4]=2+1+1 = 4
Return: v[4] = 4 тЬЕ

тЬЕ Test Case 2: n = 25

Loop 3 ржерзЗржХрзЗ 25 ржкрж░рзНржпржирзНржд ржпрж╛ржмрзЗ, ржПржмржВ ржкрзНрж░рждрзНржпрзЗржХржЯрж╛рж░ ржорж╛ржи рж╣рж┐рж╕рж╛ржм ржХрж░ржмрзЗред

ржлрж▓рж╛ржлрж▓: 1389537 рж╣ржмрзЗ тАФ ржпрзЗржЯрж╛ ржарж┐ржХ тЬЕ


---

тЬЕ Time & Space Complexity:

ЁЯХТ Time Complexity: O(n) тАФ ржХрж╛рж░ржг loop ржПржХржмрж╛рж░ржЗ ржЪрж▓ржмрзЗ n ржмрж╛рж░ред

ЁЯТ╛ Space Complexity: O(n) тАФ ржХрж╛рж░ржг ржЖржорж░рж╛ n+3 size ржПрж░ vector ржирж┐ржЪрзНржЫрж┐ред


(рждржмрзЗ ржЪрж╛ржЗрж▓рзЗ v[i-1], v[i-2], v[i-3] рзйржЯрж╛ ржнрзНржпрж╛рж░рж┐рзЯрзЗржмрж▓рзЗржЗ рж╣рж┐рж╕рж╛ржм ржХрж░рзЗ Space O(1) ржХрж░рж╛ ржпрзЗржд)


---

ЁЯУШ Summary:

ржмрж┐рж╖рзЯ	ржмрзНржпрж╛ржЦрзНржпрж╛

ржзрж░ржг	Dynamic Programming (Bottom-Up)
рж╕рзВрждрзНрж░	T(n) = T(n-1) + T(n-2) + T(n-3)
ржХрзЛржб ржзрж╛рж░ржгрж╛	vector ржжрж┐рзЯрзЗ ржЖржЧрзЗрж░ ржорж╛ржи рж░рзЗржЦрзЗ ржкрж░рзЗрж░ ржорж╛ржи рж╣рж┐рж╕рж╛ржм
Input Constraint	0 <= n <= 37, рждрж╛ржЗ Iterative method ржпржерзЗрж╖рзНржЯ
Complexity	Time: O(n), Space: O(n)

Full Code:
-------------

class Solution 
{
public:
    int tribonacci(int n)
    {
        vector<int>v(n+3);
        v[0]=0;
        v[1]=1;
        v[2]=1;
        for(int i=3;i<=n;i++)
            {
                v[i]=v[i-1]+v[i-2]+v[i-3];
            }
        int ans=v[n];
        return ans;
    }
};
