рждрзБржорж┐ ржПржЗ рж╕ржорж╕рзНржпрж╛ржЯрж╛ рж╕рзБржирзНржжрж░ржнрж╛ржмрзЗ ржмрж┐рж╢рзНрж▓рзЗрж╖ржг ржХрж░рзЗ рж╕ржорж╛ржзрж╛ржи ржХрж░рзЗржЫрзЛред ржПржЦржи ржЖржорж┐ ржмрзНржпрж╛ржЦрзНржпрж╛ ржХрж░ржм рждрзБржорж┐ ржХрж┐ржнрж╛ржмрзЗ ржЪрж┐ржирзНрждрж╛ ржХрж░рзЗржЫрзЛ, ржХрзЗржи рждрзЛржорж╛рж░ рж▓ржЬрж┐ржХ рж╕ржарж┐ржХ, ржПржмржВ рждрзЛржорж╛рж░ ржХрзЛржб рж▓рж╛ржЗржи ржмрж╛ржЗ рж▓рж╛ржЗржи ржмрзНржпрж╛ржЦрзНржпрж╛ ржХрж░ржм ржмрж╛ржВрж▓рж╛ржпрж╝ред

тЬЕ ржкрзНрж░рж╢рзНржи ржмрж┐рж╢рзНрж▓рзЗрж╖ржг (Bangla)
рждрзЛржорж╛ржХрзЗ ржПржХржЯрж┐ string num ржжрзЗржУржпрж╝рж╛ рж╣ржпрж╝рзЗржЫрзЗ, ржпрзЗржЦрж╛ржирзЗ ржкрзНрж░рждрж┐ржЯрж┐ ржХрзНржпрж╛рж░рзЗржХрзНржЯрж╛рж░ ржПржХржЯрж┐ рж╕ржВржЦрзНржпрж╛ (digit)ред
рждрзЛржорж╛рж░ ржХрж╛ржЬ рж╣рж▓рзЛ: ржЪрзЗржХ ржХрж░рж╛ ржпрзЗ,
ржкрзНрж░рждрж┐ржЯрж┐ index i рждрзЗ ржерж╛ржХрж╛ рж╕ржВржЦрзНржпрж╛ (num[i]) рж╣рж▓рзЛ ржкрзБрж░рзЛ string ржП digit i ржХрзЯржмрж╛рж░ ржЖржЫрзЗ рждрж╛рж░ countред

ЁЯФН ржЙржжрж╛рж╣рж░ржг 1:
text
Copy
Edit
Input: "1210"
index 0 тЖТ num[0] = '1' тЖТ digit 0 тЖТ 1 ржмрж╛рж░ ржЖржЫрзЗ? рж╣рзНржпрж╛ржБ

index 1 тЖТ num[1] = '2' тЖТ digit 1 тЖТ 2 ржмрж╛рж░ ржЖржЫрзЗ? рж╣рзНржпрж╛ржБ

index 2 тЖТ num[2] = '1' тЖТ digit 2 тЖТ 1 ржмрж╛рж░ ржЖржЫрзЗ? рж╣рзНржпрж╛ржБ

index 3 тЖТ num[3] = '0' тЖТ digit 3 тЖТ 0 ржмрж╛рж░ ржЖржЫрзЗ? рж╣рзНржпрж╛ржБ

тЬЕ рж╕ржм match тЖТ return true

ЁЯФН ржЙржжрж╛рж╣рж░ржг 2:
text
Copy
Edit
Input: "030"
index 0 тЖТ num[0] = '0' тЖТ digit 0 тЖТ 0 ржмрж╛рж░ ржЖржЫрзЗ? тЭМ ржирж╛ тЖТ 2 ржмрж╛рж░ ржЖржЫрзЗ

index 1 тЖТ num[1] = '3' тЖТ digit 1 тЖТ 3 ржмрж╛рж░ ржЖржЫрзЗ? тЭМ ржирж╛ тЖТ 0 ржмрж╛рж░ ржЖржЫрзЗ

тЭМ ржнрзБрж▓ ржЖржЫрзЗ тЖТ return false

тЬЕ рждрзЛржорж╛рж░ ржЪрж┐ржирзНрждрж╛ (Approach)
рждрзБржорж┐ ржЪрж┐ржирзНрждрж╛ ржХрж░рзЗржЫрзЛ:

ржкрзНрж░ржержорзЗ num string-ржП ржкрзНрж░рждрж┐ржЯрж┐ digit ржХрждржмрж╛рж░ ржЖржЫрзЗ рждрж╛ ржЧрзБржирзЗ рж░рж╛ржЦрзЛред

ржПрж░ржкрж░ ржкрзНрж░рждрж┐ржЯрж┐ index i ржПрж░ ржЬржирзНржп ржЪрзЗржХ ржХрж░рзЛ:

num[i] ржХрзА рж╕рждрзНржпрж┐ржЗ digit i ржПрж░ frequency?

ржпржжрж┐ рж╕ржм ржарж┐ржХ ржерж╛ржХрзЗ тЖТ return true,
ржирж╛ рж╣рж▓рзЗ тЖТ return false

тЬЕ рждрзЛржорж╛рж░ ржХрзЛржб ржмрж┐рж╢рзНрж▓рзЗрж╖ржг (Line by Line in Bangla)
cpp
Copy
Edit
class Solution 
{
public:
    bool digitCount(string num) 
    {
тЮбя╕П рждрзБржорж┐ digitCount ржирж╛ржорзЗрж░ ржПржХржЯрж┐ ржлрж╛ржВрж╢ржи ржбрж┐ржлрж╛ржЗржи ржХрж░рзЗржЫрзЛ, ржпрзЗржЯрж╛ string num ржЗржиржкрзБржЯ рж╣рж┐рж╕рзЗржмрзЗ ржирзЗржпрж╝ ржПржмржВ true/false рж░рж┐ржЯрж╛рж░рзНржи ржХрж░рзЗред

cpp
Copy
Edit
unordered_map<char,int>freq;
тЮбя╕П ржПржЦрж╛ржирзЗ рждрзБржорж┐ ржПржХржЯрж┐ unordered_map рждрзИрж░рж┐ ржХрж░рзЗржЫрзЛ, ржпрзЗржЦрж╛ржирзЗ

key = ржХрзНржпрж╛рж░рзЗржХрзНржЯрж╛рж░ (digit in character form)

value = ржХрждржмрж╛рж░ ржжрзЗржЦрж╛ ржЧрзЗржЫрзЗ (frequency)

cpp
Copy
Edit
bool type=true;
тЮбя╕П ржПржЯрж┐ ржлрж╛ржЗржирж╛рж▓ рж░рзЗржЬрж╛рж▓рзНржЯ рж░рж╛ржЦрж╛рж░ ржЬржирзНржп ржПржХржЯрж┐ flagред ржзрж░рзЗржЫрзЛ рж╢рзБрж░рзБрждрзЗ рж╕ржм ржарж┐ржХ ржЖржЫрзЗ (true)ред

cpp
Copy
Edit
for(int i=0;i<num.size();i++)
{
  freq[num[i]]++;
}
тЮбя╕П ржПржЗ рж▓рзБржкрзЗ num string ржПрж░ ржкрзНрж░рждрж┐ржЯрж┐ digit (as char) ржПрж░ frequency ржХрж╛ржЙржирзНржЯ ржХрж░ржЫрзЛред

ржЙржжрж╛рж╣рж░ржг:
num = "1210" рж╣рж▓рзЗ freq рж╣ржмрзЗ:

arduino
Copy
Edit
'1' тЖТ 2 ржмрж╛рж░
'2' тЖТ 1 ржмрж╛рж░
'0' тЖТ 1 ржмрж╛рж░
cpp
Copy
Edit
for(int j=0;j<num.size();j++)
{
  if(freq['0'+j]!=num[j]-'0')
  {
    type=false;
    break;
  }
}
тЮбя╕П ржПржЗ рж▓рзБржкрзЗ рждрзБржорж┐ ржкрзНрж░рждрж┐ржЯрж┐ index j рждрзЗ ржпрж╛ржЪрзНржЫрзЛ, ржПржмржВ ржЪрзЗржХ ржХрж░ржЫрзЛ:

freq['0'+j] тЖТ ржорж╛ржирзЗ digit j actual ржХрждржмрж╛рж░ ржЖржЫрзЗ

num[j] - '0' тЖТ ржорж╛ржирзЗ index j рждрзЗ рж▓рзЗржЦрж╛ рж╕ржВржЦрзНржпрж╛

ржпржжрж┐ ржорж┐рж▓рзЗ ржирж╛ ржпрж╛ржпрж╝, рждрж╛рж╣рж▓рзЗ type=false ржХрж░рзЗ break ржХрж░рзЛред

cpp
Copy
Edit
return type;
тЮбя╕П рж╕ржм ржарж┐ржХ ржерж╛ржХрж▓рзЗ true рж░рж┐ржЯрж╛рж░рзНржи ржХрж░ржмрзЗ, ржирж╛ рж╣рж▓рзЗ false

тЬЕ Test Case Walkthrough: num = "1210"
index	num[i]	digit i	freq of i in num	match?
0	'1'	0	1	тЬЕ
1	'2'	1	2	тЬЕ
2	'1'	2	1	тЬЕ
3	'0'	3	0	тЬЕ

тЬЕ return true

Full Code:
------------
class Solution 
{
public:
    bool digitCount(string num) 
    {
      unordered_map<char,int>freq;
      bool type=true;
      for(int i=0;i<num.size();i++)
      {
        freq[num[i]]++;
      }
      for(int j=0;j<num.size();j++)
      {
        if(freq['0'+j]!=num[j]-'0')
        {
          type=false;
          break;
        }
      }
      return type;
    }
};
