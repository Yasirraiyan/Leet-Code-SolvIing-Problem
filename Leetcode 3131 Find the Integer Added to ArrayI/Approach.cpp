Amar 2 ta array ase nums1 nums2 eder moddhe kobn integer array 1 e jog korle array 2 eer soman hbe.
  Exa:
--------
  Input: nums1 = [2,6,4], nums2 = [9,7,5]

Output: 3

Explanation:

The integer added to each element of nums1 is 3.
  3 kmne
  nums1 er sum=2+6+4=12
  nums2 er sum=9+7+5=21;
  diff=21-12=9
    eder both er size=3;
   same 
tai (21-12)/3=3;
Input: nums1 = [10], nums2 = [5]

Output: -5

Explanation:

The integer added to each element of nums1 is -5.
  kmne 5-10 jokhon size =1 taile -5
  abar 
  Example 3:

Input: nums1 = [1,1,1,1], nums2 = [1,1,1,1]

Output: 0

Explanation:

The integer added to each element of nums1 is 0.

both size()=4
  nums 1 er sum=4
  nums2 er sum=4;
diff=4-4=0;
tai=(4-4)/4=0;
Approach:
----------
  2 ta variable nei sum1 ja initial 0 eta diye array 1 er sum ber korbo
  sum2 ja initial 0 eta diye array 2 er sum ber korbo
1 ta for loop chalai i=0 to i<nums1.size() porjonto i++ kori nums1 traverse kori 
sum1+=nums1[i] kori nums1 er sum ber kori
aro 1 ta for loop chalai j=0 to j<nums2.size() porjonto j++ kori nums2 traverse kori 
sum2+=nums2[j] kori nums2 er sum ber kori
check kori same size and size 1 er theke boro 
So,
     if(nums1.size()>1&&nums2.size()>1)
          {
          if(nums1.size()==nums2.size())
          {
hoile 
diff ber kori 
result e rakhi 
So,
  int result=sum2-sum1;
 divide koroi
 ans=result/static_cast<int>(nums1.size());
return kori ans.
Static Cast kn:
----------------
  рждрзБржорж┐ ржЦрзБржм ржнрж╛рж▓рзЛ ржкрзНрж░рж╢рзНржи ржХрж░рзЗржЫрзЛ тАФ static_cast<int>(nums1.size()) ржХрзЗржи ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж╛ рж╣ржпрж╝рзЗржЫрзЗ, ржЖрж░ рж╕рж░рж╛рж╕рж░рж┐ nums1.size() ржжрж┐ржпрж╝рзЗ ржнрж╛ржЧ ржирж╛ ржХрж░рж▓рзЗржЗ ржмрж╛ ржХрж┐ рж╣ржд?

ржЪрж▓, ржзрж╛ржкрзЗ ржзрж╛ржкрзЗ ржмрж╛ржВрж▓рж╛ + ржорзНржпрж╛ржерзЗржорзЗржЯрж┐ржХрзНржпрж╛рж▓ ржмрзНржпрж╛ржЦрзНржпрж╛ ржХрж░рж┐ ржпрзЗржи рж╕рж╣ржЬрзЗ ржмрзБржЭрждрзЗ ржкрж╛рж░рзЛ:

ЁЯза static_cast ржорж╛ржирзЗ ржХрзА?
static_cast<Type>(value) рж╣рж▓ C++ ржП ржЯрж╛ржЗржк ржХржиржнрж╛рж░рзНрж╕ржирзЗрж░ ржЬржирзНржп ржмрзНржпржмрж╣рзГржд ржПржХржЯрж╛ ржорзЗржержб, ржпрзЗржЯрж╛ ржХржорзНржкрж╛ржЗрж▓ ржЯрж╛ржЗржорзЗ (program compile рж╣ржУржпрж╝рж╛рж░ рж╕ржоржпрж╝) ржЯрж╛ржЗржк ржмржжрж▓рзЗ ржжрзЗржпрж╝ред

ржзрж░рзЛ:

cpp
Copy
Edit
double x = static_cast<double>(5); // x = 5.0
ржПржЦрж╛ржирзЗ 5 ржЗржирзНржЯрж┐ржЬрж╛рж░ ржЫрж┐рж▓, ржЖржорж░рж╛ ржЬрзЛрж░ ржХрж░рзЗ ржбрж╛ржмрж▓ ржмрж╛ржирж╛рж▓рж╛ржоред

ЁЯОп ржЖржорж╛ржжрзЗрж░ ржкрзНрж░рж╢рзНржирзЗрж░ ржХрзЛржбржЯрж╛:
cpp
Copy
Edit
return (sum2 - sum1) / static_cast<int>(nums1.size());
ржзрж░рж╛ ржпрж╛ржХ:

sum2 ржПржмржВ sum1 рж╣ржЪрзНржЫрзЗ int ржЯрж╛ржЗржк ржнрзЗрж░рж┐ржпрж╝рзЗржмрж▓ред

nums1.size() рж╣рж▓рзЛ size_t ржЯрж╛ржЗржк, ржпрзЗржЯрж╛ ржорзВрж▓ржд unsigned int ржЯрж╛ржЗржкрзЗрж░ ржорждрзЛ тАФ ржорж╛ржирзЗ ржПржЯрж╛ ржХржЦржирзЛржЗ ржирзЗржЧрзЗржЯрж┐ржн рж╣ржпрж╝ ржирж╛ред

тЭУ рждрж╛рж╣рж▓рзЗ ржкрзНрж░рж╢рзНржи: рж╕рж░рж╛рж╕рж░рж┐ ржнрж╛ржЧ ржХрж░рж▓рзЗ рж╕ржорж╕рзНржпрж╛ ржХрзА?
cpp
Copy
Edit
(sum2 - sum1) / nums1.size();
ржПржЦрж╛ржирзЗ sum2 - sum1 рж╣ржЪрзНржЫрзЗ int (signed), ржХрж┐ржирзНрждрзБ nums1.size() рж╣ржЪрзНржЫрзЗ size_t (unsigned)ред
C++-ржП ржпржЦржи signed ржПржмржВ unsigned ржЯрж╛ржЗржк ржПржХрж╕рж╛ржерзЗ ржХрзЛржирзЛ ржЕржкрж╛рж░рзЗрж╢ржирзЗ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзЛ, рждржЦржи C++ automatic type conversion ржХрж░рзЗ тАФ ржХрж┐ржирзНрждрзБ рж╕рзЗржЯрж╛ рж╕ржмрж╕ржоржпрж╝ ржирж┐рж░рж╛ржкржж ржирж╛ред

ЁЯФе рж╕ржорзНржнрж╛ржмрзНржп рж╕ржорж╕рзНржпрж╛:
Unexpected result: ржпржжрж┐ sum2 - sum1 ржирзЗржЧрзЗржЯрж┐ржн рж╣ржпрж╝, ржЖрж░ рждрзБржорж┐ unsigned ржжрж┐ржпрж╝рзЗ ржнрж╛ржЧ ржХрж░рзЛ, рждрж╛рж╣рж▓рзЗ ржлрж▓рж╛ржлрж▓ ржЕржжрзНржнрзБржд ржЖрж╕рждрзЗ ржкрж╛рж░рзЗред

Warning/Error: ржЕржирзЗржХ ржХржорзНржкрж╛ржЗрж▓рж╛рж░ ржЯрж╛ржЗржк ржорж┐ржХрзНрж╕рж┐ржВ-ржПрж░ ржЬржирзНржп warning ржжрзЗржпрж╝, production code-ржП ржПржЯрж╛ ржПржбрж╝рж╛ржирзЛ ржЙржЪрж┐рждред

ЁЯУК ржПржХрзЗ ржорзНржпрж╛ржерзЗрж░ ржорждрзЛ ржзрж░рзЛ:
ржзрж░рзЛ:

cpp
Copy
Edit
sum1 = 20;
sum2 = 10;
nums1.size() = 5;
рждрж╛рж╣рж▓рзЗ:

cpp
Copy
Edit
(sum2 - sum1) = -10;
ржПржЦржи ржпржжрж┐:

cpp
Copy
Edit
-10 / 5 = -2 тЬЕ (ржпржжрж┐ ржЯрж╛ржЗржк ржорзЗрж╢ ржирж╛ ржХрж░рзЗ)
ржХрж┐ржирзНрждрзБ ржпржжрж┐ ржЯрж╛ржЗржк ржорж┐ржХрзНрж╕ рж╣ржпрж╝:

cpp
Copy
Edit
-10 / size_t(5) тЖТ ржЯрж╛ржЗржк ржХржиржнрж╛рж░рзНрж╕ржи тЖТ undefined ржмрж╛ ржЕржжрзНржнрзБржд ржлрж▓рж╛ржлрж▓
рждрж╛ржЗ ржПржЗ ржЭрж╛ржорзЗрж▓рж╛ ржПржбрж╝рж╛рждрзЗ ржЖржорж░рж╛ рж▓рж┐ржЦрж┐:

cpp
Copy
Edit
(sum2 - sum1) / static_cast<int>(nums1.size());
ржПржЦрж╛ржирзЗ ржЖржорж░рж╛ ржЬрзЛрж░ ржХрж░рзЗ nums1.size() ржХрзЗ int ржмрж╛ржирж┐ржпрж╝рзЗ ржжрж┐ржЪрзНржЫрж┐ ржпрж╛рждрзЗ ржжрзБржЗржЯрж╛ ржнрзЗрж░рж┐ржпрж╝рзЗржмрж▓ржЗ int ржЯрж╛ржЗржкрзЗ ржерж╛ржХрзЗ тАФ рждржЦржи ржХржорзНржкрж╛ржЗрж▓рж╛рж░ ржХрзЛржирзЛ ржЧржбрж╝ржмржбрж╝ ржХрж░ржмрзЗ ржирж╛ред

тЬЕ ржХржЦржи static_cast ржмрзНржпржмрж╣рж╛рж░ ржХрж░ржмрзЗ?
ржпржЦржи ржЯрж╛ржЗржк mismatch рж╣ржЪрзНржЫрзЗ ржжрзБржЗ ржнрзЗрж░рж┐ржпрж╝рзЗржмрж▓рзЗрж░ ржоржзрзНржпрзЗ

ржпржЦржи signed-unsigned рж╕ржорж╕рзНржпрж╛ рж╣рждрзЗ ржкрж╛рж░рзЗ

ржпржЦржи ржХржорзНржкрж╛ржЗрж▓рж╛рж░ warning ржжрж┐ржЪрзНржЫрзЗ ржЯрж╛ржЗржк ржХржиржнрж╛рж░рзНрж╕ржирзЗрж░ ржЬржирзНржп

ржпржЦржи рждрзБржорж┐ ржЬрж╛ржирзЛ ржХржиржнрж╛рж░рзНрж╕ржи ржирж┐рж░рж╛ржкржж тАФ ржпрзЗржоржи size_t тЖТ int ржпржжрж┐ ржЬрж╛ржирзЛ ржпрзЗ ржнрзНржпрж╛рж▓рзБ ржЫрзЛржЯ

тЬи рж╕ржВржХрзНрж╖рзЗржкрзЗ:
ржХрж╛рж░ржг	ржмрзНржпрж╛ржЦрзНржпрж╛
ржЯрж╛ржЗржк mismatch	size_t unsigned ржЖрж░ sum1/sum2 signed
ржирж┐рж░рж╛ржкржж ржлрж▓рж╛ржлрж▓	ржЯрж╛ржЗржк ржорж┐ржХрзНрж╕рж┐ржВ ржПржбрж╝рж╛ржирзЛ
рж╕рзНржкрж╖рзНржЯрждрж╛	ржкрзНрж░рзЛржЧрзНрж░рж╛ржорзЗрж░ behavior ржирж┐рж░рзНржнрж░ржпрзЛржЧрзНржп рж╣ржпрж╝
Warning ржПржбрж╝рж╛ржирзЛ	Clean ржПржмржВ safe code
рждрзБржорж┐ ржЪрж╛ржЗрж▓рзЗ ржЖржорж┐ ржПржЗ ржмрзНржпрж╛ржЦрзНржпрж╛рж░ ржУржкрж░ ржПржХржЯрж╛ ржЫрзЛржЯ C++ ржкрзНрж░рзЛржЧрзНрж░рж╛ржо рж▓рж┐ржЦрзЗ ржжрзЗржЦрждрзЗ ржкрж╛рж░рж┐ ржпрзЗржЯрж╛ ржжрзБржЗржнрж╛ржмрзЗ divide ржХрж░рзЗ тАФ ржПржХржмрж╛рж░ static_cast ржжрж┐ржпрж╝рзЗ ржЖрж░ ржПржХржмрж╛рж░ ржЫрж╛ржбрж╝рж╛ тАФ рждрж╛рждрзЗ ржкрж╛рж░рзНржержХрзНржп ржкрж░рж┐рж╖рзНржХрж╛рж░ рж╣ржмрзЗред ржмрж▓рж▓рзЗржЗ ржХрж░рзЗ ржжрж┐ржЪрзНржЫрж┐!
 For this exa:
--------------
  Example 2:

Input: nums1 = [10], nums2 = [5]

Output: -5

Explanation:

The integer added to each element of nums1 is -5.
   size 1 
  tai 5-10=-5
  So,
  if(nums1.size()==1&&nums2.size()==1)
        {
            ans=nums2[0]-nums1[0];
        }

Full Code:
-----------
  class Solution 
{
public:
    int addedInteger(vector<int>& nums1, vector<int>& nums2) 
    {
        sort(nums1.begin(),nums1.end());
        sort(nums2.begin(),nums2.end());
        int ans;
        vector<int>result;
        if(nums1.size()==1&&nums2.size()==1)
        {
            ans=nums2[0]-nums1[0];
        }
          int sum1=0;
          int sum2=0;
          if(nums1.size()>1&&nums2.size()>1)
          {
          if(nums1.size()==nums2.size())
          {
          for(int i=0;i<nums1.size();i++)
          {
            sum1+=nums1[i];
          }
          for(int j=0;j<nums2.size();j++)
          {
            sum2+=nums2[j];
          }
          int result=sum2-sum1;
          ans=result/static_cast<int>(nums1.size());
        //ans=result/(nums1.size());
          }
          }
          return ans;
          
    }
};
