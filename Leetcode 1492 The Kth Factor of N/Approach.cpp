üî∂ ‡¶™‡ßç‡¶∞‡¶∂‡ßç‡¶® ‡¶¨‡¶ø‡¶∂‡ßç‡¶≤‡ßá‡¶∑‡¶£ (Problem Analysis):

‡¶Ü‡¶™‡¶®‡¶æ‡¶ï‡ßá ‡¶è‡¶ï‡¶ü‡¶ø ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ n ‡¶è‡¶¨‡¶Ç ‡¶è‡¶ï‡¶ü‡¶ø ‡¶ß‡¶®‡¶æ‡¶§‡ßç‡¶Æ‡¶ï ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ k ‡¶¶‡ßá‡¶ì‡ßü‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá‡•§
‡¶ö‡¶æ‡¶ì‡ßü‡¶æ ‡¶π‡¶ö‡ßç‡¶õ‡ßá: n ‡¶è‡¶∞ factors ‡¶ó‡ßÅ‡¶≤‡ßã ‡¶®‡¶ø‡ßü‡ßá ‡¶è‡¶ï‡¶ü‡¶æ ascending sorted list ‡¶¨‡¶æ‡¶®‡¶æ‡¶®, ‡¶è‡¶∞‡¶™‡¶∞ k-th factor (‡¶Æ‡¶æ‡¶®‡ßá k-‡¶§‡¶Æ ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ‡¶ü‡¶ø) ‡¶¨‡ßá‡¶∞ ‡¶ï‡¶∞‡ßÅ‡¶®‡•§
‡¶Ø‡¶¶‡¶ø total factor ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ k-‡¶∞ ‡¶ö‡ßá‡ßü‡ßá ‡¶ï‡¶Æ ‡¶π‡ßü, ‡¶§‡¶æ‡¶π‡¶≤‡ßá -1 return ‡¶ï‡¶∞‡¶§‡ßá ‡¶π‡¶¨‡ßá‡•§

‡¶â‡¶¶‡¶æ‡¶π‡¶∞‡¶£:

n = 12 ‡¶π‡¶≤‡ßá, factors: [1, 2, 3, 4, 6, 12]
‡¶Ø‡¶¶‡¶ø k = 3 ‡¶π‡ßü ‚û§ ‡ß©‡ßü ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ‡¶ü‡¶ø 3 ‚Üí output = 3

n = 7, k = 2 ‚û§ factors: [1, 7] ‚Üí ‡ß®‡ßü ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ‡¶ü‡¶ø 7

n = 4, k = 4 ‚û§ factors: [1, 2, 4] ‚Üí ‡ß™‡¶ü‡¶ø ‡¶®‡ßá‡¶á, ‡¶§‡¶æ‡¶á output = -1



---

üî∂ ‡¶∏‡¶Æ‡¶æ‡¶ß‡¶æ‡¶® ‡¶≠‡¶æ‡¶¨‡¶®‡¶æ (How to think the solution):

Step by step ‡¶ö‡¶ø‡¶®‡ßç‡¶§‡¶æ:

1. ‡¶Ü‡¶Æ‡¶∞‡¶æ ‡¶ú‡¶æ‡¶®‡¶ø ‡¶ï‡ßã‡¶® ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ n ‡¶è‡¶∞ factor ‡¶§‡¶ñ‡¶®‡¶á ‡¶π‡ßü ‡¶Ø‡¶ñ‡¶® n % i == 0 ‡¶π‡ßü (‡¶Æ‡¶æ‡¶®‡ßá n ‡¶ï‡ßá i ‡¶¶‡¶ø‡ßü‡ßá ‡¶≠‡¶æ‡¶ó ‡¶ï‡¶∞‡¶≤‡ßá ‡¶≠‡¶æ‡¶ó‡¶∂‡ßá‡¶∑ 0 ‡¶π‡ßü)‡•§


2. ‡¶§‡¶æ‡¶á ‡¶Ü‡¶Æ‡¶∞‡¶æ i = 1 ‡¶•‡ßá‡¶ï‡ßá n ‡¶™‡¶∞‡ßç‡¶Ø‡¶®‡ßç‡¶§ ‡¶™‡ßç‡¶∞‡¶§‡¶ø‡¶ü‡¶ø ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ‡ßü ‡¶ö‡ßá‡¶ï ‡¶ï‡¶∞‡¶¨‡ßã n % i == 0 ‡¶ï‡¶ø‡¶®‡¶æ‡•§


3. ‡¶Ø‡¶¶‡¶ø ‡¶π‡ßü, ‡¶§‡¶æ‡¶π‡¶≤‡ßá ‡¶Ü‡¶Æ‡¶∞‡¶æ ‡¶∏‡ßá‡¶á factor ‡¶ü‡¶æ‡¶ï‡ßá count ‡¶ï‡¶∞‡¶¨‡ßã (‡¶ß‡¶∞‡¶ø count ‡¶®‡¶æ‡¶Æ‡¶ï ‡¶≠‡ßá‡¶∞‡¶ø‡ßü‡ßá‡¶¨‡¶≤‡ßá count ‡¶∞‡¶æ‡¶ñ‡¶õ‡¶ø)‡•§


4. ‡¶Ø‡¶¶‡¶ø ‡¶ï‡¶ñ‡¶®‡ßã count == k ‡¶π‡ßü‡ßá ‡¶Ø‡¶æ‡ßü ‚û§ ‡¶Æ‡¶æ‡¶®‡ßá ‡¶Ü‡¶Æ‡¶∞‡¶æ k-‡¶§‡¶Æ factor ‡¶™‡ßá‡ßü‡ßá ‡¶ó‡ßá‡¶õ‡¶ø ‚û§ ‡¶§‡¶ñ‡¶® ‡¶∏‡ßá‡¶ü‡¶æ‡¶á return ‡¶ï‡¶∞‡¶¨‡ßã‡•§


5. ‡¶Ø‡¶¶‡¶ø count < k ‡¶π‡ßü ‡¶™‡ßÅ‡¶∞‡ßã ‡¶≤‡ßÅ‡¶™ ‡¶∂‡ßá‡¶∑‡ßá ‚û§ return -1;




---

üî∂ ‡¶ï‡ßã‡¶° ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ñ‡ßç‡¶Ø‡¶æ (Code Explanation Line by Line in Bangla):

class Solution 
{
public:
    int kthFactor(int n, int k) 
    {
        int ans = -1;         // ‡¶∂‡ßÅ‡¶∞‡ßÅ‡¶§‡ßá ‡¶ß‡¶∞‡ßá ‡¶®‡¶ø‡¶á k-th factor ‡¶®‡ßá‡¶á, ‡¶§‡¶æ‡¶á ans = -1
        int count = 0;        // ‡¶ï‡¶§‡¶ü‡¶ø factor ‡¶è‡¶ñ‡¶® ‡¶™‡¶∞‡ßç‡¶Ø‡¶®‡ßç‡¶§ ‡¶™‡ßá‡ßü‡ßá‡¶õ‡¶ø, ‡¶§‡¶æ‡¶∞ ‡¶π‡¶ø‡¶∏‡¶æ‡¶¨ ‡¶∞‡¶æ‡¶ñ‡¶¨‡ßá

        for (int i = 1; i <= n; i++)   // 1 ‡¶•‡ßá‡¶ï‡ßá n ‡¶™‡¶∞‡ßç‡¶Ø‡¶®‡ßç‡¶§ ‡¶∏‡¶¨ ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ ‡¶ò‡ßÅ‡¶∞‡ßá ‡¶¶‡ßá‡¶ñ‡¶¨‡ßã
        {
            if (n % i == 0)           // ‡¶Ø‡¶¶‡¶ø i ‡¶¶‡ßç‡¶¨‡¶æ‡¶∞‡¶æ n ‡¶≠‡¶æ‡¶ó ‡¶Ø‡¶æ‡ßü ‚û§ factor ‡¶™‡¶æ‡¶ì‡ßü‡¶æ ‡¶ó‡ßá‡¶≤
            {
                count++;              // ‡¶è‡¶ï‡¶ü‡¶æ ‡¶®‡¶§‡ßÅ‡¶® factor ‡¶™‡¶æ‡¶ì‡ßü‡¶æ ‡¶ó‡ßá‡¶≤, ‡¶§‡¶æ‡¶á count ‡¶¨‡¶æ‡ßú‡¶æ‡¶≤‡¶æ‡¶Æ

                if (count == k)       // ‡¶Ø‡¶¶‡¶ø ‡¶è‡¶ñ‡¶® ‡¶™‡¶æ‡¶ì‡ßü‡¶æ ‡¶ó‡ßç‡¶Ø‡¶æ‡¶õ‡ßá k-‡¶§‡¶Æ factor
                {
                    ans = i;          // ‡¶è‡¶á i ‡¶á k-‡¶§‡¶Æ factor
                    break;            // ‡¶è‡¶ñ‡¶® ‡¶Ü‡¶∞ ‡¶ñ‡ßã‡¶Å‡¶ú‡¶æ‡¶∞ ‡¶¶‡¶∞‡¶ï‡¶æ‡¶∞ ‡¶®‡¶æ‡¶á ‚û§ break
                }
            }
        }
        return ans;                   // loop ‡¶∂‡ßá‡¶∑‡ßá ans return ‡¶ï‡¶∞‡¶¨‡ßã (‡¶ï‡¶ø‡¶Ç‡¶¨‡¶æ -1)
    }
};


---

üî∂ ‡¶ü‡ßá‡¶∏‡ßç‡¶ü ‡¶ï‡ßá‡¶∏ ‡¶¨‡¶ø‡¶∂‡ßç‡¶≤‡ßá‡¶∑‡¶£ (Test Case Explanation in Bangla):

‚úÖ ‡¶â‡¶¶‡¶æ‡¶π‡¶∞‡¶£ 1:

Input: n = 12, k = 3

12 ‡¶è‡¶∞ factors:

1 (12%1==0) ‚Üí count = 1

2 (12%2==0) ‚Üí count = 2

3 (12%3==0) ‚Üí count = 3 ‚Üí k = 3 ‡¶™‡¶æ‡¶ì‡ßü‡¶æ ‡¶ó‡ßç‡¶Ø‡¶æ‡¶õ‡ßá ‚Üí return 3



‚úÖ ‡¶â‡¶¶‡¶æ‡¶π‡¶∞‡¶£ 2:

Input: n = 7, k = 2

7 ‡¶è‡¶∞ factors:

1 ‚Üí count = 1

2,3,4,5,6 ‚Üí ‡¶≠‡¶æ‡¶ó ‡¶Ø‡¶æ‡ßü ‡¶®‡¶æ

7 ‚Üí count = 2 ‚Üí k=2 ‡¶™‡¶æ‡¶ì‡ßü‡¶æ ‡¶ó‡ßç‡¶Ø‡¶æ‡¶õ‡ßá ‚Üí return 7



‚úÖ ‡¶â‡¶¶‡¶æ‡¶π‡¶∞‡¶£ 3:

Input: n = 4, k = 4

4 ‡¶è‡¶∞ factors:

1 ‚Üí count = 1

2 ‚Üí count = 2

4 ‚Üí count = 3
‚û§ ‡¶Ü‡¶∞ ‡¶ï‡¶ø‡¶õ‡ßÅ ‡¶®‡ßá‡¶á ‚û§ count < k ‚û§ return -1




---

üî∂ ‡¶∏‡¶Æ‡ßü ‡¶ú‡¶ü‡¶ø‡¶≤‡¶§‡¶æ (Time Complexity):

‡¶Ü‡¶Æ‡¶∞‡¶æ 1 ‡¶•‡ßá‡¶ï‡ßá n ‡¶™‡¶∞‡ßç‡¶Ø‡¶®‡ßç‡¶§ i ‡¶ò‡ßÅ‡¶∞‡¶æ‡¶ö‡ßç‡¶õ‡¶ø
‚û§ ‡¶§‡¶æ‡¶á Time Complexity: O(n)

‡¶Ö‡¶§‡¶ø‡¶∞‡¶ø‡¶ï‡ßç‡¶§ ‡¶ï‡ßã‡¶® ‡¶ú‡¶æ‡ßü‡¶ó‡¶æ ‡¶®‡¶ø‡¶ö‡ßç‡¶õ‡¶ø ‡¶®‡¶æ
‚û§ Space Complexity: O(1)


Full Code:
--------------

  class Solution 
{
public:
    int kthFactor(int n, int k) 
    {
        int ans=-1;
        int count=0;
        for(int i=1;i<=n;i++)
            {
                if(n%i==0)
                {
                    count++;
                    if(count==k)
                    {
                        ans=i;
                        break;
                    }
                }
            }
        return ans;
    }
};
