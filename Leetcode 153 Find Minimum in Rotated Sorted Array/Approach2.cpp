ЁЯФ╣ Problem ржЖржмрж╛рж░ ржжрзЗржЦрж╛ ржпрж╛ржХ

ржЖржорж╛ржжрзЗрж░ ржХрж╛ржЫрзЗ ржПржХржЯрж╛ sorted ascending array ржЖржЫрзЗ ржпрзЗржЯрж╛ rotate ржХрж░рж╛ рж╣рзЯрзЗржЫрзЗред
ржЖржорж╛ржжрзЗрж░ target тЖТ рж╕рзЗржЗ array ржерзЗржХрзЗ minimum element ржЦрзБржБржЬрзЗ ржмрзЗрж░ ржХрж░рж╛ред
рж╢рж░рзНржд тЖТ Time Complexity рж╣рждрзЗ рж╣ржмрзЗ O(log n)ред

ЁЯСЙ ржПржЗ O(log n) ржжрзЗржЦрзЗ рж╕ржЩрзНржЧрзЗ рж╕ржЩрзНржЧрзЗржЗ ржорж╛ржерж╛рзЯ ржЖрж╕рждрзЗ рж╣ржмрзЗ тЖТ ржПржЦрж╛ржирзЗ Binary Search ржЗржЙржЬ ржХрж░рждрзЗ рж╣ржмрзЗред

ЁЯФ╣ Rotate рж╣ржУрзЯрж╛рж░ ржкрж░ array ржХрзЗржоржи рж╣рзЯ?

ржпржжрж┐ array [0,1,2,4,5,6,7] rotate ржХрж░рж┐ 4 ржмрж╛рж░:
тЮбя╕П [4,5,6,7,0,1,2]

ржПржЦрж╛ржирзЗ рж▓ржХрзНрж╖рзНржп ржХрж░рзЛ:

ржПржХржжрж┐ржХрзЗ ржмрзЬ рж╕ржВржЦрзНржпрж╛ржЧрзБрж▓рзЛ тЖТ [4,5,6,7]

ржЖрж░рзЗржХржжрж┐ржХрзЗ ржЫрзЛржЯ рж╕ржВржЦрзНржпрж╛ржЧрзБрж▓рзЛ тЖТ [0,1,2]

ржЖрж░ minimum element рж╕ржмрж╕ржорзЯ second part-ржПрж░ рж╢рзБрж░рзБрждрзЗ ржерж╛ржХрзЗред

ржорж╛ржирзЗ rotate ржХрж░рж╛рж░ ржкрж░ array ржжрзЗржЦрждрзЗ рж╣ржмрзЗ:
[sorted ржмрзЬ рж╕ржВржЦрзНржпрж╛] + [sorted ржЫрзЛржЯ рж╕ржВржЦрзНржпрж╛]

ЁЯФ╣ ржЖржорж╛ржжрзЗрж░ рж▓ржХрзНрж╖рзНржп

ржЖржорж╛ржжрзЗрж░ binary search ржжрж┐рзЯрзЗ minimum element (rotation point) ржмрзЗрж░ ржХрж░рждрзЗ рж╣ржмрзЗред

ЁЯФ╣ Binary Search ржХрзМрж╢рж▓ (Step by Step)

ржЖржорж░рж╛ ржзрж░ржм:

low = 0
high = n-1


ржкрзНрж░рждрж┐ржмрж╛рж░ mid ржмрзЗрж░ ржХрж░ржм:

mid = low + (high - low) / 2


ржПржЦржи nums[mid] ржЖрж░ nums[high] compare ржХрж░ржмрзЛред

тЬЕ Case 1: ржпржжрж┐ nums[mid] < nums[high]

ржорж╛ржирзЗ тЖТ mid ржерзЗржХрзЗ high ржкрж░рзНржпржирзНржд ржЕржВрж╢ sortedред
рждрж╛рж╣рж▓рзЗ minimum mid ржмрж╛ рждрж╛рж░ ржмрж╛ржБржжрж┐ржХрзЗ ржЖржЫрзЗред
ЁЯСЙ рждрж╛ржЗ high = mid

тЬЕ Case 2: ржпржжрж┐ nums[mid] > nums[high]

ржорж╛ржирзЗ тЖТ mid ржПрж░ ржбрж╛ржиржжрж┐ржХрзЗ unsorted ржЖржЫрзЗ, ржЖрж░ minimum рж╕ржмрж╕ржорзЯ unsorted ржЕржВрж╢рзЗржЗ ржерж╛ржХрзЗред
ЁЯСЙ рждрж╛ржЗ low = mid + 1

тЬЕ Case 3: ржпржжрж┐ nums[mid] == nums[high]

(ржПржЗ problem-ржП рж╕ржм element unique, рждрж╛ржЗ ржЖрж╕рж▓рзЗ ржПржЗ case ржЖрж╕ржмрзЗ ржирж╛ред рждржмрзБржУ safe рж░рж╛ржЦрж╛рж░ ржЬржирзНржп high-- ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж╛ рж╣рзЯ)ред

ЁЯФ╣ Stopping Condition

ржпржЦржи low == high, рждржЦржи ржЖржорж░рж╛ minimum element ржкрзЗрзЯрзЗ ржЧрзЗржЫрж┐ред
ЁЯСЙ return nums[low]

ЁЯФ╣ Example ржжрж┐рзЯрзЗ Range Update ржмрзЛржЭрж╛ржирзЛ
Example 1: nums = [3,4,5,1,2]
low=0, high=4
mid=2 тЖТ nums[mid]=5, nums[high]=2
5 > 2 тЖТ low = mid+1 = 3


ржПржЦржи range тЖТ [3,4] тЖТ ржЕрж░рзНржерж╛рзО [1,2]

low=3, high=4
mid=3 тЖТ nums[mid]=1, nums[high]=2
1 < 2 тЖТ high = mid = 3


ржПржЦржи low=3, high=3 тЖТ loop рж╢рзЗрж╖
ЁЯСЙ minimum = nums[3] = 1 тЬЕ

Example 2: nums = [4,5,6,7,0,1,2]
low=0, high=6
mid=3 тЖТ nums[mid]=7, nums[high]=2
7 > 2 тЖТ low = mid+1 = 4


ржПржЦржи range тЖТ [4,6] тЖТ ржЕрж░рзНржерж╛рзО [0,1,2]

low=4, high=6
mid=5 тЖТ nums[mid]=1, nums[high]=2
1 < 2 тЖТ high = mid = 5


ржПржЦржи range тЖТ [4,5] тЖТ ржЕрж░рзНржерж╛рзО [0,1]

low=4, high=5
mid=4 тЖТ nums[mid]=0, nums[high]=1
0 < 1 тЖТ high = mid = 4


ржПржЦржи low=4, high=4 тЖТ stop
ЁЯСЙ minimum = nums[4] = 0 тЬЕ

Example 3: nums = [11,13,15,17]
low=0, high=3
mid=1 тЖТ nums[mid]=13, nums[high]=17
13 < 17 тЖТ high = mid = 1


ржПржЦржи range тЖТ [0,1]

low=0, high=1
mid=0 тЖТ nums[mid]=11, nums[high]=13
11 < 13 тЖТ high = mid = 0


low=0, high=0 тЖТ stop
ЁЯСЙ minimum = nums[0] = 11 тЬЕ

ЁЯФ╣ Technique Used

ЁЯСЙ Modified Binary Search

рж╕рж╛ржзрж╛рж░ржг binary search-ржП ржЖржорж░рж╛ ржПржХржЯрж╛ fixed target ржЦрзБржБржЬрж┐ред

ржПржЦрж╛ржирзЗ ржЖржорж╛ржжрзЗрж░ target рж╣рж▓рзЛ minimum element, рждрж╛ржЗ ржЖржорж░рж╛ range update ржХрж░ржЫрж┐ mid ржЖрж░ high ржПрж░ relation ржжрж┐рзЯрзЗред

ЁЯФ╣ Math ржжрж┐рзЯрзЗ ржмрзЛржЭрж╛ржирзЛ

ржзрж░рж┐ array length n, rotate ржХрж░рж▓рзЗ minimum element рж╕ржмрж╕ржорзЯ rotation index (k) рждрзЗ ржерж╛ржХржмрзЗред

тЮбя╕П ржЖржорж╛ржжрзЗрж░ ржХрж╛ржЬ рж╣рж▓рзЛ k ржмрзЗрж░ ржХрж░рж╛ред
Binary search ржжрж┐рзЯрзЗ ржЖржорж░рж╛ ржкрзНрж░рждрж┐ step-ржП search space ржХрзЗ half (n/2) ржХрж░рзЗ ржлрзЗрж▓ржЫрж┐ред

рждрж╛рж╣рж▓рзЗ complexity:

ржорж╛ржирзЗ тЖТ mid ржерзЗржХрзЗ high ржкрж░рзНржпржирзНржд ржЕржВрж╢ sortedред
рждрж╛рж╣рж▓рзЗ minimum mid ржмрж╛ рждрж╛рж░ ржмрж╛ржБржжрж┐ржХрзЗ ржЖржЫрзЗред
ЁЯСЙ рждрж╛ржЗ high = mid how by example bangla
ChatGPT said:

ржЦрзБржм ржнрж╛рж▓рзЛ ржзрж░рзЗржЫрзЛ ЁЯСН
ржЪрж▓ ржПржмрж╛рж░ Case 1 тАУ
ЁЯСЙ ржпржЦржи nums[mid] < nums[high], рждржЦржи ржЖржорж░рж╛ ржХрзЗржи high = mid ржХрж░рж┐ рж╕рзЗржЯрж╛ ржПржХржЯрж╛ example ржжрж┐рзЯрзЗ ржмрж┐рж╕рзНрждрж╛рж░рж┐ржд ржмрзЛржЭрж╛ржЗред

ЁЯОп Example: nums = [4,5,6,7,0,1,2]

ржзрж░рж┐,

low = 0 тЖТ nums[low] = 4
high = 6 тЖТ nums[high] = 2
mid = (0+6)/2 = 3 тЖТ nums[mid] = 7


ржПржЦржи ржжрзЗржЦрж╛ ржпрж╛ржЪрзНржЫрзЗ:

nums[mid] = 7, nums[high] = 2
7 > 2   тЬЕ


ЁЯСЙ рждрж╛рж╣рж▓рзЗ ржЖржорж░рж╛ ржЬрж╛ржирж┐ minimum mid ржПрж░ ржбрж╛ржиржжрж┐ржХрзЗ ржЖржЫрзЗ (ржПржЯрж╛ Case 2, рждрж╛ржЗ low=mid+1)ред

ЁЯОп ржПржмрж╛рж░ ржзрж░рзЛ nums = [2,3,4,5,6,7,8]

ржзрж░рж┐,

low = 0 тЖТ nums[low] = 2
high = 6 тЖТ nums[high] = 8
mid = 3 тЖТ nums[mid] = 5


ржПржЦржи compare ржХрж░рж┐:

nums[mid] = 5, nums[high] = 8
5 < 8   тЬЕ


ЁЯСЙ ржорж╛ржирзЗ mid ржерзЗржХрзЗ high ржкрж░рзНржпржирзНржд ржЕржВрж╢ [5,6,7,8] already sortedред
ржПржЗ sorted ржЕржВрж╢рзЗ minimum ржерж╛ржХрждрзЗ ржкрж╛рж░рзЗ ржирж╛, ржХрж╛рж░ржг minimum рж╕ржмрж╕ржорзЯ left part-ржП ржерж╛ржХрзЗред

рждрж╛рж╣рж▓рзЗ ржЖржорж╛ржжрзЗрж░ ржЦрзБржБржЬрждрзЗ рж╣ржмрзЗ:

рж╣ржпрж╝ mid ржирж┐ржЬрзЗржЗ minimum (ржпржжрж┐ array rotate ржирж╛ ржХрж░рж╛ ржерж╛ржХрзЗ),

ржиржпрж╝ mid ржПрж░ ржмрж╛ржБржжрж┐ржХрзЗ minimum ржЖржЫрзЗред

ЁЯСЙ рждрж╛ржЗ ржЖржорж░рж╛ search space ржЫрзЛржЯ ржХрж░рзЗ ржжрзЗржЗ:

high = mid

ЁЯОп ржЖрж░рзЗржХржЯрж╛ Example: nums = [3,4,5,1,2]

ржзрж░рж┐,

low = 0 тЖТ nums[low] = 3
high = 4 тЖТ nums[high] = 2
mid = 2 тЖТ nums[mid] = 5


Compare:

nums[mid] = 5, nums[high] = 2
5 > 2 тЖТ Case 2 тЖТ low=mid+1=3


ржПржЦржи range [1,2]

low=3, high=4
mid=3 тЖТ nums[mid]=1, nums[high]=2
1 < 2 тЬЕ


ржПржЦржи ржмрзЛржЭрж╛ ржпрж╛ржЪрзНржЫрзЗ mid ржерзЗржХрзЗ high (1,2) ржЕржВрж╢ sortedред
ЁЯСЙ Minimum рж╣рзЯ mid (1), ржирзЯржд рждрж╛рж░ ржмрж╛ржБржжрж┐ржХрзЗред
рждрж╛ржЗ high=mid=3

рж╢рзЗрж╖рзЗ low=3, high=3 тЖТ answer = 1 тЬЕ

ЁЯФС Key Idea (Bangla)

ржпржжрж┐ nums[mid] < nums[high] рж╣рзЯ
ЁЯСЙ рждрж╛рж╣рж▓рзЗ ржмрзЛржЭрж╛рзЯ mid ржерзЗржХрзЗ high ржЕржВрж╢ sortedред
ЁЯСЙ sorted ржЕржВрж╢рзЗ minimum ржирзЗржЗ (рж╢рзБржзрзБ ржПржХржорж╛рждрзНрж░ exception тАУ mid ржирж┐ржЬрзЗржЗ рж╣рждрзЗ ржкрж╛рж░рзЗ)ред
ЁЯСЙ рждрж╛ржЗ ржЖржорж░рж╛ high=mid ржХрж░рж┐ тЖТ ржпрзЗржирзЛ ржмрж╛ржБржжрж┐ржХржЯрж╛рзЯ search рж╣рзЯред
Reccurance Relation:
---------------------

  T(n) = T(n/2) + O(1)
=> T(n) = O(log n)

  
Full Code:
----------

  class Solution 
{
public:
    int findMin(vector<int>& nums)
{
    int low=0;
        int high=nums.size()-1;
        while(low<=high)
        {
            int mid=low+(high-low)/2;
            if(nums[mid]<nums[high])
            {
               high=mid;
            }
           else  if(nums[mid]>nums[high])
            {
              low=mid+1;
            }
            else
            {
                high--;
            }
        }
        return nums[low];
    }
};

