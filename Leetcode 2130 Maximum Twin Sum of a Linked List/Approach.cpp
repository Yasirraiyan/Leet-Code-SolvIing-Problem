тЬЕ ЁЯФО ржзрж╛ржк 1: ржкрзНрж░рж╢рзНржи ржмрзЛржЭрж╛ (What is Twin Sum?)

ржкрзНрж░рж╢рзНржирзЗ ржмрж▓рж╛ рж╣рзЯрзЗржЫрзЗ:

рждрзЛржорж╛ржХрзЗ ржПржХржЯрж┐ рж▓рж┐ржВржХржб рж▓рж┐рж╕рзНржЯ ржжрзЗржУрзЯрж╛ рж╣ржмрзЗ ржпрж╛рж░ рж╕рж╛ржЗржЬ n, ржПржмржВ n even (рж╕ржо рж╕ржВржЦрзНржпрж╛) рж╣ржмрзЗред

0-indexed рж╣рж┐рж╕рзЗржмрзЗ i рждржо ржирзЛржб ржПрж░ twin рж╣ржЪрзНржЫрзЗ (n - 1 - i) рждржо ржирзЛржбред

ржпрзЗржоржи:

ржпржжрж┐ рж▓рж┐рж╕рзНржЯ рж╣рзЯ [5, 4, 2, 1], рждрж╛рж╣рж▓рзЗ:

0 рждржо ржирзЛржб = 5

3 рждржо ржирзЛржб = 1

тЖТ Twin sum = 5 + 1 = 6

1 рждржо ржирзЛржб = 4

2 рждржо ржирзЛржб = 2

тЖТ Twin sum = 4 + 2 = 6


рж╕ржмржЧрзБрж▓рзЛрж░ ржоржзрзНржпрзЗ ржорзНржпрж╛ржХрзНрж╕рж┐ржорж╛ржо ржЯрзБржЗржи рж╕рж╛ржо = 6ред




---

тЬЕ ЁЯза ржХрж┐ржнрж╛ржмрзЗ ржЪрж┐ржирзНрждрж╛ ржХрж░ржмрзЗ?

ржкрзНрж░ржержорзЗржЗ ржнрж╛ржмрзЛ:

Twin ржирзЛржб ржорж╛ржирзЗ ржПржХржЯрж╛ ржирзЛржб ржЖрж░ рждрж╛рж░ ржмрж┐ржкрж░рзАржд ржкрж╛рж╢рзЗ ржерж╛ржХрж╛ ржирзЛржб (mirror image)ред

ржжрзБржЗ ржкрж╛рж╢рзЗ ржерзЗржХрзЗ ржжрзБржЗржЯрж┐ ржирзЛржб ржирж╛ржУ, ржпрзЛржЧ ржХрж░рзЛ, рж╕рзЗржЧрзБрж▓рзЛрж░ ржоржзрзНржпрзЗ ржпрзЗржЯрж╛ рж╕ржмржЪрзЗрзЯрзЗ ржмрзЗрж╢рж┐ рж╕рзЗржЯрж╛ржЗ return ржХрж░рждрзЗ рж╣ржмрзЗред



---

тЬЕ ЁЯзй рж╕ржорж╛ржзрж╛ржи ржХрзМрж╢рж▓ (Approach):

1. ржкрзНрж░ржержорзЗ рж▓рж┐ржВржХржб рж▓рж┐рж╕рзНржЯржХрзЗ ржнрзЗржХрзНржЯрж░рзЗ рж░рзВржкрж╛ржирзНрждрж░ ржХрж░рзЛ (vector<int> v), ржпрж╛рждрзЗ ржХрж░рзЗ index ржжрж┐рзЯрзЗ access ржХрж░рж╛ ржпрж╛рзЯред


2. рждрж╛рж░ржкрж░ ржЯрзБржЗржи рж╣рж┐рж╕рзЗржмрзЗ ржкрзНрж░рждрж┐ i рждржо ржУ n-1-i рждржо ржирзЛржбрзЗрж░ ржпрзЛржЧржлрж▓ ржмрзЗрж░ ржХрж░рзЛред


3. ржкрзНрж░рждрж┐ржЯрж┐ ржпрзЛржЧржлрж▓ vector<int> vv рждрзЗ рж░рзЗржЦрзЗ рж╢рзЗрж╖рзЗ рждрж╛рж░ ржоржзрзНржпрзЗ ржерзЗржХрзЗ рж╕рж░рзНржмрзЛржЪрзНржЪ ржорж╛ржиржЯрж╛ return ржХрж░рзЛред




---

тЬЕ ржХрзЛржб ржмрж┐рж╢рзНрж▓рзЗрж╖ржг ржзрж╛ржкрзЗ ржзрж╛ржкрзЗ:

vector<int> v;
while(head != nullptr)
{
    v.push_back(head->val);
    head = head->next;
}

ЁЯФ╣ ржПржЗ ржЕржВрж╢рзЗ head ржерзЗржХрзЗ рж╕ржм ржирзЛржбрзЗрж░ ржнрзНржпрж╛рж▓рзБ v ржирж╛ржорзЗрж░ ржнрзЗржХрзНржЯрж░рзЗ рж░рж╛ржЦрж╛ рж╣ржЪрзНржЫрзЗред
ЁЯФ╕ ржЙржжрж╛рж╣рж░ржг: head = [4, 2, 2, 3] тЖТ v = [4, 2, 2, 3]


---

vector<int> vv(v.size(), 0);
for(int i = 0; i < v.size(); i++)
{
    vv[i] = v[i] + v[v.size() - i - 1];
}

ЁЯФ╣ ржПржЦрж╛ржирзЗ ржкрзНрж░рждрж┐ржЯрж┐ i рждржо ржЙржкрж╛ржжрж╛ржи ржПрж░ рж╕рж╛ржерзЗ рждрж╛рж░ ржЯрзБржЗржи n-1-i ржпрзЛржЧ ржХрж░рзЗ vv рждрзЗ рж░рж╛ржЦрж╛ рж╣ржЪрзНржЫрзЗред
ЁЯФ╕ ржЙржжрж╛рж╣рж░ржг: vv[0] = v[0] + v[3] = 4 + 3 = 7
vv[1] = v[1] + v[2] = 2 + 2 = 4
vv[2] = v[2] + v[1] = 2 + 2 = 4
vv[3] = v[3] + v[0] = 3 + 4 = 7

ЁЯУМ vv = [7, 4, 4, 7]


---

int findmax(vector<int>& arr)
{
    int max = arr[0];
    for(int j = 1; j < arr.size(); j++)
    {
        if(arr[j] > max)
        {
            max = arr[j];
        }
    }
    return max;
}

ЁЯФ╣ ржПржЗ ржЕржВрж╢рзЗ vv ржПрж░ ржоржзрзНржпрзЗ рж╕рж░рзНржмрзЛржЪрзНржЪ ржорж╛ржиржЯрж┐ ржЦрзБржБржЬрзЗ ржмрзЗрж░ ржХрж░рж╛ рж╣ржЪрзНржЫрзЗред
ЁЯФ╕ max(vv) = 7


---

тЬЕ ЁЯФЪ Return Statement:

int ans = findmax(vv);
return ans;

ЁЯФЪ рждрзБржорж┐ vv ржерзЗржХрзЗ рж╕рж░рзНржмрзЛржЪрзНржЪ Twin Sum ржмрзЗрж░ ржХрж░рзЗ ans рж░рж┐ржЯрж╛рж░рзНржи ржХрж░ржЫрзЛ тАФ ржпрж╛ рж╕ржарж┐ржХ!


---

тЬЕ ржЙржжрж╛рж╣рж░ржг ржжрж┐рзЯрзЗ ржпрж╛ржЪрж╛ржЗ (Test Case):

тЬЕ Test Case 1:

Input: [5, 4, 2, 1]
v = [5, 4, 2, 1]
vv = [5+1=6, 4+2=6, 2+4=6, 1+5=6]
тЖТ max = 6 тЬЕ

тЬЕ Test Case 2:

Input: [4, 2, 2, 3]
v = [4, 2, 2, 3]
vv = [4+3=7, 2+2=4, 2+2=4, 3+4=7]
тЖТ max = 7 тЬЕ

тЬЕ Test Case 3:

Input: [1, 100000]
v = [1, 100000]
vv = [1+100000=100001, 100000+1=100001]
тЖТ max = 100001 тЬЕ


---

тЬЕ ржХрзЗржи ржХрзЛржбржЯрж┐ Accepted рж╣ржЪрзНржЫрзЗ?

Time Complexity: O(n) (ржПржХржмрж╛рж░ рж▓рж┐рж╕рзНржЯ traverse, ржПржХржмрж╛рж░ ржнрзЗржХрзНржЯрж░ loop)

Space Complexity: O(n) (ржнрзЗржХрзНржЯрж░ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж╛ рж╣рзЯрзЗржЫрзЗ)

Problem Constraint ржЕржирзБржпрж╛рзЯрзА: 2 <= n <= 10^5 тАФ ржпрж╛ ржПржЗ complexity ржжрзНржмрж╛рж░рж╛ рж╕рж╣ржЬрзЗржЗ handle рж╣рзЯред


Full Code:
------------
class Solution
{
public:
    int findmax(vector<int>&arr)
    {
        int max=arr[0];
        for(int j=1;j<arr.size();j++)
            {
                if(arr[j]>max)
                {
                    max=arr[j];
                }
            }
        return max;
    }
    int pairSum(ListNode* head) 
    {
        vector<int>v;
        while(head!=nullptr)
            {
                v.push_back(head->val);
                head=head->next;
            }
        vector<int>vv(v.size(),0);
        for(int i=0;i<v.size();i++)
            {
                vv[i]=v[i]+v[v.size()-i-1];
            }
        int ans=findmax(vv);
        return ans;
    }
};
  
