рждрзБржорж┐ ржпрзЗржЗ ржкрзНрж░ржмрж▓рзЗржоржЯрж╛ рж╕рж▓ржн ржХрж░рзЗржЫрзЛ рж╕рзЗржЯрж╛ рж╣рж▓рзЛ:
"Find all elements in an array that appear more than тМКn/3тМЛ times"
ржПржмржВ рждрзБржорж┐ ржпрзЗржЗ ржХрзЛржб ржжрж┐рзЯрзЗржЫрзЛ рждрж╛ рж╕ржарж┐ржХржнрж╛ржмрзЗ ржХрж╛ржЬ ржХрж░рзЗ, ржПржЦржи ржЖржорж┐ ржПрж░ Bangla ржмрзНржпрж╛ржЦрзНржпрж╛ ржирж┐ржЪрзЗ ржжрж┐рж▓рж╛ржо ржпрж╛рждрзЗ рждрзБржорж┐ ржнржмрж┐рж╖рзНржпрждрзЗ ржкрзЬрж▓рзЗ рж╕рж╣ржЬрзЗ ржмрзБржЭрждрзЗ ржкрж╛рж░рзЛред

ЁЯза ржкрзНрж░ржмрж▓рзЗржо ржмрзНржпрж╛ржЦрзНржпрж╛ (In Bangla):
рждрзЛржорж╛ржХрзЗ ржПржХржЯрж╛ nums ржирж╛ржорзЗрж░ integer array ржжрзЗржУрзЯрж╛ ржЖржЫрзЗ ржпрж╛рж░ size nред
рждрзБржорж┐ ржПржоржи рж╕ржм рж╕ржВржЦрзНржпрж╛ржЧрзБрж▓рзЛ ржмрзЗрж░ ржХрж░ржмрзЗ ржпрзЗржЧрзБрж▓рзЛ array-рждрзЗ тМКn/3тМЛ ржПрж░ ржЪрзЗрзЯрзЗ ржмрзЗрж╢рж┐ ржмрж╛рж░ ржПрж╕рзЗржЫрзЗред

ЁЯФ╣ ржЙржжрж╛рж╣рж░ржгрж╕рзНржмрж░рзВржк:

ржпржжрж┐ n = 9, рждрж╛рж╣рж▓рзЗ тМКn/3тМЛ = 3, рждрж╛ржЗ ржПржоржи рж╕ржВржЦрзНржпрж╛ ржмрзЗрж░ ржХрж░рждрзЗ рж╣ржмрзЗ ржпрзЗржЧрзБрж▓рзЛ 3-ржПрж░ ржЪрзЗрзЯрзЗ ржмрзЗрж╢рж┐ ржмрж╛рж░ ржПрж╕рзЗржЫрзЗред

ЁЯФ╣ ржЧрзБрж░рзБрждрзНржмржкрзВрж░рзНржг ржмрж┐рж╖рзЯ:
ржПржХржЯрж┐ array-рждрзЗ рж╕рж░рзНржмрзЛржЪрзНржЪ рзиржЯрж┐ рж╕ржВржЦрзНржпрж╛ ржПржоржи ржерж╛ржХрждрзЗ ржкрж╛рж░рзЗ ржпрзЗржЧрзБрж▓рзЛ тМКn/3тМЛ ржПрж░ ржмрзЗрж╢рж┐ ржмрж╛рж░ ржПрж╕рзЗржЫрзЗред

тЬЕ рждрзЛржорж╛рж░ ржХрзЛржбрзЗрж░ ржмрзНржпрж╛ржЦрзНржпрж╛ (Line by Line - Bangla):
cpp
Copy
Edit
vector<int>ans;
unordered_map<int,int>freq;
ЁЯФ╕ unordered_map ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзЗ ржЖржорж░рж╛ ржкрзНрж░рждрж┐ржЯрж╛ рж╕ржВржЦрзНржпрж╛рж░ frequency count ржХрж░ржЫрж┐ред
ЁЯФ╕ ans vector ржП ржЖржорж░рж╛ ржлрж▓рж╛ржлрж▓ рж░рж╛ржЦржмрзЛред

cpp
Copy
Edit
for(int i=0;i<nums.size();i++)
{
    freq[nums[i]]++;
}
ЁЯФ╕ ржкрзНрж░рждрж┐ржЯрж╛ рж╕ржВржЦрзНржпрж╛ ржирж┐рзЯрзЗ map-ржП рждрж╛рж░ frequency ржмрж╛рзЬрж╛ржирзЛ рж╣ржЪрзНржЫрзЗред
ЁЯФ╕ ржПржЗ loop ржПрж░ рж╢рзЗрж╖рзЗ ржЖржорж╛ржжрзЗрж░ рж╣рж╛рждрзЗ ржПржХржЯрж╛ map ржерж╛ржХржмрзЗ: number тЖТ frequency

cpp
Copy
Edit
int n=nums.size();
for(auto it:freq)
{
    if(it.second > n/3)
    {
        ans.push_back(it.first);
    }
}
ЁЯФ╕ n ржХрзЗ ржжрж┐рзЯрзЗ n/3 ржмрзЗрж░ ржХрж░ржЫрж┐ред
ЁЯФ╕ рждрж╛рж░ржкрж░ map ржерзЗржХрзЗ ржпрзЗрж╕ржм рж╕ржВржЦрзНржпрж╛рж░ frequency n/3 ржПрж░ ржЪрзЗрзЯрзЗ ржмрзЗрж╢рж┐, рж╕рзЗржЧрзБрж▓рзЛржХрзЗ ans-ржП рж░рж╛ржЦржЫрж┐ред

cpp
Copy
Edit
return ans;
ЁЯФ╕ рж╢рзЗрж╖рзЗ рж╕рзЗржЗ рж╕ржм рж╕ржВржЦрзНржпрж╛рж░ list return ржХрж░ржЫрж┐ред

ЁЯзк ржЙржжрж╛рж╣рж░ржг ржжрж┐рзЯрзЗ ржмрзЛржЭрж╛ржирзЛ:
ржЙржжрж╛рж╣рж░ржг 1:
cpp
Copy
Edit
Input: nums = [3,2,3]
Step 1: freq = {3: 2, 2: 1}
n = 3 тЖТ n/3 = 1
Step 2: 3 has freq 2 тЖТ > 1 тЬЕ тЖТ ans = [3]
Output: [3]
ржЙржжрж╛рж╣рж░ржг 2:
cpp
Copy
Edit
Input: nums = [1]
Step 1: freq = {1: 1}
n = 1 тЖТ n/3 = 0
Step 2: 1 has freq 1 > 0 тЬЕ тЖТ ans = [1]
Output: [1]
ржЙржжрж╛рж╣рж░ржг 3:
cpp
Copy
Edit
Input: nums = [1, 2]
Step 1: freq = {1: 1, 2: 1}
n = 2 тЖТ n/3 = 0
Step 2: both freq > 0 тЖТ ans = [1, 2]
Output: [1, 2]
тП▒я╕П Time & Space Complexity:
тЬЕ Time Complexity: O(n)

тЭМ Space Complexity: O(n) (map ржЗржЙржЬ ржХрж░рж╛рж░ ржХрж╛рж░ржгрзЗ)

ЁЯОп 
