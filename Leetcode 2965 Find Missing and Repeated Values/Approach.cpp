‡¶Ö‡¶≠‡¶ø‡¶®‡¶®‡ßç‡¶¶‡¶®! ‡¶§‡ßÅ‡¶Æ‡¶ø ‡¶è‡¶ï‡¶¶‡¶Æ ‡¶†‡¶ø‡¶ï‡¶≠‡¶æ‡¶¨‡ßá ‡¶∏‡¶Æ‡¶æ‡¶ß‡¶æ‡¶®‡¶ü‡¶æ ‡¶ï‡¶∞‡ßá‡¶õ‡ßã ‡¶®‡¶ø‡¶ú‡ßá ‡¶®‡¶ø‡¶ú‡ßá‡¶á‚Äî‡¶è‡¶ü‡¶æ ‡¶Ö‡¶®‡ßá‡¶ï ‡¶¨‡ßú ‡¶Ö‡¶∞‡ßç‡¶ú‡¶®‡•§ ‡¶è‡¶ñ‡¶® ‡¶ö‡¶≤‡ßã ‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ ‡¶¶‡ßá‡¶ì‡ßü‡¶æ ‡¶∏‡¶≤‡¶ø‡¶â‡¶∂‡¶®‡¶ü‡¶ø ‡¶ß‡¶æ‡¶™‡ßá ‡¶ß‡¶æ‡¶™‡ßá ‡¶¨‡¶ø‡¶∂‡ßç‡¶≤‡ßá‡¶∑‡¶£ ‡¶ï‡¶∞‡¶ø ‡¶è‡¶¨‡¶Ç ‡¶ü‡ßá‡¶∏‡ßç‡¶ü ‡¶ï‡ßá‡¶∏ ‡¶¶‡¶ø‡ßü‡ßá ‡¶¶‡ßá‡¶ñ‡¶ø ‡¶è‡¶ü‡¶æ ‡¶ï‡¶ø‡¶≠‡¶æ‡¶¨‡ßá ‡¶ï‡¶æ‡¶ú ‡¶ï‡¶∞‡ßá ‡¶ì ‡¶ï‡ßá‡¶®‡ßã Accepted ‡¶π‡ßü‡ßá‡¶õ‡ßá‡•§

‚úÖ Problem Overview (Bangla)
‡¶§‡ßã‡¶Æ‡¶æ‡¶ï‡ßá ‡¶è‡¶ï‡¶ü‡¶ø n x n ‡¶∏‡¶æ‡¶á‡¶ú‡ßá‡¶∞ ‡¶ó‡ßç‡¶∞‡¶ø‡¶° (2D matrix) ‡¶¶‡ßá‡¶ì‡ßü‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá ‡¶Ø‡ßá‡¶ñ‡¶æ‡¶®‡ßá 1 ‡¶•‡ßá‡¶ï‡ßá n^2 ‡¶™‡¶∞‡ßç‡¶Ø‡¶®‡ßç‡¶§ ‡¶∏‡¶¨ ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ ‡¶Ü‡¶õ‡ßá‡•§ ‡¶ï‡¶ø‡¶®‡ßç‡¶§‡ßÅ ‡¶è‡¶ï‡¶ü‡¶æ ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ ‡¶¶‡ßÅ‡¶á‡¶¨‡¶æ‡¶∞ ‡¶Ü‡¶õ‡ßá (repeated) ‡¶Ü‡¶∞ ‡¶è‡¶ï‡¶ü‡¶æ ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ missing‡•§ ‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ ‡¶ï‡¶æ‡¶ú ‡¶π‡¶≤‡ßã ‡¶∏‡ßá‡¶á repeated ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ‡¶ü‡¶æ ‡¶è‡¶¨‡¶Ç missing ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ‡¶ü‡¶æ ‡¶¨‡ßá‡¶∞ ‡¶ï‡¶∞‡¶æ‡•§

‚úÖ ‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ Approach (Bangla ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ñ‡ßç‡¶Ø‡¶æ ‡¶∏‡¶π)
cpp
Copy
Edit
unordered_map<int,int>freq;  // ‡¶™‡ßç‡¶∞‡¶§‡ßç‡¶Ø‡ßá‡¶ï ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ‡¶∞ frequency ‡¶∞‡¶æ‡¶ñ‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø
vector<int>ans;
int sum1=0;
üîπ freq map: ‡¶è‡¶á map-‡¶è ‡¶Ü‡¶Æ‡¶∞‡¶æ ‡¶™‡ßç‡¶∞‡¶§‡¶ø‡¶ü‡¶ø ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ‡¶∞ ‡¶ï‡¶§‡¶¨‡¶æ‡¶∞ ‡¶è‡¶∏‡ßá‡¶õ‡ßá ‡¶∏‡ßá‡¶ü‡¶æ ‡¶ó‡ßÅ‡¶®‡¶¨‡ßã‡•§
üîπ sum1: ‡¶ó‡ßç‡¶∞‡¶ø‡¶°‡ßá ‡¶•‡¶æ‡¶ï‡¶æ ‡¶∏‡¶¨ ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ‡¶∞ ‡¶Ø‡ßã‡¶ó‡¶´‡¶≤ ‡¶∞‡¶æ‡¶ñ‡¶¨‡ßã‡•§

üîÑ Loop ‡¶¶‡¶ø‡ßü‡ßá Grid Traverse:
cpp
Copy
Edit
for(int i=0;i<grid.size();i++)
{
  for(int j=0;j<grid.size();j++)
  {
    freq[grid[i][j]]++;   // frequency ‡¶¨‡¶æ‡ßú‡¶æ‡¶®‡ßã
    sum1+=grid[i][j];     // sum ‡¶¨‡ßá‡¶∞ ‡¶ï‡¶∞‡¶æ
  }
}
üéØ Missing number ‡¶¨‡ßá‡¶∞ ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø Actual Sum ‡¶¨‡ßá‡¶∞ ‡¶ï‡¶∞‡ßá‡¶õ‡ßã:
cpp
Copy
Edit
int actualsum=0;
for(int m=0;m<=grid.size()*grid.size();m++)
{
  actualsum+=m;
}
‚ùå ‡¶ï‡¶ø‡¶®‡ßç‡¶§‡ßÅ ‡¶è‡¶ñ‡¶æ‡¶®‡ßá ‡¶§‡ßÅ‡¶Æ‡¶ø ‡¶è‡¶ï‡¶ü‡¶æ bug ‡¶ï‡¶∞‡ßá‡¶õ‡ßã ‚Äî ‡¶§‡ßÅ‡¶Æ‡¶ø m = 0 ‡¶•‡ßá‡¶ï‡ßá ‡¶∂‡ßÅ‡¶∞‡ßÅ ‡¶ï‡¶∞‡ßá‡¶õ‡ßã, ‡¶Ö‡¶•‡¶ö ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ ‡¶∂‡ßÅ‡¶∞‡ßÅ ‡¶π‡¶ì‡ßü‡¶æ‡¶∞ ‡¶ï‡¶•‡¶æ 1 ‡¶•‡ßá‡¶ï‡ßá! ‡¶∏‡¶†‡¶ø‡¶ï ‡¶π‡¶¨‡ßá:

cpp
Copy
Edit
for(int m=1; m <= grid.size()*grid.size(); m++)
üîÅ Repeated number ‡¶¨‡ßá‡¶∞ ‡¶ï‡¶∞‡¶æ
cpp
Copy
Edit
for(auto it:freq)
{
  if(it.second>1)
  {
    ans.push_back(it.first);  // repeated number
  }
}
‡¶è‡¶ñ‡¶æ‡¶®‡ßá ‡¶§‡ßÅ‡¶Æ‡¶ø map ‡¶¶‡ßá‡¶ñ‡ßá ‡¶Ø‡ßá‡¶ü‡¶æ ‡ßß ‡¶¨‡¶æ‡¶∞‡ßá‡¶∞ ‡¶¨‡ßá‡¶∂‡¶ø ‡¶è‡¶∏‡ßá‡¶õ‡ßá ‡¶∏‡ßá‡¶ü‡¶æ‡¶ï‡ßá repeated number ‡¶π‡¶ø‡¶∏‡ßá‡¶¨‡ßá ‡¶ß‡¶∞‡ßá‡¶õ‡ßã ‚Äî ‡¶è‡¶ï‡¶¶‡¶Æ ‡¶†‡¶ø‡¶ï‡•§

üî¢ Missing Number ‡¶¨‡ßá‡¶∞ ‡¶ï‡¶∞‡¶æ
cpp
Copy
Edit
int sum2=0;
for(int k=0;k<ans.size();k++)
{
  sum2+=ans[k];
}
int miss=actualsum-sum1+sum2;
ans.push_back(miss);
üîπ sum1: ‡¶Ø‡ßá ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ‡¶ó‡ßÅ‡¶≤‡¶æ grid-‡¶è ‡¶Ü‡¶õ‡ßá ‡¶§‡¶æ‡¶∞ ‡¶Ø‡ßã‡¶ó‡¶´‡¶≤
üîπ actualsum: 1 ‡¶•‡ßá‡¶ï‡ßá n¬≤ ‡¶™‡¶∞‡ßç‡¶Ø‡¶®‡ßç‡¶§ ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ‡¶∞ ‡¶Ø‡ßã‡¶ó‡¶´‡¶≤
üîπ ‡¶§‡¶æ‡¶π‡¶≤‡ßá, missing = actualsum - sum1 + repeated

‚úÖ Output Return:
cpp
Copy
Edit
return ans;  // [repeated, missing]
Test All test cases:
--------------------
  ‚úÖ ‡¶ü‡ßá‡¶∏‡ßç‡¶ü ‡¶ï‡ßá‡¶∏ 1 ‡¶¨‡¶ø‡¶∂‡ßç‡¶≤‡ßá‡¶∑‡¶£:
Input: grid = [[1,3],[2,2]]
n = 2, ‡¶§‡¶æ‡¶á n¬≤ = 4 ‚Üí ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ ‡¶π‡¶¨‡ßá 1 to 4

freq:

1 ‚Üí 1

2 ‚Üí 2 ‚ùå

3 ‚Üí 1

4 ‚Üí ‚ùå (missing)

sum1 = 1 + 3 + 2 + 2 = 8
actualsum = 1 + 2 + 3 + 4 = 10
repeated = 2

‚û°Ô∏è missing = 10 - 8 + 2 = 4

‚úÖ Output: [2, 4]

‚úÖ ‡¶ü‡ßá‡¶∏‡ßç‡¶ü ‡¶ï‡ßá‡¶∏ 2 ‡¶¨‡¶ø‡¶∂‡ßç‡¶≤‡ßá‡¶∑‡¶£:
Input: [[9,1,7],[8,9,2],[3,4,6]]
n = 3 ‚Üí n¬≤ = 9

‡¶∏‡¶¨ ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ:
1,2,3,4,5,6,7,8,9

Repeat: 9 (‡¶¶‡ßÅ‡¶á‡¶¨‡¶æ‡¶∞ ‡¶Ü‡¶õ‡ßá)
Missing: 5

‚úÖ Output: [9, 5]

‚úÖ ‡¶ï‡ßá‡¶®‡ßã ‡¶è‡¶á solution Accepted ‡¶π‡ßü‡ßá‡¶õ‡ßá?
‡¶§‡ßÅ‡¶Æ‡¶ø frequency map ‡¶¶‡¶ø‡ßü‡ßá ‡¶¨‡¶æ‡¶∞‡¶¨‡¶æ‡¶∞ ‡¶Ü‡¶∏‡¶æ ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ ‡¶¨‡ßá‡¶∞ ‡¶ï‡¶∞‡ßá‡¶õ‡ßã ‚Äî ‚úÖ efficient

‡¶§‡ßÅ‡¶Æ‡¶ø sum ‡¶¶‡¶ø‡ßü‡ßá missing number ‡¶π‡¶ø‡¶∏‡¶æ‡¶¨ ‡¶ï‡¶∞‡ßá‡¶õ‡ßã ‚Äî ‚úÖ logic correct

‡¶§‡ßÅ‡¶Æ‡¶ø ‡¶∏‡¶Æ‡¶∏‡ßç‡¶§ edge case cover ‡¶ï‡¶∞‡ßá‡¶õ‡ßã ‚Äî ‚úÖ

üîç ‡¶ï‡¶ø‡¶õ‡ßÅ Improvement Suggestion:
cpp
Copy
Edit
int actualsum = (grid.size() * grid.size()) * (grid.size() * grid.size() + 1) / 2;
‡¶è‡¶≠‡¶æ‡¶¨‡ßá ‡¶ï‡¶∞‡¶≤‡ßá loop ‡¶®‡¶æ ‡¶ö‡¶æ‡¶≤‡¶ø‡ßü‡ßá ‡¶∏‡¶∞‡¶æ‡¶∏‡¶∞‡¶ø sum ‡¶¨‡ßá‡¶∞ ‡¶ï‡¶∞‡¶æ ‡¶Ø‡¶æ‡ßü‡•§

üéâ Summary (Bangla):
‚úÖ ‡¶§‡ßÅ‡¶Æ‡¶ø ‡¶®‡¶ø‡¶ú‡ßá ‡¶®‡¶ø‡¶ú‡ßá ‡¶ö‡¶ø‡¶®‡ßç‡¶§‡¶æ ‡¶ï‡¶∞‡ßá ‡¶Ø‡ßá ‡¶ß‡¶æ‡¶™‡ßá ‡¶ß‡¶æ‡¶™‡ßá ‡¶è‡¶á ‡¶∏‡¶Æ‡¶æ‡¶ß‡¶æ‡¶® ‡¶¨‡ßá‡¶∞ ‡¶ï‡¶∞‡ßá‡¶õ‡ßã ‚Äî ‡¶è‡¶ü‡¶æ ‡¶Ö‡¶®‡ßá‡¶ï ‡¶¨‡ßú achievement‡•§
‚úÖ ‡¶§‡ßÅ‡¶Æ‡¶ø frequency map + sum-‡¶è‡¶∞ formula ‡¶¶‡ßÅ‡¶ü‡ßã ‡¶Æ‡¶ø‡¶≤‡¶ø‡ßü‡ßá clever logic apply ‡¶ï‡¶∞‡ßá‡¶õ‡ßã‡•§
‚úÖ ‡¶§‡ßÅ‡¶Æ‡¶ø ‡¶∏‡¶ï‡¶≤ ‡¶ü‡ßá‡¶∏‡ßç‡¶ü ‡¶ï‡ßá‡¶∏‡ßá ‡¶∏‡¶†‡¶ø‡¶ï ‡¶â‡¶§‡ßç‡¶§‡¶∞ ‡¶™‡ßá‡ßü‡ßá‡¶õ‡ßã ‡¶¨‡¶≤‡ßá LeetCode ‡¶è‡¶á solution Accepted ‡¶ï‡¶∞‡ßá‡¶õ‡ßá‡•§
